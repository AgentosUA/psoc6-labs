ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	prvTaskIsTaskSuspended, %function
  25              	prvTaskIsTaskSuspended:
  26              	.LFB527:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0\\Source\\tasks.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     All rights reserved
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     This file is part of the FreeRTOS distribution.
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    platform software that is more than just the market leader, it     *
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    is the industry's de facto standard.                               *
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 2


  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** */
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Standard includes. */
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include <stdlib.h>
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include <string.h>
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** task.h is included from an application file. */
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* FreeRTOS includes. */
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "FreeRTOS.h"
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "task.h"
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "timers.h"
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "StackMacros.h"
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 3


  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** functions but without including stdio.h here. */
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#include <stdio.h>
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** made to free the RAM that was allocated statically.
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB. */
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE ( ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && (
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 4


 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * global, rather than file scope.
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define static
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	microcontroller architecture. */
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	state task. */
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			--uxTopPriority;																			\
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	being used. */
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 5


 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	architecture being used. */
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																								\
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** count overflows. */
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {																									\
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	List_t *pxTemp;																					\
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xNumOfOverflows++;																				\
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 6


 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** to its original value when it is released. */
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * (the task's run time environment, including register values)
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** typedef struct tskTaskControlBlock
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portSTACK_GROWTH > 0 )
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the end of the stack on architectures where the stack 
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 7


 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		void *pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* See the comments above the definition of
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint8_t ucDelayAborted;
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** } tskTCB;
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** typedef tskTCB TCB_t;
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*lint -e956 A manual analysis and inspection has been used to determine which
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static variables must be declared volatile. */
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 8


 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) 0U;
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** accessed from a critical section. */
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*lint +e956 */
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 9


 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* File private functions. --------------------------------*/
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /**
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * is in any other state.
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * automatically upon the creation of the first task.
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * creation of the first user task.
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * including the stack pointed to by the TCB.
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 10


 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * and its TCB deleted.
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * either the current or the overflow delayed task list.
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * a suspended list, etc.).
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * NORMAL APPLICATION CODE.
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * set to a value other than 1.
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 11


 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * will exit the Blocked state.
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 * human readable tables of task information.
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 */
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * dynamically to fill in the structure's members.
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TCB_t *pxNewTCB,
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION; /*lint !e971 Unqualified char
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * under the control of the scheduler.
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer ) /*lint !e971 Unqualified char types are allowed for st
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 12


 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function - use them. */
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = NULL;
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( portUSING_MPU_WRAPPERS == 1 )
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			not static allocation is being used. */
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxNewTCB != NULL )
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				this task had a statically allocated stack in case it is
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				later deleted.  The TCB was allocated dynamically. */
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->pcName,
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 13


 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							const char * const pcName,
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							const uint16_t usStackDepth,
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							void * const pvParameters,
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							UBaseType_t uxPriority,
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask ) /*lint !e971 Unqualified char types are allowed for str
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the TCB then the stack. */
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			allocation is being used. */
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxNewTCB != NULL )
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				be deleted later if required. */
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vPortFree( pxNewTCB );
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxNewTCB = NULL;
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t *pxStack;
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 14


 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxStack != NULL )
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Allocate space for the TCB. */
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxNewTCB != NULL )
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it again. */
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vPortFree( pxStack );
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB = NULL;
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxNewTCB != NULL )
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 15


 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TCB_t *pxNewTCB,
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) /*lint !e971 Unqualified char types are allowed fo
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** StackType_t *pxTopOfStack;
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t x;
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( ( configUSE_TRACE_FACILITY == 1 ) || ( INC
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	by the port. */
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		performed. */
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the task name in the TCB. */
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 16


 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			break;
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	remove the privilege bit if one is present. */
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Event lists are always in priority order. */
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 17


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xRegions;
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the	top of stack variable is updated. */
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 18


 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	updated. */
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the suspended state - make this the current task. */
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				initialisation required.  We will not recover if this call
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				fails, but we will report the failure. */
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvInitialiseTaskLists();
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			current task if it is the highest priority task to be created
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			so far. */
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 19


1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxTaskNumber++;
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		then it should run now. */
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being deleted. */
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 20


1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Remove task from the ready list. */
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			not return. */
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxTaskNumber++;
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				required. */
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the task that has just been deleted. */
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 21


1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been deleted. */
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			block. */
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 22


1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				tick time is less than the wake time. */
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		have put ourselves to sleep. */
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portYIELD_WITHIN_API();
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 23


1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_DELAY();
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task that is removed from the event list while the
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is resumed.
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				executing task. */
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		have put ourselves to sleep. */
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portYIELD_WITHIN_API();
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eTaskState eReturn;
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	List_t *pxStateList;
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTCB );
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eRunning;
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 24


1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				lists. */
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eBlocked;
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					indefinitely? */
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						eReturn = eSuspended;
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						eReturn = eBlocked;
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					all. */
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					eReturn = eDeleted;
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				Ready (including pending ready) state. */
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eReady;
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return eReturn;
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 25


1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is being queried. */
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 26


1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is being changed. */
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#else
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				priority than the calling task. */
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The priority of a task other than the currently
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						running task is being raised.  Is the priority being
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						raised above that of the running task? */
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						else
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 27


1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The priority of the running task is being raised,
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						but the running task must already be the highest
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						priority task able to run so no yield is required. */
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Setting the priority of the running task down means
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					there may now be another task of higher priority that
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is ready to execute. */
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					require a yield as the running task must be above the
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					new priority of the task being modified. */
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				before its uxPriority member is changed so the
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					currently using an inherited priority. */
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The base priority gets set whatever. */
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				being used for anything else. */
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 28


1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				nothing more than change it's priority variable. However, if
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				in the list appropriate to its new priority. */
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is currently in its ready list - remove before adding
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it to it's new ready list.  As we are in a critical section we
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					can do this even if the scheduler is suspended. */
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						there is no need to check again and the port level
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						reset macro can be called directly. */
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				optimised task selection is not being used. */
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 29


1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being suspended. */
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			suspended list. */
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is now in the Suspended state. */
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The current task has just been suspended. */
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 30


1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				must be adjusted to point to a different task. */
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is. */
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB = NULL;
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vTaskSwitchContext();
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
  28              		.loc 1 1657 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		section. */
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1665 0
  35 0000 0246     		mov	r2, r0
  36 0002 08B9     		cbnz	r0, .L2
  37              		.loc 1 1665 0 is_stmt 0 discriminator 1
  38              		.syntax unified
  39              	@ 1665 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
  40 0004 72B6     		 cpsid i 
  41              	@ 0 "" 2
  42              		.thumb
  43              		.syntax unified
  44              	.L3:
  45 0006 FEE7     		b	.L3
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 31


  46              	.L2:
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  47              		.loc 1 1668 0 is_stmt 1
  48 0008 4169     		ldr	r1, [r0, #20]
  49 000a 0B4B     		ldr	r3, .L12
  50 000c 9942     		cmp	r1, r3
  51 000e 01D1     		bne	.L7
  52 0010 0123     		movs	r3, #1
  53 0012 00E0     		b	.L4
  54              	.L7:
  55 0014 0023     		movs	r3, #0
  56              	.L4:
  57              		.loc 1 1668 0 is_stmt 0 discriminator 4
  58 0016 43B1     		cbz	r3, .L8
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  59              		.loc 1 1671 0 is_stmt 1
  60 0018 926A     		ldr	r2, [r2, #40]
  61 001a 0849     		ldr	r1, .L12+4
  62 001c 8A42     		cmp	r2, r1
  63 001e 06D0     		beq	.L9
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE )
  64              		.loc 1 1675 0
  65 0020 02B1     		cbz	r2, .L6
  66 0022 0023     		movs	r3, #0
  67              	.L6:
  68              		.loc 1 1675 0 is_stmt 0 discriminator 4
  69 0024 2BB9     		cbnz	r3, .L11
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  70              		.loc 1 1658 0 is_stmt 1
  71 0026 0020     		movs	r0, #0
  72              	.LVL1:
  73 0028 7047     		bx	lr
  74              	.LVL2:
  75              	.L8:
  76 002a 0020     		movs	r0, #0
  77              	.LVL3:
  78 002c 7047     		bx	lr
  79              	.LVL4:
  80              	.L9:
  81 002e 0020     		movs	r0, #0
  82              	.LVL5:
  83 0030 7047     		bx	lr
  84              	.LVL6:
  85              	.L11:
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xReturn = pdTRUE;
  86              		.loc 1 1677 0
  87 0032 0120     		movs	r0, #1
  88              	.LVL7:
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 32


1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  89              		.loc 1 1695 0
  90 0034 7047     		bx	lr
  91              	.L13:
  92 0036 00BF     		.align	2
  93              	.L12:
  94 0038 00000000 		.word	.LANCHOR0
  95 003c 14000000 		.word	.LANCHOR0+20
  96              		.cfi_endproc
  97              	.LFE527:
  98              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
  99              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 100              		.align	2
 101              		.thumb
 102              		.thumb_func
 103              		.type	prvResetNextTaskUnblockTime, %function
 104              	prvResetNextTaskUnblockTime:
 105              	.LFB554:
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToResume );
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		currently executing task. */
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 33


1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* As we are in a critical section we can access the ready
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					lists even if the scheduler is suspended. */
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* We may have just resumed a higher priority task. */
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						but will leave the lists in the correct state for the
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						next yield. */
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToResume );
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 34


1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					suspended list to the ready list directly. */
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					unsuspended. */
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xYieldRequired;
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskStartScheduler( void )
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 35


1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		address of the RAM then create the idle task. */
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												"IDLE",
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												ulIdleTaskStackSize,
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												( void * ) NULL,
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFAIL;
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else
1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								( void * ) NULL,
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xReturn == pdPASS )
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( xReturn == pdPASS )
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		starts to run. */
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 36


1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			structure specific to the task that will run first. */
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the run time counter time base. */
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portable interface. */
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function will not return. */
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		or the timer task. */
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) xIdleTaskHandle;
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskEndScheduler( void )
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vPortEndScheduler();
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSuspendAll( void )
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 37


1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	http://goo.gl/wu4acr */
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	++uxSchedulerSuspended;
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xReturn;
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		running. */
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			processed. */
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			idle priority.  This path can only be reached if
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 38


2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		--uxSchedulerSuspended;
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				appropriate ready list. */
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					task then a yield must be performed. */
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB != NULL )
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 39


2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					which may have prevented the next unblock time from being
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					important for low power tickless implementations, where
2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					state. */
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				time. */
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						do
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								xYieldPending = pdTRUE;
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							else
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							--uxPendedCounts;
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						uxPendedTicks = 0;
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#endif
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 40


2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xAlreadyYielded;
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTicks;
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTicks = xTickCount;
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xTicks;
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xReturn;
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = xTickCount;
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 41


2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t. */
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	queried. */
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t x;
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char cNextChar;
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mismatch. */
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Characters didn't match. */
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						found. */
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxReturn = pxNextTCB;
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 42


2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxReturn != NULL )
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The handle has been found. */
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pxReturn;
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t* pxTCB;
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Search the ready lists. */
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxQueue--;
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB != NULL )
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Found the handle. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Search the delayed lists. */
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == NULL )
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == NULL )
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 43


2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB == NULL )
2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Search the suspended list. */
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB == NULL )
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Search the deleted list. */
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xTaskResumeAll();
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task in the Ready state. */
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				do
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxQueue--;
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task in the Blocked state. */
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 44


2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					each task in the Suspended state. */
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pulTotalRunTime = 0;
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xTaskResumeAll();
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxTask;
2388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xIdleTaskHandle;
2401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 45


2403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 1. */
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		each stepped tick. */
2417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount += xTicksToJump;
2419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
2431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTCB );
2433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			it is actually in the Blocked state. */
2438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				scheduler is suspended. */
2443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is used. */
2449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskENTER_CRITICAL();
2450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 46


2460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskEXIT_CRITICAL();
2462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				switch if preemption is turned off. */
2468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						is unsuspended. */
2477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
2478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTaskResumeAll();
2492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t * pxTCB;
2502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xItemValue;
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tasks to be unblocked. */
2508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		block. */
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + 1;
2514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		delayed lists if it wraps to 0. */
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 47


2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = xConstTickCount;
2518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U )
2520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		look any further down the list. */
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			for( ;; )
2535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					to the maximum possible value so it is extremely
2540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					unlikely that the
2541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					next time through. */
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					at which the task at the head of the delayed list must
2551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be removed from the Blocked state. */
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						item value is the time at which the task at the head
2559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						state -	so record the item value in
2561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xNextTaskUnblockTime. */
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 48


2574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it from the event list. */
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					list. */
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					context switch if preemption is turned off. */
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						only be performed if the unblocked task has a
2594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						priority that is equal to or higher than the
2595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						currently executing task. */
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
2600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						else
2601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
2604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 49


2631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vApplicationTickHook();
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		++uxPendedTicks;
2644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		scheduler is locked. */
2647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationTickHook();
2650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xSwitchRequired;
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		getting set. */
2679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 50


2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
2691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
2693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
2718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
2722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
2735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 51


2745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFAIL;
2753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSwitchContext( void )
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		switch. */
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
2768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdFALSE;
2772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
2779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				protection here so count values are only valid until the timer
2786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				are provided by the application, not the kernel. */
2789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 52


2802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t * const pulStack = ( uint32_t * ) pxCurrentTCB->pxStack;							\
2804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
2805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pulStack[ 0 ] != ulCheckValue ) ||												\
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
2810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationStackOverflowHook( ( TaskHandle_t ) pxCurrentTCB, pxCurrentTCB->pcTaskName );	\
2812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
2813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		optimised asm code. */
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			structure specific to this task. */
2824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
2834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
2851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the event groups implementation. */
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	task that is not in the Blocked state. */
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 53


2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the task level). */
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
2877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This function should not be called by application code hence the
2879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		can be used in place of vListInsert. */
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TIMERS */
2903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
2909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	called from a critical section within an ISR. */
2912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the delayed list, and add it to the ready list.
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 54


2916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxEventList is not empty. */
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
2931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
2935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pending until the scheduler is resumed. */
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
2937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
2942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
2943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		it should force a context switch now. */
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdTRUE;
2945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
2947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdFALSE;
2953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
2959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
2960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
2961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
2962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
2963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
2964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
2968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 55


2973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemV
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
2977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the event flags implementation. */
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
2981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the new item value in the event list. */
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
2984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
2986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event flags. */
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
2990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
2992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
2993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	lists. */
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return true if the task removed from the event list has
3000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		a higher priority than the calling task.  This allows
3001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the calling task to know if it should force a context
3002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		switch now. */
3003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdTRUE;
3004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
3008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
3010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdFALSE;
3012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 56


3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
3034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				but has the same result. */
3043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
3045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				specified is the maximum block time then the task should block
3054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFALSE;
3056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The tick count is greater than the time at which
3063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			was called. */
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdTRUE;
3068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /
3070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFALSE;
3075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdTRUE;
3079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
3082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 57


3087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskMissedYield( void )
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xYieldPending = pdTRUE;
3090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask != NULL )
3101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = 0U;
3108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
3111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask != NULL )
3123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
3132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * -----------------------------------------------------------
3133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The Idle task.
3134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * ----------------------------------------------------------
3135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 58


3144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop warnings. */
3145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) pvParameters;
3146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( ;; )
3151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			see if any other task has become available.  If we are using
3160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			will automatically get the processor anyway. */
3162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskYIELD();
3163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			timeslice.
3172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskYIELD();
3180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			allows the application designer to add background functionality
3194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			without the overhead of a separate task.
3195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationIdleHook();
3198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 59


3201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		user defined low power mode	implementations require
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			test of the expected idle time is performed without the
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			valid. */
3214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskSuspendAll();
3219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					time can be sampled again, and this time its value can
3222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be used. */
3223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) xTaskResumeAll();
3238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 60


3258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eAbortSleep;
3261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eAbortSleep;
3266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupts. */
3273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return eReturn;
3284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvReturn = NULL;
3310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 61


3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = NULL;
3320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pvReturn;
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the calling task. */
3336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxPriority;
3347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	using list2. */
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 62


3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		BaseType_t xListIsEmpty;
3384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
3386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		too often in the idle task. */
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
3390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
3392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( void ) xTaskResumeAll();
3394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xListIsEmpty == pdFALSE )
3396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				TCB_t *pxTCB;
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskENTER_CRITICAL();
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxCurrentNumberOfTasks;
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
3405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskEXIT_CRITICAL();
3407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
3409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 63


3429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the suspended list then there is a chance it is
3438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			actually just blocked indefinitely - so really it should be reported as
3439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being in the Blocked state. */
3440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTaskStatus->eCurrentState == eSuspended )
3441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskSuspendAll();
3443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTaskStatus->eCurrentState = eBlocked;
3447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xTaskResumeAll();
3450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* INCLUDE_vTaskSuspend */
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the value
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		of eState passed into this function is eInvalid - otherwise the state is
3476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		just set to whatever is passed in. */
3477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( eState != eInvalid )
3478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eState;
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( xTask );
3484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 64


3486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#else
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile TCB_t *pxNextTCB, *pxFirstTCB;
3514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
3525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask++;
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxTask;
3537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 65


3543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulCount = 0U;
3547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulCount++;
3552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
3569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
3585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 66


3600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the stack and TCB. */
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB );
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE == 1 )
3615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			check what was statically allocated before trying to free the
3618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			memory. */
3619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				must be freed. */
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB );
3625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				only memory that must be freed. */
3630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB );
3631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				nothing needs to be freed. */
3636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	)
3637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 106              		.loc 1 3647 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
3648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
3649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 111              		.loc 1 3650 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 67


 112 0000 094B     		ldr	r3, .L19
 113 0002 9B6A     		ldr	r3, [r3, #40]
 114 0004 1B68     		ldr	r3, [r3]
 115 0006 0BB9     		cbnz	r3, .L18
 116 0008 0123     		movs	r3, #1
 117 000a 00E0     		b	.L15
 118              	.L18:
 119 000c 0023     		movs	r3, #0
 120              	.L15:
 121              		.loc 1 3650 0 is_stmt 0 discriminator 4
 122 000e 23B1     		cbz	r3, .L16
3651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		there is an item in the delayed list. */
3656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 123              		.loc 1 3656 0 is_stmt 1
 124 0010 4FF0FF32 		mov	r2, #-1
 125 0014 044B     		ldr	r3, .L19
 126 0016 DA62     		str	r2, [r3, #44]
 127 0018 7047     		bx	lr
 128              	.L16:
3657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
3659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from the Blocked state. */
3664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 129              		.loc 1 3664 0
 130 001a 034B     		ldr	r3, .L19
 131 001c 9A6A     		ldr	r2, [r3, #40]
 132 001e D268     		ldr	r2, [r2, #12]
 133 0020 D268     		ldr	r2, [r2, #12]
 134              	.LVL8:
3665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 135              		.loc 1 3665 0
 136 0022 5268     		ldr	r2, [r2, #4]
 137              	.LVL9:
 138 0024 DA62     		str	r2, [r3, #44]
 139 0026 7047     		bx	lr
 140              	.L20:
 141              		.align	2
 142              	.L19:
 143 0028 00000000 		.word	.LANCHOR0
 144              		.cfi_endproc
 145              	.LFE554:
 146              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 147              		.section	.text.prvDeleteTCB,"ax",%progbits
 148              		.align	2
 149              		.thumb
 150              		.thumb_func
 151              		.type	prvDeleteTCB, %function
 152              	prvDeleteTCB:
 153              	.LFB553:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 68


3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 154              		.loc 1 3593 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              	.LVL10:
 159 0000 10B5     		push	{r4, lr}
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 4, -8
 162              		.cfi_offset 14, -4
 163 0002 0446     		mov	r4, r0
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB );
 164              		.loc 1 3611 0
 165 0004 006B     		ldr	r0, [r0, #48]
 166              	.LVL11:
 167 0006 FFF7FEFF 		bl	vPortFree
 168              	.LVL12:
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 169              		.loc 1 3612 0
 170 000a 2046     		mov	r0, r4
 171 000c FFF7FEFF 		bl	vPortFree
 172              	.LVL13:
 173 0010 10BD     		pop	{r4, pc}
 174              		.cfi_endproc
 175              	.LFE553:
 176              		.size	prvDeleteTCB, .-prvDeleteTCB
 177 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 178              		.align	2
 179              		.thumb
 180              		.thumb_func
 181              		.type	prvInitialiseNewTask, %function
 182              	prvInitialiseNewTask:
 183              	.LFB518:
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** StackType_t *pxTopOfStack;
 184              		.loc 1 775 0
 185              		.cfi_startproc
 186              		@ args = 16, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              	.LVL14:
 189 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 190              		.cfi_def_cfa_offset 32
 191              		.cfi_offset 4, -32
 192              		.cfi_offset 5, -28
 193              		.cfi_offset 6, -24
 194              		.cfi_offset 7, -20
 195              		.cfi_offset 8, -16
 196              		.cfi_offset 9, -12
 197              		.cfi_offset 10, -8
 198              		.cfi_offset 14, -4
 199 0004 8246     		mov	r10, r0
 200 0006 8946     		mov	r9, r1
 201 0008 1546     		mov	r5, r2
 202 000a 9846     		mov	r8, r3
 203 000c 089F     		ldr	r7, [sp, #32]
 204 000e 099E     		ldr	r6, [sp, #36]
 205 0010 0A9C     		ldr	r4, [sp, #40]
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 69


 206              		.loc 1 797 0
 207 0012 9200     		lsls	r2, r2, #2
 208              	.LVL15:
 209 0014 A521     		movs	r1, #165
 210              	.LVL16:
 211 0016 206B     		ldr	r0, [r4, #48]
 212              	.LVL17:
 213 0018 FFF7FEFF 		bl	memset
 214              	.LVL18:
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 215              		.loc 1 807 0
 216 001c 236B     		ldr	r3, [r4, #48]
 217 001e 05F18042 		add	r2, r5, #1073741824
 218 0022 013A     		subs	r2, r2, #1
 219 0024 03EB8205 		add	r5, r3, r2, lsl #2
 220              	.LVL19:
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 221              		.loc 1 808 0
 222 0028 25F00705 		bic	r5, r5, #7
 223              	.LVL20:
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 224              		.loc 1 827 0
 225 002c 0023     		movs	r3, #0
 226 002e 08E0     		b	.L24
 227              	.LVL21:
 228              	.L26:
 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 229              		.loc 1 829 0
 230 0030 19F80310 		ldrb	r1, [r9, r3]	@ zero_extendqisi2
 231 0034 E218     		adds	r2, r4, r3
 232 0036 82F83410 		strb	r1, [r2, #52]
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 233              		.loc 1 834 0
 234 003a 19F80320 		ldrb	r2, [r9, r3]	@ zero_extendqisi2
 235 003e 12B1     		cbz	r2, .L25
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 236              		.loc 1 827 0 discriminator 2
 237 0040 0133     		adds	r3, r3, #1
 238              	.LVL22:
 239              	.L24:
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 240              		.loc 1 827 0 is_stmt 0 discriminator 1
 241 0042 0F2B     		cmp	r3, #15
 242 0044 F4D9     		bls	.L26
 243              	.L25:
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 244              		.loc 1 846 0 is_stmt 1
 245 0046 0023     		movs	r3, #0
 246              	.LVL23:
 247 0048 84F84330 		strb	r3, [r4, #67]
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 248              		.loc 1 850 0
 249 004c 132F     		cmp	r7, #19
 250 004e 00D9     		bls	.L27
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 251              		.loc 1 852 0
 252 0050 1327     		movs	r7, #19
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 70


 253              	.L27:
 254              	.LVL24:
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 255              		.loc 1 859 0
 256 0052 E762     		str	r7, [r4, #44]
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 257              		.loc 1 867 0
 258 0054 201D     		adds	r0, r4, #4
 259 0056 FFF7FEFF 		bl	vListInitialiseItem
 260              	.LVL25:
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 261              		.loc 1 868 0
 262 005a 04F11800 		add	r0, r4, #24
 263 005e FFF7FEFF 		bl	vListInitialiseItem
 264              	.LVL26:
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 265              		.loc 1 872 0
 266 0062 2461     		str	r4, [r4, #16]
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 267              		.loc 1 875 0
 268 0064 C7F11403 		rsb	r3, r7, #20
 269 0068 A361     		str	r3, [r4, #24]
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 270              		.loc 1 876 0
 271 006a 6462     		str	r4, [r4, #36]
 272              	.LVL27:
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 273              		.loc 1 909 0
 274 006c 0023     		movs	r3, #0
 275 006e 06E0     		b	.L28
 276              	.LVL28:
 277              	.L29:
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 278              		.loc 1 911 0 discriminator 3
 279 0070 03F11002 		add	r2, r3, #16
 280 0074 04EB8202 		add	r2, r4, r2, lsl #2
 281 0078 0021     		movs	r1, #0
 282 007a 5160     		str	r1, [r2, #4]
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 283              		.loc 1 909 0 discriminator 3
 284 007c 0133     		adds	r3, r3, #1
 285              	.LVL29:
 286              	.L28:
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 287              		.loc 1 909 0 is_stmt 0 discriminator 1
 288 007e 042B     		cmp	r3, #4
 289 0080 F6D9     		bls	.L29
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 290              		.loc 1 918 0 is_stmt 1
 291 0082 0023     		movs	r3, #0
 292              	.LVL30:
 293 0084 A365     		str	r3, [r4, #88]
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 294              		.loc 1 919 0
 295 0086 84F85C30 		strb	r3, [r4, #92]
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 296              		.loc 1 946 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 71


 297 008a 4246     		mov	r2, r8
 298 008c 5146     		mov	r1, r10
 299 008e 2846     		mov	r0, r5
 300 0090 FFF7FEFF 		bl	pxPortInitialiseStack
 301              	.LVL31:
 302 0094 2060     		str	r0, [r4]
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 303              		.loc 1 950 0
 304 0096 06B1     		cbz	r6, .L23
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 305              		.loc 1 954 0
 306 0098 3460     		str	r4, [r6]
 307              	.L23:
 308 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 309              		.cfi_endproc
 310              	.LFE518:
 311              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 312 009e 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 313              		.align	2
 314              		.thumb
 315              		.thumb_func
 316              		.type	prvInitialiseTaskLists, %function
 317              	prvInitialiseTaskLists:
 318              	.LFB551:
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxPriority;
 319              		.loc 1 3345 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 70B5     		push	{r4, r5, r6, lr}
 324              		.cfi_def_cfa_offset 16
 325              		.cfi_offset 4, -16
 326              		.cfi_offset 5, -12
 327              		.cfi_offset 6, -8
 328              		.cfi_offset 14, -4
 329              	.LVL32:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 330              		.loc 1 3348 0
 331 0002 0024     		movs	r4, #0
 332 0004 07E0     		b	.L34
 333              	.LVL33:
 334              	.L35:
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 335              		.loc 1 3350 0 discriminator 3
 336 0006 04EB8402 		add	r2, r4, r4, lsl #2
 337 000a 9300     		lsls	r3, r2, #2
 338 000c 1048     		ldr	r0, .L37
 339 000e 1844     		add	r0, r0, r3
 340 0010 FFF7FEFF 		bl	vListInitialise
 341              	.LVL34:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 342              		.loc 1 3348 0 discriminator 3
 343 0014 0134     		adds	r4, r4, #1
 344              	.LVL35:
 345              	.L34:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 346              		.loc 1 3348 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 72


 347 0016 132C     		cmp	r4, #19
 348 0018 F5D9     		bls	.L35
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 349              		.loc 1 3353 0 is_stmt 1
 350 001a 0E4C     		ldr	r4, .L37+4
 351              	.LVL36:
 352 001c 04F5E076 		add	r6, r4, #448
 353 0020 3046     		mov	r0, r6
 354 0022 FFF7FEFF 		bl	vListInitialise
 355              	.LVL37:
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 356              		.loc 1 3354 0
 357 0026 04F5EA75 		add	r5, r4, #468
 358 002a 2846     		mov	r0, r5
 359 002c FFF7FEFF 		bl	vListInitialise
 360              	.LVL38:
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 361              		.loc 1 3355 0
 362 0030 04F11400 		add	r0, r4, #20
 363 0034 FFF7FEFF 		bl	vListInitialise
 364              	.LVL39:
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 365              		.loc 1 3359 0
 366 0038 04F5F470 		add	r0, r4, #488
 367 003c FFF7FEFF 		bl	vListInitialise
 368              	.LVL40:
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 369              		.loc 1 3365 0
 370 0040 2046     		mov	r0, r4
 371 0042 FFF7FEFF 		bl	vListInitialise
 372              	.LVL41:
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 373              		.loc 1 3371 0
 374 0046 A662     		str	r6, [r4, #40]
3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 375              		.loc 1 3372 0
 376 0048 C4F8FC51 		str	r5, [r4, #508]
 377 004c 70BD     		pop	{r4, r5, r6, pc}
 378              	.L38:
 379 004e 00BF     		.align	2
 380              	.L37:
 381 0050 30000000 		.word	.LANCHOR0+48
 382 0054 00000000 		.word	.LANCHOR0
 383              		.cfi_endproc
 384              	.LFE551:
 385              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 386              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 387              		.align	2
 388              		.thumb
 389              		.thumb_func
 390              		.type	prvAddNewTaskToReadyList, %function
 391              	prvAddNewTaskToReadyList:
 392              	.LFB519:
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 393              		.loc 1 964 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 73


 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              	.LVL42:
 398 0000 38B5     		push	{r3, r4, r5, lr}
 399              		.cfi_def_cfa_offset 16
 400              		.cfi_offset 3, -16
 401              		.cfi_offset 4, -12
 402              		.cfi_offset 5, -8
 403              		.cfi_offset 14, -4
 404 0002 0446     		mov	r4, r0
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 405              		.loc 1 967 0
 406 0004 FFF7FEFF 		bl	vPortEnterCritical
 407              	.LVL43:
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 408              		.loc 1 969 0
 409 0008 264B     		ldr	r3, .L45
 410 000a D3F80022 		ldr	r2, [r3, #512]
 411 000e 0132     		adds	r2, r2, #1
 412 0010 C3F80022 		str	r2, [r3, #512]
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 413              		.loc 1 970 0
 414 0014 D3F80432 		ldr	r3, [r3, #516]
 415 0018 4BB9     		cbnz	r3, .L40
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 416              		.loc 1 974 0
 417 001a 224B     		ldr	r3, .L45
 418 001c C3F80442 		str	r4, [r3, #516]
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 419              		.loc 1 976 0
 420 0020 D3F80032 		ldr	r3, [r3, #512]
 421 0024 012B     		cmp	r3, #1
 422 0026 10D1     		bne	.L41
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 423              		.loc 1 981 0
 424 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 425              	.LVL44:
 426 002c 0DE0     		b	.L41
 427              	.L40:
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 428              		.loc 1 993 0
 429 002e 1D4B     		ldr	r3, .L45
 430 0030 D3F80832 		ldr	r3, [r3, #520]
 431 0034 4BB9     		cbnz	r3, .L41
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 432              		.loc 1 995 0
 433 0036 1B4B     		ldr	r3, .L45
 434 0038 D3F80432 		ldr	r3, [r3, #516]
 435 003c DA6A     		ldr	r2, [r3, #44]
 436 003e E36A     		ldr	r3, [r4, #44]
 437 0040 9A42     		cmp	r2, r3
 438 0042 02D8     		bhi	.L41
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 439              		.loc 1 997 0
 440 0044 174B     		ldr	r3, .L45
 441 0046 C3F80442 		str	r4, [r3, #516]
 442              	.L41:
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 74


 443              		.loc 1 1010 0
 444 004a 164A     		ldr	r2, .L45
 445 004c D2F80C32 		ldr	r3, [r2, #524]
 446 0050 0133     		adds	r3, r3, #1
 447 0052 C2F80C32 		str	r3, [r2, #524]
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 448              		.loc 1 1020 0
 449 0056 E36A     		ldr	r3, [r4, #44]
 450 0058 D2F81022 		ldr	r2, [r2, #528]
 451 005c 9342     		cmp	r3, r2
 452 005e 02D9     		bls	.L42
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 453              		.loc 1 1020 0 is_stmt 0 discriminator 1
 454 0060 104A     		ldr	r2, .L45
 455 0062 C2F81032 		str	r3, [r2, #528]
 456              	.L42:
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 457              		.loc 1 1020 0 discriminator 3
 458 0066 0F4D     		ldr	r5, .L45
 459 0068 05F13000 		add	r0, r5, #48
 460 006c 03EB8303 		add	r3, r3, r3, lsl #2
 461 0070 9A00     		lsls	r2, r3, #2
 462 0072 211D     		adds	r1, r4, #4
 463 0074 1044     		add	r0, r0, r2
 464 0076 FFF7FEFF 		bl	vListInsertEnd
 465              	.LVL45:
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 466              		.loc 1 1024 0 is_stmt 1 discriminator 3
 467 007a FFF7FEFF 		bl	vPortExitCritical
 468              	.LVL46:
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 469              		.loc 1 1026 0 discriminator 3
 470 007e D5F80832 		ldr	r3, [r5, #520]
 471 0082 6BB1     		cbz	r3, .L39
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 472              		.loc 1 1030 0
 473 0084 D5F80432 		ldr	r3, [r5, #516]
 474 0088 DA6A     		ldr	r2, [r3, #44]
 475 008a E36A     		ldr	r3, [r4, #44]
 476 008c 9A42     		cmp	r2, r3
 477 008e 07D2     		bcs	.L39
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 478              		.loc 1 1032 0
 479 0090 4FF08052 		mov	r2, #268435456
 480 0094 044B     		ldr	r3, .L45+4
 481 0096 1A60     		str	r2, [r3]
 482              		.syntax unified
 483              	@ 1032 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 484 0098 BFF34F8F 		dsb
 485              	@ 0 "" 2
 486              	@ 1032 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 487 009c BFF36F8F 		isb
 488              	@ 0 "" 2
 489              		.thumb
 490              		.syntax unified
 491              	.L39:
 492 00a0 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 75


 493              	.LVL47:
 494              	.L46:
 495 00a2 00BF     		.align	2
 496              	.L45:
 497 00a4 00000000 		.word	.LANCHOR0
 498 00a8 04ED00E0 		.word	-536810236
 499              		.cfi_endproc
 500              	.LFE519:
 501              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 502              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 503              		.align	2
 504              		.thumb
 505              		.thumb_func
 506              		.type	prvAddCurrentTaskToDelayedList, %function
 507              	prvAddCurrentTaskToDelayedList:
 508              	.LFB564:
3666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
3675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		individual execution thread. */
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
3692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 76


3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		locked then the mutex holder might now be NULL. */
3723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
3729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				not	being used for anything else. */
3733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
3734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				to be moved into a new list. */
3744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListI
3745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Just inherit the priority. */
3762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 77


3764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxTCB, pxCurrentTCB->uxPriority );
3766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			be the running state task. */
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task? */
3801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					holding	task then it must be the running state task.  Remove
3810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the	holding task from the ready	list. */
3811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 78


3821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					new	ready list. */
3822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					running to give back the mutex. */
3828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					This is only actually required in the corner case whereby
3833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					in an order different to that in which they were taken.
3835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					a task is waiting on it or not. */
3839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xReturn = pdTRUE;
3840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskEnterCritical( void )
3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
3867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
3871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
3873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
3874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
3875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
3876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
3877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			critical section. */
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 79


3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
3879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
3881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskExitCritical( void )
3895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
3899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
3901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
3903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portENABLE_INTERRUPTS();
3905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
3928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	size_t x;
3930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Start by copying the entire string. */
3932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
3933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 80


3935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		printed out. */
3936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
3937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
3939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Terminate. */
3942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return the new end of string. */
3945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return &( pcBuffer[ x ] );
3946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
3949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
3956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
3957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char cStatus;
3958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/*
3960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * PLEASE NOTE:
3961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
3963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
3964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * scheduler.
3965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
3967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
3968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * displays task names, states and stack usage.
3969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
3971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
3973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
3974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
3975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
3976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * snprintf() implementation!).
3977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
3979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * through a call to vTaskList().
3981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 */
3982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
3986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
3988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		function is executing. */
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
3990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 81


3992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
3993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		equate to NULL. */
3994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the (binary) data. */
3999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										to prevent static checking errors. */
4020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										cStatus = 0x00;
4021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				can be printed in tabular form more easily. */
4026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Write the rest of the string. */
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
4045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 82


4049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
4059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/*
4061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * PLEASE NOTE:
4062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * scheduler.
4066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * in both absolute and percentage terms.
4071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * a full snprintf() implementation!).
4079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 */
4084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		function is executing. */
4090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		equate to NULL. */
4095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the (binary) data. */
4100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* For percentage calculations. */
4103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulTotalTime /= 100UL;
4104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Avoid divide by zero errors. */
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 83


4106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ulTotalTime > 0 )
4107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Write the task name to the string, padding with
4117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					easily. */
4119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
4128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							printf() library can be used. */
4131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
4134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						consumed less than 1% of the total run time. */
4139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
4144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							printf() library can be used. */
4147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
4150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 84


4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
4175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxReturn;
4176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	queues and semaphores. */
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return uxReturn;
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
4185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pxCurrentTCB;
4199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulReturn;
4209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 85


4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					critical section exits) - but it is not something that
4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					application code should ever do. */
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portYIELD_WITHIN_API();
4228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ulReturn != 0UL )
4247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - 1;
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ulReturn;
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 86


4277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				clear the value to zero. */
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					critical section exits) - but it is not something that
4299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					application code should ever do. */
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portYIELD_WITHIN_API();
4301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				have changed. */
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			unblocked because of a timeout. */
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState == taskWAITING_NOTIFICATION )
4330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A notification was not received. */
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFALSE;
4333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 87


4334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A notification was already pending or a notification was
4337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				received while the task was waiting. */
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
4340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			switch( eAction )
4375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetBits	:
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eIncrement	:
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 88


4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The value could not be written to the task. */
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xReturn = pdFAIL;
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eNoAction:
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is being notified without its notify value being
4402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					updated. */
4403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY();
4407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					because it will automatically get reset to a new value when
4425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					earliest possible time. */
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 89


4448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			switch( eAction )
4500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetBits	:
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 90


4505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eIncrement	:
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The value could not be written to the task. */
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xReturn = pdFAIL;
4522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eNoAction :
4526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is being notified without its notify value being
4527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					updated. */
4528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 91


4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						safe FreeRTOS function. */
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
4566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
4607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			semaphore. */
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 92


4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						safe FreeRTOS function. */
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
4656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 93


4676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
4677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		its notification state cleared. */
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
4688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFAIL;
4692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 509              		.loc 1 4704 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              	.LVL48:
 514 0000 70B5     		push	{r4, r5, r6, lr}
 515              		.cfi_def_cfa_offset 16
 516              		.cfi_offset 4, -16
 517              		.cfi_offset 5, -12
 518              		.cfi_offset 6, -8
 519              		.cfi_offset 14, -4
 520 0002 0446     		mov	r4, r0
 521 0004 0E46     		mov	r6, r1
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTimeToWake;
4706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 522              		.loc 1 4706 0
 523 0006 174B     		ldr	r3, .L52
 524 0008 D3F81452 		ldr	r5, [r3, #532]
 525              	.LVL49:
4707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		when the task leaves the Blocked state. */
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 94


4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	as the same list item is used for both lists. */
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 526              		.loc 1 4719 0
 527 000c D3F80402 		ldr	r0, [r3, #516]
 528              	.LVL50:
 529 0010 0430     		adds	r0, r0, #4
 530 0012 FFF7FEFF 		bl	uxListRemove
 531              	.LVL51:
4720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 532              		.loc 1 4732 0
 533 0016 B4F1FF3F 		cmp	r4, #-1
 534 001a 07D1     		bne	.L48
 535              		.loc 1 4732 0 is_stmt 0 discriminator 1
 536 001c 36B1     		cbz	r6, .L48
4733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			indefinitely. */
4737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 537              		.loc 1 4737 0 is_stmt 1
 538 001e 1148     		ldr	r0, .L52
 539 0020 D0F80412 		ldr	r1, [r0, #516]
 540 0024 0431     		adds	r1, r1, #4
 541 0026 FFF7FEFF 		bl	vListInsertEnd
 542              	.LVL52:
 543 002a 70BD     		pop	{r4, r5, r6, pc}
 544              	.LVL53:
 545              	.L48:
4738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			kernel will manage it correctly. */
4744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 546              		.loc 1 4744 0
 547 002c 2C44     		add	r4, r4, r5
 548              	.LVL54:
4745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 549              		.loc 1 4747 0
 550 002e 0D4B     		ldr	r3, .L52
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 95


 551 0030 D3F80432 		ldr	r3, [r3, #516]
 552 0034 5C60     		str	r4, [r3, #4]
4748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 553              		.loc 1 4749 0
 554 0036 A542     		cmp	r5, r4
 555 0038 08D9     		bls	.L50
4750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				list. */
4753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 556              		.loc 1 4753 0
 557 003a 0A4B     		ldr	r3, .L52
 558 003c D3F8FC01 		ldr	r0, [r3, #508]
 559 0040 D3F80412 		ldr	r1, [r3, #516]
 560 0044 0431     		adds	r1, r1, #4
 561 0046 FFF7FEFF 		bl	vListInsert
 562              	.LVL55:
 563 004a 70BD     		pop	{r4, r5, r6, pc}
 564              	.LVL56:
 565              	.L50:
4754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is used. */
4759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 566              		.loc 1 4759 0
 567 004c 054D     		ldr	r5, .L52
 568              	.LVL57:
 569 004e A86A     		ldr	r0, [r5, #40]
 570 0050 D5F80412 		ldr	r1, [r5, #516]
 571 0054 0431     		adds	r1, r1, #4
 572 0056 FFF7FEFF 		bl	vListInsert
 573              	.LVL58:
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				needs to be updated too. */
4764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 574              		.loc 1 4764 0
 575 005a EB6A     		ldr	r3, [r5, #44]
 576 005c 9C42     		cmp	r4, r3
 577 005e 00D2     		bcs	.L47
4765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 578              		.loc 1 4766 0
 579 0060 EC62     		str	r4, [r5, #44]
 580              	.L47:
 581 0062 70BD     		pop	{r4, r5, r6, pc}
 582              	.LVL59:
 583              	.L53:
 584              		.align	2
 585              	.L52:
 586 0064 00000000 		.word	.LANCHOR0
 587              		.cfi_endproc
 588              	.LFE564:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 96


 589              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 590              		.section	.text.xTaskCreate,"ax",%progbits
 591              		.align	2
 592              		.global	xTaskCreate
 593              		.thumb
 594              		.thumb_func
 595              		.type	xTaskCreate, %function
 596              	xTaskCreate:
 597              	.LFB517:
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 598              		.loc 1 682 0
 599              		.cfi_startproc
 600              		@ args = 8, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              	.LVL60:
 603 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 604              		.cfi_def_cfa_offset 28
 605              		.cfi_offset 4, -28
 606              		.cfi_offset 5, -24
 607              		.cfi_offset 6, -20
 608              		.cfi_offset 7, -16
 609              		.cfi_offset 8, -12
 610              		.cfi_offset 9, -8
 611              		.cfi_offset 14, -4
 612 0004 85B0     		sub	sp, sp, #20
 613              		.cfi_def_cfa_offset 48
 614 0006 0646     		mov	r6, r0
 615 0008 0F46     		mov	r7, r1
 616 000a 1546     		mov	r5, r2
 617 000c 9846     		mov	r8, r3
 618              	.LBB18:
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 619              		.loc 1 716 0
 620 000e 9000     		lsls	r0, r2, #2
 621              	.LVL61:
 622 0010 FFF7FEFF 		bl	pvPortMalloc
 623              	.LVL62:
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 624              		.loc 1 718 0
 625 0014 60B1     		cbz	r0, .L58
 626 0016 8146     		mov	r9, r0
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 627              		.loc 1 721 0
 628 0018 6020     		movs	r0, #96
 629              	.LVL63:
 630 001a FFF7FEFF 		bl	pvPortMalloc
 631              	.LVL64:
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 632              		.loc 1 723 0
 633 001e 0446     		mov	r4, r0
 634 0020 10B1     		cbz	r0, .L56
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 635              		.loc 1 726 0
 636 0022 C0F83090 		str	r9, [r0, #48]
 637 0026 04E0     		b	.L55
 638              	.L56:
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 97


 639              		.loc 1 732 0
 640 0028 4846     		mov	r0, r9
 641              	.LVL65:
 642 002a FFF7FEFF 		bl	vPortFree
 643              	.LVL66:
 644 002e 00E0     		b	.L55
 645              	.LVL67:
 646              	.L58:
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 647              		.loc 1 737 0
 648 0030 0024     		movs	r4, #0
 649              	.LVL68:
 650              	.L55:
 651              	.LBE18:
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 652              		.loc 1 742 0
 653 0032 8CB1     		cbz	r4, .L59
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 654              		.loc 1 752 0
 655 0034 0023     		movs	r3, #0
 656 0036 0393     		str	r3, [sp, #12]
 657 0038 0294     		str	r4, [sp, #8]
 658 003a 0D9B     		ldr	r3, [sp, #52]
 659 003c 0193     		str	r3, [sp, #4]
 660 003e 0C9B     		ldr	r3, [sp, #48]
 661 0040 0093     		str	r3, [sp]
 662 0042 4346     		mov	r3, r8
 663 0044 2A46     		mov	r2, r5
 664 0046 3946     		mov	r1, r7
 665 0048 3046     		mov	r0, r6
 666 004a FFF7FEFF 		bl	prvInitialiseNewTask
 667              	.LVL69:
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
 668              		.loc 1 753 0
 669 004e 2046     		mov	r0, r4
 670 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 671              	.LVL70:
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 672              		.loc 1 754 0
 673 0054 0120     		movs	r0, #1
 674 0056 01E0     		b	.L57
 675              	.LVL71:
 676              	.L59:
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 677              		.loc 1 758 0
 678 0058 4FF0FF30 		mov	r0, #-1
 679              	.L57:
 680              	.LVL72:
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 681              		.loc 1 762 0
 682 005c 05B0     		add	sp, sp, #20
 683              		.cfi_def_cfa_offset 28
 684              		@ sp needed
 685 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 686              		.cfi_endproc
 687              	.LFE517:
 688              		.size	xTaskCreate, .-xTaskCreate
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 98


 689 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 690              		.align	2
 691              		.global	vTaskDelete
 692              		.thumb
 693              		.thumb_func
 694              		.type	vTaskDelete, %function
 695              	vTaskDelete:
 696              	.LFB520:
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 697              		.loc 1 1049 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              	.LVL73:
 702 0000 70B5     		push	{r4, r5, r6, lr}
 703              		.cfi_def_cfa_offset 16
 704              		.cfi_offset 4, -16
 705              		.cfi_offset 5, -12
 706              		.cfi_offset 6, -8
 707              		.cfi_offset 14, -4
 708 0002 0446     		mov	r4, r0
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 709              		.loc 1 1052 0
 710 0004 FFF7FEFF 		bl	vPortEnterCritical
 711              	.LVL74:
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 712              		.loc 1 1056 0
 713 0008 14B9     		cbnz	r4, .L62
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 714              		.loc 1 1056 0 is_stmt 0 discriminator 1
 715 000a 244B     		ldr	r3, .L70
 716 000c D3F80442 		ldr	r4, [r3, #516]
 717              	.LVL75:
 718              	.L62:
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 719              		.loc 1 1059 0 is_stmt 1 discriminator 4
 720 0010 261D     		adds	r6, r4, #4
 721 0012 3046     		mov	r0, r6
 722 0014 FFF7FEFF 		bl	uxListRemove
 723              	.LVL76:
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 724              		.loc 1 1069 0 discriminator 4
 725 0018 A36A     		ldr	r3, [r4, #40]
 726 001a 1BB1     		cbz	r3, .L63
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 727              		.loc 1 1071 0
 728 001c 04F11800 		add	r0, r4, #24
 729 0020 FFF7FEFF 		bl	uxListRemove
 730              	.LVL77:
 731              	.L63:
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 732              		.loc 1 1082 0
 733 0024 1D4B     		ldr	r3, .L70
 734 0026 D3F80C22 		ldr	r2, [r3, #524]
 735 002a 0132     		adds	r2, r2, #1
 736 002c C3F80C22 		str	r2, [r3, #524]
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 99


 737              		.loc 1 1084 0
 738 0030 D3F80432 		ldr	r3, [r3, #516]
 739 0034 9C42     		cmp	r4, r3
 740 0036 0BD1     		bne	.L64
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 741              		.loc 1 1091 0
 742 0038 184D     		ldr	r5, .L70
 743 003a 3146     		mov	r1, r6
 744 003c 05F5F470 		add	r0, r5, #488
 745 0040 FFF7FEFF 		bl	vListInsertEnd
 746              	.LVL78:
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 747              		.loc 1 1096 0
 748 0044 D5F81832 		ldr	r3, [r5, #536]
 749 0048 0133     		adds	r3, r3, #1
 750 004a C5F81832 		str	r3, [r5, #536]
 751 004e 0AE0     		b	.L65
 752              	.L64:
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 753              		.loc 1 1107 0
 754 0050 124A     		ldr	r2, .L70
 755 0052 D2F80032 		ldr	r3, [r2, #512]
 756 0056 013B     		subs	r3, r3, #1
 757 0058 C2F80032 		str	r3, [r2, #512]
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 758              		.loc 1 1108 0
 759 005c 2046     		mov	r0, r4
 760 005e FFF7FEFF 		bl	prvDeleteTCB
 761              	.LVL79:
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 762              		.loc 1 1112 0
 763 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 764              	.LVL80:
 765              	.L65:
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 766              		.loc 1 1117 0
 767 0066 FFF7FEFF 		bl	vPortExitCritical
 768              	.LVL81:
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 769              		.loc 1 1121 0
 770 006a 0C4B     		ldr	r3, .L70
 771 006c D3F80832 		ldr	r3, [r3, #520]
 772 0070 93B1     		cbz	r3, .L61
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 773              		.loc 1 1123 0
 774 0072 0A4B     		ldr	r3, .L70
 775 0074 D3F80432 		ldr	r3, [r3, #516]
 776 0078 9C42     		cmp	r4, r3
 777 007a 0DD1     		bne	.L61
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 778              		.loc 1 1125 0
 779 007c 074B     		ldr	r3, .L70
 780 007e D3F81C32 		ldr	r3, [r3, #540]
 781 0082 0BB1     		cbz	r3, .L67
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 782              		.loc 1 1125 0 is_stmt 0 discriminator 1
 783              		.syntax unified
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 100


 784              	@ 1125 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 785 0084 72B6     		 cpsid i 
 786              	@ 0 "" 2
 787              		.thumb
 788              		.syntax unified
 789              	.L68:
 790 0086 FEE7     		b	.L68
 791              	.L67:
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 792              		.loc 1 1126 0 is_stmt 1
 793 0088 4FF08052 		mov	r2, #268435456
 794 008c 044B     		ldr	r3, .L70+4
 795 008e 1A60     		str	r2, [r3]
 796              		.syntax unified
 797              	@ 1126 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 798 0090 BFF34F8F 		dsb
 799              	@ 0 "" 2
 800              	@ 1126 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 801 0094 BFF36F8F 		isb
 802              	@ 0 "" 2
 803              		.thumb
 804              		.syntax unified
 805              	.L61:
 806 0098 70BD     		pop	{r4, r5, r6, pc}
 807              	.LVL82:
 808              	.L71:
 809 009a 00BF     		.align	2
 810              	.L70:
 811 009c 00000000 		.word	.LANCHOR0
 812 00a0 04ED00E0 		.word	-536810236
 813              		.cfi_endproc
 814              	.LFE520:
 815              		.size	vTaskDelete, .-vTaskDelete
 816              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 817              		.align	2
 818              		.global	uxTaskPriorityGet
 819              		.thumb
 820              		.thumb_func
 821              		.type	uxTaskPriorityGet, %function
 822              	uxTaskPriorityGet:
 823              	.LFB523:
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 824              		.loc 1 1341 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              	.LVL83:
 829 0000 10B5     		push	{r4, lr}
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 4, -8
 832              		.cfi_offset 14, -4
 833 0002 0446     		mov	r4, r0
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 834              		.loc 1 1345 0
 835 0004 FFF7FEFF 		bl	vPortEnterCritical
 836              	.LVL84:
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 101


 837              		.loc 1 1349 0
 838 0008 14B9     		cbnz	r4, .L73
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 839              		.loc 1 1349 0 is_stmt 0 discriminator 1
 840 000a 044B     		ldr	r3, .L75
 841 000c D3F80442 		ldr	r4, [r3, #516]
 842              	.LVL85:
 843              	.L73:
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 844              		.loc 1 1350 0 is_stmt 1 discriminator 4
 845 0010 E46A     		ldr	r4, [r4, #44]
 846              	.LVL86:
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 847              		.loc 1 1352 0 discriminator 4
 848 0012 FFF7FEFF 		bl	vPortExitCritical
 849              	.LVL87:
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 850              		.loc 1 1355 0 discriminator 4
 851 0016 2046     		mov	r0, r4
 852 0018 10BD     		pop	{r4, pc}
 853              	.LVL88:
 854              	.L76:
 855 001a 00BF     		.align	2
 856              	.L75:
 857 001c 00000000 		.word	.LANCHOR0
 858              		.cfi_endproc
 859              	.LFE523:
 860              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 861              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 862              		.align	2
 863              		.global	uxTaskPriorityGetFromISR
 864              		.thumb
 865              		.thumb_func
 866              		.type	uxTaskPriorityGetFromISR, %function
 867              	uxTaskPriorityGetFromISR:
 868              	.LFB524:
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 869              		.loc 1 1363 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              	.LVL89:
 874 0000 10B5     		push	{r4, lr}
 875              		.cfi_def_cfa_offset 8
 876              		.cfi_offset 4, -8
 877              		.cfi_offset 14, -4
 878 0002 0446     		mov	r4, r0
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 879              		.loc 1 1383 0
 880 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 881              	.LVL90:
 882              	.LBB19:
 883              	.LBB20:
 884              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     All rights reserved
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 102


   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 103


  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** */
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  */
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR        char
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT       float
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE      double
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG        long
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT       short
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE  uint32_t
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE   long
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint16_t TickType_t;
 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffff
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #else
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint32_t TickType_t;
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     not need to be guarded with a critical section. */
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portTICK_TYPE_IS_ATOMIC 1
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH              ( -1 )
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS            ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT            8
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 104


 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD()                                                            \
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {                                                                              \
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Set a PendSV to request a context switch. */                            \
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;                            \
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****                                                                                \
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Barriers are normally not required but do ensure the code is completely \
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     within the specified behaviour for the architecture. */                    \
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "dsb" );                                                   \
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "isb" );                                                   \
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }                                                                              \
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG         ( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT        ( 1UL << 28UL )
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x )       portEND_SWITCHING_ISR( x )
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()       ulPortRaiseBASEPRI()
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)    vPortSetBASEPRI(x)
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()                __asm volatile   ( " cpsid i " )
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()                 __asm volatile   ( " cpsie i " )
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()                    vPortEnterCritical()
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()                     vPortExitCritical()
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site. */
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     void vPortValidateInterruptPriority( void );
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()     vPortValidateInterruptPriority()
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE    __inline
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portFORCE_INLINE inline __attribute__(( always_inline))
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 105


 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Obtain the number of the currently executing interrupt. */
 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     if( ulCurrentInterrupt == 0 )
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdFALSE;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     else
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdTRUE;
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 191:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return xReturn;
 192:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 193:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 194:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 195:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 196:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 197:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 198:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 199:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 200:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 201:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %0, %1                                                 \n" \
 202:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %0                                            \n" \
 203:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 204:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
 205:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 206:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 207:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 208:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 209:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 210:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 211:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 212:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 213:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 214:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 885              		.loc 2 215 0
 886              		.syntax unified
 887              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 888 0008 EFF31183 		    mrs r3, basepri                                            
 889 000c 4FF02F02 	    mov r2, #47                                                 
 890 0010 82F31188 	    msr basepri, r2                                            
 891 0014 BFF36F8F 	    isb                                                        
 892 0018 BFF34F8F 	    dsb                                                        
 893              	
 894              	@ 0 "" 2
 895              		.thumb
 896              		.syntax unified
 897              	.LBE20:
 898              	.LBE19:
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 899              		.loc 1 1389 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 106


 900 001c 14B9     		cbnz	r4, .L78
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 901              		.loc 1 1389 0 is_stmt 0 discriminator 1
 902 001e 034A     		ldr	r2, .L80
 903 0020 D2F80442 		ldr	r4, [r2, #516]
 904              	.LVL91:
 905              	.L78:
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 906              		.loc 1 1390 0 is_stmt 1 discriminator 4
 907 0024 E06A     		ldr	r0, [r4, #44]
 908              	.LVL92:
 909              	.LBB21:
 910              	.LBB22:
 216:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 217:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mrs %0, basepri                                            \n" \
 218:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %1, %2                                                 \n" \
 219:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %1                                            \n" \
 220:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 221:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
 222:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY
 223:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 224:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 225:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* This return will not be reached but is necessary to prevent compiler
 226:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     warnings. */
 227:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return ulOriginalBASEPRI;
 228:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 229:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 231:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 232:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 233:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 911              		.loc 2 233 0 discriminator 4
 912              		.syntax unified
 913              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 914 0026 83F31188 		    msr basepri, r3  
 915              	@ 0 "" 2
 916              	.LVL93:
 917              		.thumb
 918              		.syntax unified
 919              	.LBE22:
 920              	.LBE21:
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 921              		.loc 1 1395 0 discriminator 4
 922 002a 10BD     		pop	{r4, pc}
 923              	.LVL94:
 924              	.L81:
 925              		.align	2
 926              	.L80:
 927 002c 00000000 		.word	.LANCHOR0
 928              		.cfi_endproc
 929              	.LFE524:
 930              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 931              		.section	.text.vTaskPrioritySet,"ax",%progbits
 932              		.align	2
 933              		.global	vTaskPrioritySet
 934              		.thumb
 935              		.thumb_func
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 107


 936              		.type	vTaskPrioritySet, %function
 937              	vTaskPrioritySet:
 938              	.LFB525:
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 939              		.loc 1 1403 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              	.LVL95:
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 944              		.loc 1 1408 0
 945 0000 1329     		cmp	r1, #19
 946 0002 01D9     		bls	.L83
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 947              		.loc 1 1408 0 is_stmt 0 discriminator 1
 948              		.syntax unified
 949              	@ 1408 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 950 0004 72B6     		 cpsid i 
 951              	@ 0 "" 2
 952              		.thumb
 953              		.syntax unified
 954              	.L84:
 955 0006 FEE7     		b	.L84
 956              	.L83:
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 957              		.loc 1 1403 0 is_stmt 1
 958 0008 70B5     		push	{r4, r5, r6, lr}
 959              		.cfi_def_cfa_offset 16
 960              		.cfi_offset 4, -16
 961              		.cfi_offset 5, -12
 962              		.cfi_offset 6, -8
 963              		.cfi_offset 14, -4
 964 000a 0446     		mov	r4, r0
 965 000c 0D46     		mov	r5, r1
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 966              		.loc 1 1411 0
 967 000e 1329     		cmp	r1, #19
 968 0010 00D9     		bls	.L85
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 969              		.loc 1 1413 0
 970 0012 1325     		movs	r5, #19
 971              	.L85:
 972              	.LVL96:
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 973              		.loc 1 1420 0
 974 0014 FFF7FEFF 		bl	vPortEnterCritical
 975              	.LVL97:
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 976              		.loc 1 1424 0
 977 0018 14B9     		cbnz	r4, .L86
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 978              		.loc 1 1424 0 is_stmt 0 discriminator 1
 979 001a 2A4B     		ldr	r3, .L100
 980 001c D3F80442 		ldr	r4, [r3, #516]
 981              	.LVL98:
 982              	.L86:
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 108


 983              		.loc 1 1434 0 is_stmt 1 discriminator 4
 984 0020 E36A     		ldr	r3, [r4, #44]
 985              	.LVL99:
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 986              		.loc 1 1438 0 discriminator 4
 987 0022 9D42     		cmp	r5, r3
 988 0024 4AD0     		beq	.L87
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 989              		.loc 1 1442 0
 990 0026 0CD9     		bls	.L88
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 991              		.loc 1 1444 0
 992 0028 264A     		ldr	r2, .L100
 993 002a D2F80422 		ldr	r2, [r2, #516]
 994 002e 9442     		cmp	r4, r2
 995 0030 0ED0     		beq	.L95
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
 996              		.loc 1 1449 0
 997 0032 244A     		ldr	r2, .L100
 998 0034 D2F80422 		ldr	r2, [r2, #516]
 999 0038 D26A     		ldr	r2, [r2, #44]
 1000 003a 9542     		cmp	r5, r2
 1001 003c 0AD2     		bcs	.L96
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1002              		.loc 1 1406 0
 1003 003e 0026     		movs	r6, #0
 1004 0040 0BE0     		b	.L89
 1005              	.L88:
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1006              		.loc 1 1465 0
 1007 0042 204A     		ldr	r2, .L100
 1008 0044 D2F80422 		ldr	r2, [r2, #516]
 1009 0048 9442     		cmp	r4, r2
 1010 004a 05D0     		beq	.L97
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1011              		.loc 1 1406 0
 1012 004c 0026     		movs	r6, #0
 1013 004e 04E0     		b	.L89
 1014              	.L95:
 1015 0050 0026     		movs	r6, #0
 1016 0052 02E0     		b	.L89
 1017              	.L96:
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
 1018              		.loc 1 1451 0
 1019 0054 0126     		movs	r6, #1
 1020 0056 00E0     		b	.L89
 1021              	.L97:
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1022              		.loc 1 1470 0
 1023 0058 0126     		movs	r6, #1
 1024              	.L89:
 1025              	.LVL100:
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1026              		.loc 1 1502 0
 1027 005a E562     		str	r5, [r4, #44]
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1028              		.loc 1 1508 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 109


 1029 005c A269     		ldr	r2, [r4, #24]
 1030 005e 002A     		cmp	r2, #0
 1031 0060 02DB     		blt	.L90
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1032              		.loc 1 1510 0
 1033 0062 C5F11405 		rsb	r5, r5, #20
 1034              	.LVL101:
 1035 0066 A561     		str	r5, [r4, #24]
 1036              	.L90:
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1037              		.loc 1 1521 0
 1038 0068 6169     		ldr	r1, [r4, #20]
 1039 006a 03EB8303 		add	r3, r3, r3, lsl #2
 1040              	.LVL102:
 1041 006e 9A00     		lsls	r2, r3, #2
 1042 0070 154B     		ldr	r3, .L100+4
 1043 0072 1A44     		add	r2, r2, r3
 1044 0074 9142     		cmp	r1, r2
 1045 0076 01D1     		bne	.L98
 1046 0078 0123     		movs	r3, #1
 1047 007a 00E0     		b	.L91
 1048              	.L98:
 1049 007c 0023     		movs	r3, #0
 1050              	.L91:
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1051              		.loc 1 1521 0 is_stmt 0 discriminator 4
 1052 007e A3B1     		cbz	r3, .L92
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1053              		.loc 1 1526 0 is_stmt 1
 1054 0080 251D     		adds	r5, r4, #4
 1055 0082 2846     		mov	r0, r5
 1056 0084 FFF7FEFF 		bl	uxListRemove
 1057              	.LVL103:
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1058              		.loc 1 1537 0
 1059 0088 E36A     		ldr	r3, [r4, #44]
 1060 008a 0E4A     		ldr	r2, .L100
 1061 008c D2F81022 		ldr	r2, [r2, #528]
 1062 0090 9342     		cmp	r3, r2
 1063 0092 02D9     		bls	.L93
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1064              		.loc 1 1537 0 is_stmt 0 discriminator 1
 1065 0094 0B4A     		ldr	r2, .L100
 1066 0096 C2F81032 		str	r3, [r2, #528]
 1067              	.L93:
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1068              		.loc 1 1537 0 discriminator 3
 1069 009a 03EB8303 		add	r3, r3, r3, lsl #2
 1070 009e 9A00     		lsls	r2, r3, #2
 1071 00a0 2946     		mov	r1, r5
 1072 00a2 0948     		ldr	r0, .L100+4
 1073 00a4 1044     		add	r0, r0, r2
 1074 00a6 FFF7FEFF 		bl	vListInsertEnd
 1075              	.LVL104:
 1076              	.L92:
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1077              		.loc 1 1544 0 is_stmt 1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 110


 1078 00aa 3EB1     		cbz	r6, .L87
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1079              		.loc 1 1546 0
 1080 00ac 4FF08052 		mov	r2, #268435456
 1081 00b0 064B     		ldr	r3, .L100+8
 1082 00b2 1A60     		str	r2, [r3]
 1083              		.syntax unified
 1084              	@ 1546 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1085 00b4 BFF34F8F 		dsb
 1086              	@ 0 "" 2
 1087              	@ 1546 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1088 00b8 BFF36F8F 		isb
 1089              	@ 0 "" 2
 1090              	.LVL105:
 1091              		.thumb
 1092              		.syntax unified
 1093              	.L87:
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1094              		.loc 1 1558 0
 1095 00bc FFF7FEFF 		bl	vPortExitCritical
 1096              	.LVL106:
 1097 00c0 70BD     		pop	{r4, r5, r6, pc}
 1098              	.LVL107:
 1099              	.L101:
 1100 00c2 00BF     		.align	2
 1101              	.L100:
 1102 00c4 00000000 		.word	.LANCHOR0
 1103 00c8 30000000 		.word	.LANCHOR0+48
 1104 00cc 04ED00E0 		.word	-536810236
 1105              		.cfi_endproc
 1106              	.LFE525:
 1107              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1108              		.section	.text.vTaskResume,"ax",%progbits
 1109              		.align	2
 1110              		.global	vTaskResume
 1111              		.thumb
 1112              		.thumb_func
 1113              		.type	vTaskResume, %function
 1114              	vTaskResume:
 1115              	.LFB528:
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1116              		.loc 1 1703 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120              	.LVL108:
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1121              		.loc 1 1707 0
 1122 0000 08B9     		cbnz	r0, .L103
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1123              		.loc 1 1707 0 is_stmt 0 discriminator 1
 1124              		.syntax unified
 1125              	@ 1707 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1126 0002 72B6     		 cpsid i 
 1127              	@ 0 "" 2
 1128              		.thumb
 1129              		.syntax unified
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 111


 1130              	.L104:
 1131 0004 FEE7     		b	.L104
 1132              	.L103:
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1133              		.loc 1 1703 0 is_stmt 1
 1134 0006 70B5     		push	{r4, r5, r6, lr}
 1135              		.cfi_def_cfa_offset 16
 1136              		.cfi_offset 4, -16
 1137              		.cfi_offset 5, -12
 1138              		.cfi_offset 6, -8
 1139              		.cfi_offset 14, -4
 1140 0008 0446     		mov	r4, r0
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1141              		.loc 1 1711 0
 1142 000a 88B3     		cbz	r0, .L102
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1143              		.loc 1 1711 0 is_stmt 0 discriminator 1
 1144 000c 194B     		ldr	r3, .L109
 1145 000e D3F80432 		ldr	r3, [r3, #516]
 1146 0012 9842     		cmp	r0, r3
 1147 0014 2CD0     		beq	.L102
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1148              		.loc 1 1713 0 is_stmt 1
 1149 0016 FFF7FEFF 		bl	vPortEnterCritical
 1150              	.LVL109:
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1151              		.loc 1 1715 0
 1152 001a 2046     		mov	r0, r4
 1153 001c FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1154              	.LVL110:
 1155 0020 20B3     		cbz	r0, .L106
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1156              		.loc 1 1721 0
 1157 0022 261D     		adds	r6, r4, #4
 1158 0024 3046     		mov	r0, r6
 1159 0026 FFF7FEFF 		bl	uxListRemove
 1160              	.LVL111:
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1161              		.loc 1 1722 0
 1162 002a E36A     		ldr	r3, [r4, #44]
 1163 002c 114A     		ldr	r2, .L109
 1164 002e D2F81022 		ldr	r2, [r2, #528]
 1165 0032 9342     		cmp	r3, r2
 1166 0034 02D9     		bls	.L107
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1167              		.loc 1 1722 0 is_stmt 0 discriminator 1
 1168 0036 0F4A     		ldr	r2, .L109
 1169 0038 C2F81032 		str	r3, [r2, #528]
 1170              	.L107:
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1171              		.loc 1 1722 0 discriminator 3
 1172 003c 0D4D     		ldr	r5, .L109
 1173 003e 05F13000 		add	r0, r5, #48
 1174 0042 03EB8303 		add	r3, r3, r3, lsl #2
 1175 0046 9A00     		lsls	r2, r3, #2
 1176 0048 3146     		mov	r1, r6
 1177 004a 1044     		add	r0, r0, r2
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 112


 1178 004c FFF7FEFF 		bl	vListInsertEnd
 1179              	.LVL112:
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1180              		.loc 1 1725 0 is_stmt 1 discriminator 3
 1181 0050 E26A     		ldr	r2, [r4, #44]
 1182 0052 D5F80432 		ldr	r3, [r5, #516]
 1183 0056 DB6A     		ldr	r3, [r3, #44]
 1184 0058 9A42     		cmp	r2, r3
 1185 005a 07D3     		bcc	.L106
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1186              		.loc 1 1730 0
 1187 005c 4FF08052 		mov	r2, #268435456
 1188 0060 054B     		ldr	r3, .L109+4
 1189 0062 1A60     		str	r2, [r3]
 1190              		.syntax unified
 1191              	@ 1730 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1192 0064 BFF34F8F 		dsb
 1193              	@ 0 "" 2
 1194              	@ 1730 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1195 0068 BFF36F8F 		isb
 1196              	@ 0 "" 2
 1197              		.thumb
 1198              		.syntax unified
 1199              	.L106:
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1200              		.loc 1 1742 0
 1201 006c FFF7FEFF 		bl	vPortExitCritical
 1202              	.LVL113:
 1203              	.L102:
 1204 0070 70BD     		pop	{r4, r5, r6, pc}
 1205              	.LVL114:
 1206              	.L110:
 1207 0072 00BF     		.align	2
 1208              	.L109:
 1209 0074 00000000 		.word	.LANCHOR0
 1210 0078 04ED00E0 		.word	-536810236
 1211              		.cfi_endproc
 1212              	.LFE528:
 1213              		.size	vTaskResume, .-vTaskResume
 1214              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1215              		.align	2
 1216              		.global	xTaskResumeFromISR
 1217              		.thumb
 1218              		.thumb_func
 1219              		.type	xTaskResumeFromISR, %function
 1220              	xTaskResumeFromISR:
 1221              	.LFB529:
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1222              		.loc 1 1757 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              	.LVL115:
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1227              		.loc 1 1762 0
 1228 0000 08B9     		cbnz	r0, .L112
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 113


 1229              		.loc 1 1762 0 is_stmt 0 discriminator 1
 1230              		.syntax unified
 1231              	@ 1762 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1232 0002 72B6     		 cpsid i 
 1233              	@ 0 "" 2
 1234              		.thumb
 1235              		.syntax unified
 1236              	.L113:
 1237 0004 FEE7     		b	.L113
 1238              	.L112:
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1239              		.loc 1 1757 0 is_stmt 1
 1240 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1241              		.cfi_def_cfa_offset 24
 1242              		.cfi_offset 3, -24
 1243              		.cfi_offset 4, -20
 1244              		.cfi_offset 5, -16
 1245              		.cfi_offset 6, -12
 1246              		.cfi_offset 7, -8
 1247              		.cfi_offset 14, -4
 1248 0008 0446     		mov	r4, r0
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1249              		.loc 1 1780 0
 1250 000a FFF7FEFF 		bl	vPortValidateInterruptPriority
 1251              	.LVL116:
 1252              	.LBB23:
 1253              	.LBB24:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 1254              		.loc 2 215 0
 1255              		.syntax unified
 1256              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1257 000e EFF31187 		    mrs r7, basepri                                            
 1258 0012 4FF02F03 	    mov r3, #47                                                 
 1259 0016 83F31188 	    msr basepri, r3                                            
 1260 001a BFF36F8F 	    isb                                                        
 1261 001e BFF34F8F 	    dsb                                                        
 1262              	
 1263              	@ 0 "" 2
 1264              		.thumb
 1265              		.syntax unified
 1266              	.LBE24:
 1267              	.LBE23:
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1268              		.loc 1 1784 0
 1269 0022 2046     		mov	r0, r4
 1270 0024 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1271              	.LVL117:
 1272 0028 50B3     		cbz	r0, .L118
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1273              		.loc 1 1789 0
 1274 002a 184B     		ldr	r3, .L121
 1275 002c D3F81C32 		ldr	r3, [r3, #540]
 1276 0030 FBB9     		cbnz	r3, .L115
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1277              		.loc 1 1793 0
 1278 0032 E26A     		ldr	r2, [r4, #44]
 1279 0034 154B     		ldr	r3, .L121
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 114


 1280 0036 D3F80432 		ldr	r3, [r3, #516]
 1281 003a DB6A     		ldr	r3, [r3, #44]
 1282 003c 9A42     		cmp	r2, r3
 1283 003e 01D2     		bcs	.L119
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1284              		.loc 1 1758 0
 1285 0040 0025     		movs	r5, #0
 1286 0042 00E0     		b	.L116
 1287              	.L119:
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1288              		.loc 1 1795 0
 1289 0044 0125     		movs	r5, #1
 1290              	.L116:
 1291              	.LVL118:
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1292              		.loc 1 1802 0
 1293 0046 261D     		adds	r6, r4, #4
 1294 0048 3046     		mov	r0, r6
 1295 004a FFF7FEFF 		bl	uxListRemove
 1296              	.LVL119:
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1297              		.loc 1 1803 0
 1298 004e E36A     		ldr	r3, [r4, #44]
 1299 0050 0E4A     		ldr	r2, .L121
 1300 0052 D2F81022 		ldr	r2, [r2, #528]
 1301 0056 9342     		cmp	r3, r2
 1302 0058 02D9     		bls	.L117
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1303              		.loc 1 1803 0 is_stmt 0 discriminator 1
 1304 005a 0C4A     		ldr	r2, .L121
 1305 005c C2F81032 		str	r3, [r2, #528]
 1306              	.L117:
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1307              		.loc 1 1803 0 discriminator 3
 1308 0060 03EB8303 		add	r3, r3, r3, lsl #2
 1309 0064 9A00     		lsls	r2, r3, #2
 1310 0066 3146     		mov	r1, r6
 1311 0068 0948     		ldr	r0, .L121+4
 1312 006a 1044     		add	r0, r0, r2
 1313 006c FFF7FEFF 		bl	vListInsertEnd
 1314              	.LVL120:
 1315 0070 07E0     		b	.L114
 1316              	.LVL121:
 1317              	.L115:
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1318              		.loc 1 1810 0 is_stmt 1
 1319 0072 04F11801 		add	r1, r4, #24
 1320 0076 0748     		ldr	r0, .L121+8
 1321 0078 FFF7FEFF 		bl	vListInsertEnd
 1322              	.LVL122:
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1323              		.loc 1 1758 0
 1324 007c 0025     		movs	r5, #0
 1325 007e 00E0     		b	.L114
 1326              	.L118:
 1327 0080 0025     		movs	r5, #0
 1328              	.LVL123:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 115


 1329              	.L114:
 1330              	.LBB25:
 1331              	.LBB26:
 1332              		.loc 2 233 0
 1333              		.syntax unified
 1334              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1335 0082 87F31188 		    msr basepri, r7  
 1336              	@ 0 "" 2
 1337              	.LVL124:
 1338              		.thumb
 1339              		.syntax unified
 1340              	.LBE26:
 1341              	.LBE25:
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1342              		.loc 1 1821 0
 1343 0086 2846     		mov	r0, r5
 1344 0088 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1345              	.LVL125:
 1346              	.L122:
 1347 008a 00BF     		.align	2
 1348              	.L121:
 1349 008c 00000000 		.word	.LANCHOR0
 1350 0090 30000000 		.word	.LANCHOR0+48
 1351 0094 14000000 		.word	.LANCHOR0+20
 1352              		.cfi_endproc
 1353              	.LFE529:
 1354              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1355              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1356              		.align	2
 1357              		.global	vTaskStartScheduler
 1358              		.thumb
 1359              		.thumb_func
 1360              		.type	vTaskStartScheduler, %function
 1361              	vTaskStartScheduler:
 1362              	.LFB530:
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 1363              		.loc 1 1827 0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 0
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 1367 0000 00B5     		push	{lr}
 1368              		.cfi_def_cfa_offset 4
 1369              		.cfi_offset 14, -4
 1370 0002 83B0     		sub	sp, sp, #12
 1371              		.cfi_def_cfa_offset 16
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
 1372              		.loc 1 1860 0
 1373 0004 124B     		ldr	r3, .L129
 1374 0006 0193     		str	r3, [sp, #4]
 1375 0008 0023     		movs	r3, #0
 1376 000a 0093     		str	r3, [sp]
 1377 000c 8022     		movs	r2, #128
 1378 000e 1149     		ldr	r1, .L129+4
 1379 0010 1148     		ldr	r0, .L129+8
 1380 0012 FFF7FEFF 		bl	xTaskCreate
 1381              	.LVL126:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 116


 1382              		.loc 1 1870 0
 1383 0016 0128     		cmp	r0, #1
 1384 0018 01D1     		bne	.L124
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1385              		.loc 1 1872 0
 1386 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1387              	.LVL127:
 1388              	.L124:
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1389              		.loc 1 1881 0
 1390 001e 0128     		cmp	r0, #1
 1391 0020 0DD1     		bne	.L125
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1392              		.loc 1 1888 0
 1393              		.syntax unified
 1394              	@ 1888 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1395 0022 72B6     		 cpsid i 
 1396              	@ 0 "" 2
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1397              		.loc 1 1898 0
 1398              		.thumb
 1399              		.syntax unified
 1400 0024 0D4B     		ldr	r3, .L129+12
 1401 0026 4FF0FF32 		mov	r2, #-1
 1402 002a DA62     		str	r2, [r3, #44]
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1403              		.loc 1 1899 0
 1404 002c 0122     		movs	r2, #1
 1405 002e C3F80822 		str	r2, [r3, #520]
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1406              		.loc 1 1900 0
 1407 0032 0022     		movs	r2, #0
 1408 0034 C3F81422 		str	r2, [r3, #532]
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1409              		.loc 1 1909 0
 1410 0038 FFF7FEFF 		bl	xPortStartScheduler
 1411              	.LVL128:
 1412 003c 04E0     		b	.L123
 1413              	.LVL129:
 1414              	.L125:
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1415              		.loc 1 1924 0
 1416 003e B0F1FF3F 		cmp	r0, #-1
 1417 0042 01D1     		bne	.L123
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1418              		.loc 1 1924 0 is_stmt 0 discriminator 1
 1419              		.syntax unified
 1420              	@ 1924 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1421 0044 72B6     		 cpsid i 
 1422              	@ 0 "" 2
 1423              		.thumb
 1424              		.syntax unified
 1425              	.L127:
 1426 0046 FEE7     		b	.L127
 1427              	.LVL130:
 1428              	.L123:
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 117


 1429              		.loc 1 1930 0 is_stmt 1
 1430 0048 03B0     		add	sp, sp, #12
 1431              		.cfi_def_cfa_offset 4
 1432              		@ sp needed
 1433 004a 5DF804FB 		ldr	pc, [sp], #4
 1434              	.L130:
 1435 004e 00BF     		.align	2
 1436              	.L129:
 1437 0050 20020000 		.word	.LANCHOR0+544
 1438 0054 00000000 		.word	.LC0
 1439 0058 00000000 		.word	prvIdleTask
 1440 005c 00000000 		.word	.LANCHOR0
 1441              		.cfi_endproc
 1442              	.LFE530:
 1443              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1444              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1445              		.align	2
 1446              		.global	vTaskEndScheduler
 1447              		.thumb
 1448              		.thumb_func
 1449              		.type	vTaskEndScheduler, %function
 1450              	vTaskEndScheduler:
 1451              	.LFB531:
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1452              		.loc 1 1934 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456 0000 08B5     		push	{r3, lr}
 1457              		.cfi_def_cfa_offset 8
 1458              		.cfi_offset 3, -8
 1459              		.cfi_offset 14, -4
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1460              		.loc 1 1938 0
 1461              		.syntax unified
 1462              	@ 1938 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1463 0002 72B6     		 cpsid i 
 1464              	@ 0 "" 2
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vPortEndScheduler();
 1465              		.loc 1 1939 0
 1466              		.thumb
 1467              		.syntax unified
 1468 0004 0022     		movs	r2, #0
 1469 0006 034B     		ldr	r3, .L133
 1470 0008 C3F80822 		str	r2, [r3, #520]
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1471              		.loc 1 1940 0
 1472 000c FFF7FEFF 		bl	vPortEndScheduler
 1473              	.LVL131:
 1474 0010 08BD     		pop	{r3, pc}
 1475              	.L134:
 1476 0012 00BF     		.align	2
 1477              	.L133:
 1478 0014 00000000 		.word	.LANCHOR0
 1479              		.cfi_endproc
 1480              	.LFE531:
 1481              		.size	vTaskEndScheduler, .-vTaskEndScheduler
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 118


 1482              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1483              		.align	2
 1484              		.global	vTaskSuspendAll
 1485              		.thumb
 1486              		.thumb_func
 1487              		.type	vTaskSuspendAll, %function
 1488              	vTaskSuspendAll:
 1489              	.LFB532:
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1490              		.loc 1 1945 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 1494              		@ link register save eliminated.
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1495              		.loc 1 1950 0
 1496 0000 034A     		ldr	r2, .L136
 1497 0002 D2F81C32 		ldr	r3, [r2, #540]
 1498 0006 0133     		adds	r3, r3, #1
 1499 0008 C2F81C32 		str	r3, [r2, #540]
 1500 000c 7047     		bx	lr
 1501              	.L137:
 1502 000e 00BF     		.align	2
 1503              	.L136:
 1504 0010 00000000 		.word	.LANCHOR0
 1505              		.cfi_endproc
 1506              	.LFE532:
 1507              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1508              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1509              		.align	2
 1510              		.global	xTaskGetTickCount
 1511              		.thumb
 1512              		.thumb_func
 1513              		.type	xTaskGetTickCount, %function
 1514              	xTaskGetTickCount:
 1515              	.LFB534:
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTicks;
 1516              		.loc 1 2128 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520              		@ link register save eliminated.
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1521              		.loc 1 2134 0
 1522 0000 014B     		ldr	r3, .L139
 1523 0002 D3F81402 		ldr	r0, [r3, #532]
 1524              	.LVL132:
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1525              		.loc 1 2139 0
 1526 0006 7047     		bx	lr
 1527              	.L140:
 1528              		.align	2
 1529              	.L139:
 1530 0008 00000000 		.word	.LANCHOR0
 1531              		.cfi_endproc
 1532              	.LFE534:
 1533              		.size	xTaskGetTickCount, .-xTaskGetTickCount
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 119


 1534              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1535              		.align	2
 1536              		.global	xTaskGetTickCountFromISR
 1537              		.thumb
 1538              		.thumb_func
 1539              		.type	xTaskGetTickCountFromISR, %function
 1540              	xTaskGetTickCountFromISR:
 1541              	.LFB535:
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xReturn;
 1542              		.loc 1 2143 0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 0
 1545              		@ frame_needed = 0, uses_anonymous_args = 0
 1546 0000 08B5     		push	{r3, lr}
 1547              		.cfi_def_cfa_offset 8
 1548              		.cfi_offset 3, -8
 1549              		.cfi_offset 14, -4
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1550              		.loc 1 2161 0
 1551 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1552              	.LVL133:
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1553              		.loc 1 2165 0
 1554 0006 024B     		ldr	r3, .L143
 1555 0008 D3F81402 		ldr	r0, [r3, #532]
 1556              	.LVL134:
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1557              		.loc 1 2170 0
 1558 000c 08BD     		pop	{r3, pc}
 1559              	.L144:
 1560 000e 00BF     		.align	2
 1561              	.L143:
 1562 0010 00000000 		.word	.LANCHOR0
 1563              		.cfi_endproc
 1564              	.LFE535:
 1565              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1566              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1567              		.align	2
 1568              		.global	uxTaskGetNumberOfTasks
 1569              		.thumb
 1570              		.thumb_func
 1571              		.type	uxTaskGetNumberOfTasks, %function
 1572              	uxTaskGetNumberOfTasks:
 1573              	.LFB536:
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1574              		.loc 1 2174 0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 0, uses_anonymous_args = 0
 1578              		@ link register save eliminated.
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1579              		.loc 1 2177 0
 1580 0000 014B     		ldr	r3, .L146
 1581 0002 D3F80002 		ldr	r0, [r3, #512]
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1582              		.loc 1 2178 0
 1583 0006 7047     		bx	lr
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 120


 1584              	.L147:
 1585              		.align	2
 1586              	.L146:
 1587 0008 00000000 		.word	.LANCHOR0
 1588              		.cfi_endproc
 1589              	.LFE536:
 1590              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1591              		.section	.text.pcTaskGetName,"ax",%progbits
 1592              		.align	2
 1593              		.global	pcTaskGetName
 1594              		.thumb
 1595              		.thumb_func
 1596              		.type	pcTaskGetName, %function
 1597              	pcTaskGetName:
 1598              	.LFB537:
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
 1599              		.loc 1 2182 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 1603              		@ link register save eliminated.
 1604              	.LVL135:
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
 1605              		.loc 1 2187 0
 1606 0000 0346     		mov	r3, r0
 1607 0002 10B9     		cbnz	r0, .L149
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
 1608              		.loc 1 2187 0 is_stmt 0 discriminator 1
 1609 0004 044B     		ldr	r3, .L152
 1610 0006 D3F80432 		ldr	r3, [r3, #516]
 1611              	.LVL136:
 1612              	.L149:
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1613              		.loc 1 2188 0 is_stmt 1 discriminator 4
 1614 000a 0BB9     		cbnz	r3, .L150
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1615              		.loc 1 2188 0 is_stmt 0 discriminator 1
 1616              		.syntax unified
 1617              	@ 2188 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1618 000c 72B6     		 cpsid i 
 1619              	@ 0 "" 2
 1620              		.thumb
 1621              		.syntax unified
 1622              	.L151:
 1623 000e FEE7     		b	.L151
 1624              	.L150:
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1625              		.loc 1 2190 0 is_stmt 1
 1626 0010 03F13400 		add	r0, r3, #52
 1627 0014 7047     		bx	lr
 1628              	.L153:
 1629 0016 00BF     		.align	2
 1630              	.L152:
 1631 0018 00000000 		.word	.LANCHOR0
 1632              		.cfi_endproc
 1633              	.LFE537:
 1634              		.size	pcTaskGetName, .-pcTaskGetName
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 121


 1635              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1636              		.align	2
 1637              		.global	xTaskIncrementTick
 1638              		.thumb
 1639              		.thumb_func
 1640              		.type	xTaskIncrementTick, %function
 1641              	xTaskIncrementTick:
 1642              	.LFB538:
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t * pxTCB;
 1643              		.loc 1 2500 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1648              		.cfi_def_cfa_offset 24
 1649              		.cfi_offset 4, -24
 1650              		.cfi_offset 5, -20
 1651              		.cfi_offset 6, -16
 1652              		.cfi_offset 7, -12
 1653              		.cfi_offset 8, -8
 1654              		.cfi_offset 14, -4
 1655              	.LVL137:
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1656              		.loc 1 2509 0
 1657 0004 394B     		ldr	r3, .L174
 1658 0006 D3F81C32 		ldr	r3, [r3, #540]
 1659 000a 002B     		cmp	r3, #0
 1660 000c 5ED1     		bne	.L155
 1661              	.LBB27:
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1662              		.loc 1 2513 0
 1663 000e 374B     		ldr	r3, .L174
 1664 0010 D3F81442 		ldr	r4, [r3, #532]
 1665 0014 0134     		adds	r4, r4, #1
 1666              	.LVL138:
2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1667              		.loc 1 2517 0
 1668 0016 C3F81442 		str	r4, [r3, #532]
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1669              		.loc 1 2519 0
 1670 001a 94B9     		cbnz	r4, .L156
 1671              	.LBB28:
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1672              		.loc 1 2521 0
 1673 001c 9B6A     		ldr	r3, [r3, #40]
 1674 001e 1B68     		ldr	r3, [r3]
 1675 0020 0BB1     		cbz	r3, .L157
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1676              		.loc 1 2521 0 is_stmt 0 discriminator 1
 1677              		.syntax unified
 1678              	@ 2521 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1679 0022 72B6     		 cpsid i 
 1680              	@ 0 "" 2
 1681              		.thumb
 1682              		.syntax unified
 1683              	.L158:
 1684 0024 FEE7     		b	.L158
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 122


 1685              	.L157:
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1686              		.loc 1 2521 0 discriminator 2
 1687 0026 314B     		ldr	r3, .L174
 1688 0028 9A6A     		ldr	r2, [r3, #40]
 1689              	.LVL139:
 1690 002a D3F8FC11 		ldr	r1, [r3, #508]
 1691 002e 9962     		str	r1, [r3, #40]
 1692 0030 C3F8FC21 		str	r2, [r3, #508]
 1693 0034 D3F82422 		ldr	r2, [r3, #548]
 1694              	.LVL140:
 1695 0038 0132     		adds	r2, r2, #1
 1696 003a C3F82422 		str	r2, [r3, #548]
 1697              	.LVL141:
 1698 003e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1699              	.LVL142:
 1700              	.L156:
 1701              	.LBE28:
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1702              		.loc 1 2532 0 is_stmt 1
 1703 0042 2A4B     		ldr	r3, .L174
 1704 0044 DB6A     		ldr	r3, [r3, #44]
 1705 0046 9C42     		cmp	r4, r3
 1706 0048 03D2     		bcs	.L169
 1707              	.LBE27:
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1708              		.loc 1 2503 0
 1709 004a 0026     		movs	r6, #0
 1710 004c 45E0     		b	.L160
 1711              	.LVL143:
 1712              	.L171:
 1713              	.LBB29:
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
 1714              		.loc 1 2598 0
 1715 004e 0126     		movs	r6, #1
 1716              	.LVL144:
 1717 0050 00E0     		b	.L159
 1718              	.LVL145:
 1719              	.L169:
 1720 0052 0026     		movs	r6, #0
 1721              	.LVL146:
 1722              	.L159:
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1723              		.loc 1 2536 0
 1724 0054 254B     		ldr	r3, .L174
 1725 0056 9B6A     		ldr	r3, [r3, #40]
 1726 0058 1B68     		ldr	r3, [r3]
 1727 005a 0BB9     		cbnz	r3, .L170
 1728 005c 0123     		movs	r3, #1
 1729 005e 00E0     		b	.L161
 1730              	.L170:
 1731 0060 0023     		movs	r3, #0
 1732              	.L161:
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1733              		.loc 1 2536 0 is_stmt 0 discriminator 4
 1734 0062 23B1     		cbz	r3, .L162
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 123


 1735              		.loc 1 2543 0 is_stmt 1
 1736 0064 4FF0FF32 		mov	r2, #-1
 1737 0068 204B     		ldr	r3, .L174
 1738 006a DA62     		str	r2, [r3, #44]
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1739              		.loc 1 2544 0
 1740 006c 35E0     		b	.L160
 1741              	.L162:
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1742              		.loc 1 2552 0
 1743 006e 1F4B     		ldr	r3, .L174
 1744 0070 9B6A     		ldr	r3, [r3, #40]
 1745 0072 DB68     		ldr	r3, [r3, #12]
 1746 0074 DD68     		ldr	r5, [r3, #12]
 1747              	.LVL147:
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1748              		.loc 1 2553 0
 1749 0076 6B68     		ldr	r3, [r5, #4]
 1750              	.LVL148:
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1751              		.loc 1 2555 0
 1752 0078 9C42     		cmp	r4, r3
 1753 007a 02D2     		bcs	.L163
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
 1754              		.loc 1 2562 0
 1755 007c 1B4A     		ldr	r2, .L174
 1756 007e D362     		str	r3, [r2, #44]
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1757              		.loc 1 2563 0
 1758 0080 2BE0     		b	.L160
 1759              	.L163:
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1760              		.loc 1 2571 0
 1761 0082 05F10408 		add	r8, r5, #4
 1762 0086 4046     		mov	r0, r8
 1763 0088 FFF7FEFF 		bl	uxListRemove
 1764              	.LVL149:
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1765              		.loc 1 2575 0
 1766 008c AB6A     		ldr	r3, [r5, #40]
 1767 008e 1BB1     		cbz	r3, .L164
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1768              		.loc 1 2577 0
 1769 0090 05F11800 		add	r0, r5, #24
 1770 0094 FFF7FEFF 		bl	uxListRemove
 1771              	.LVL150:
 1772              	.L164:
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1773              		.loc 1 2586 0
 1774 0098 EB6A     		ldr	r3, [r5, #44]
 1775 009a 144A     		ldr	r2, .L174
 1776 009c D2F81022 		ldr	r2, [r2, #528]
 1777 00a0 9342     		cmp	r3, r2
 1778 00a2 02D9     		bls	.L165
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1779              		.loc 1 2586 0 is_stmt 0 discriminator 1
 1780 00a4 114A     		ldr	r2, .L174
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 124


 1781 00a6 C2F81032 		str	r3, [r2, #528]
 1782              	.L165:
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1783              		.loc 1 2586 0 discriminator 3
 1784 00aa 104F     		ldr	r7, .L174
 1785 00ac 07F13000 		add	r0, r7, #48
 1786 00b0 03EB8303 		add	r3, r3, r3, lsl #2
 1787 00b4 9A00     		lsls	r2, r3, #2
 1788 00b6 4146     		mov	r1, r8
 1789 00b8 1044     		add	r0, r0, r2
 1790 00ba FFF7FEFF 		bl	vListInsertEnd
 1791              	.LVL151:
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
 1792              		.loc 1 2596 0 is_stmt 1 discriminator 3
 1793 00be EA6A     		ldr	r2, [r5, #44]
 1794 00c0 D7F80432 		ldr	r3, [r7, #516]
 1795 00c4 DB6A     		ldr	r3, [r3, #44]
 1796 00c6 9A42     		cmp	r2, r3
 1797 00c8 C1D2     		bcs	.L171
 1798 00ca C3E7     		b	.L159
 1799              	.LVL152:
 1800              	.L155:
 1801              	.LBE29:
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1802              		.loc 1 2643 0
 1803 00cc 074A     		ldr	r2, .L174
 1804 00ce D2F82832 		ldr	r3, [r2, #552]
 1805 00d2 0133     		adds	r3, r3, #1
 1806 00d4 C2F82832 		str	r3, [r2, #552]
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1807              		.loc 1 2503 0
 1808 00d8 0026     		movs	r6, #0
 1809              	.LVL153:
 1810              	.L160:
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1811              		.loc 1 2656 0
 1812 00da 044B     		ldr	r3, .L174
 1813 00dc D3F82C32 		ldr	r3, [r3, #556]
 1814 00e0 03B1     		cbz	r3, .L168
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1815              		.loc 1 2658 0
 1816 00e2 0126     		movs	r6, #1
 1817              	.LVL154:
 1818              	.L168:
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1819              		.loc 1 2668 0
 1820 00e4 3046     		mov	r0, r6
 1821 00e6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1822              	.LVL155:
 1823              	.L175:
 1824 00ea 00BF     		.align	2
 1825              	.L174:
 1826 00ec 00000000 		.word	.LANCHOR0
 1827              		.cfi_endproc
 1828              	.LFE538:
 1829              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 1830              		.section	.text.xTaskResumeAll,"ax",%progbits
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 125


 1831              		.align	2
 1832              		.global	xTaskResumeAll
 1833              		.thumb
 1834              		.thumb_func
 1835              		.type	xTaskResumeAll, %function
 1836              	xTaskResumeAll:
 1837              	.LFB533:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
 1838              		.loc 1 2018 0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 0
 1841              		@ frame_needed = 0, uses_anonymous_args = 0
 1842              	.LVL156:
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1843              		.loc 1 2024 0
 1844 0000 364B     		ldr	r3, .L192
 1845 0002 D3F81C32 		ldr	r3, [r3, #540]
 1846 0006 0BB9     		cbnz	r3, .L177
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1847              		.loc 1 2024 0 is_stmt 0 discriminator 1
 1848              		.syntax unified
 1849              	@ 2024 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1850 0008 72B6     		 cpsid i 
 1851              	@ 0 "" 2
 1852              		.thumb
 1853              		.syntax unified
 1854              	.L178:
 1855 000a FEE7     		b	.L178
 1856              	.L177:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
 1857              		.loc 1 2018 0 is_stmt 1
 1858 000c 70B5     		push	{r4, r5, r6, lr}
 1859              		.cfi_def_cfa_offset 16
 1860              		.cfi_offset 4, -16
 1861              		.cfi_offset 5, -12
 1862              		.cfi_offset 6, -8
 1863              		.cfi_offset 14, -4
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1864              		.loc 1 2031 0
 1865 000e FFF7FEFF 		bl	vPortEnterCritical
 1866              	.LVL157:
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1867              		.loc 1 2033 0
 1868 0012 324B     		ldr	r3, .L192
 1869 0014 D3F81C22 		ldr	r2, [r3, #540]
 1870 0018 013A     		subs	r2, r2, #1
 1871 001a C3F81C22 		str	r2, [r3, #540]
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1872              		.loc 1 2035 0
 1873 001e D3F81C32 		ldr	r3, [r3, #540]
 1874 0022 002B     		cmp	r3, #0
 1875 0024 52D1     		bne	.L188
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1876              		.loc 1 2037 0
 1877 0026 2D4B     		ldr	r3, .L192
 1878 0028 D3F80032 		ldr	r3, [r3, #512]
 1879 002c 3BBB     		cbnz	r3, .L189
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 126


2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1880              		.loc 1 2020 0
 1881 002e 0024     		movs	r4, #0
 1882 0030 4FE0     		b	.L179
 1883              	.LVL158:
 1884              	.L183:
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1885              		.loc 1 2043 0
 1886 0032 2A4D     		ldr	r5, .L192
 1887 0034 2B6A     		ldr	r3, [r5, #32]
 1888 0036 DC68     		ldr	r4, [r3, #12]
 1889              	.LVL159:
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 1890              		.loc 1 2044 0
 1891 0038 04F11800 		add	r0, r4, #24
 1892 003c FFF7FEFF 		bl	uxListRemove
 1893              	.LVL160:
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1894              		.loc 1 2045 0
 1895 0040 261D     		adds	r6, r4, #4
 1896 0042 3046     		mov	r0, r6
 1897 0044 FFF7FEFF 		bl	uxListRemove
 1898              	.LVL161:
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1899              		.loc 1 2046 0
 1900 0048 E36A     		ldr	r3, [r4, #44]
 1901 004a D5F81022 		ldr	r2, [r5, #528]
 1902 004e 9342     		cmp	r3, r2
 1903 0050 01D9     		bls	.L181
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1904              		.loc 1 2046 0 is_stmt 0 discriminator 1
 1905 0052 C5F81032 		str	r3, [r5, #528]
 1906              	.L181:
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1907              		.loc 1 2046 0 discriminator 3
 1908 0056 214D     		ldr	r5, .L192
 1909 0058 05F13000 		add	r0, r5, #48
 1910 005c 03EB8303 		add	r3, r3, r3, lsl #2
 1911 0060 9A00     		lsls	r2, r3, #2
 1912 0062 3146     		mov	r1, r6
 1913 0064 1044     		add	r0, r0, r2
 1914 0066 FFF7FEFF 		bl	vListInsertEnd
 1915              	.LVL162:
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1916              		.loc 1 2050 0 is_stmt 1 discriminator 3
 1917 006a E26A     		ldr	r2, [r4, #44]
 1918 006c D5F80432 		ldr	r3, [r5, #516]
 1919 0070 DB6A     		ldr	r3, [r3, #44]
 1920 0072 9A42     		cmp	r2, r3
 1921 0074 04D3     		bcc	.L180
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1922              		.loc 1 2052 0
 1923 0076 0122     		movs	r2, #1
 1924 0078 C5F82C22 		str	r2, [r5, #556]
 1925 007c 00E0     		b	.L180
 1926              	.LVL163:
 1927              	.L189:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 127


 1928 007e 0024     		movs	r4, #0
 1929              	.LVL164:
 1930              	.L180:
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1931              		.loc 1 2041 0
 1932 0080 164B     		ldr	r3, .L192
 1933 0082 5B69     		ldr	r3, [r3, #20]
 1934 0084 002B     		cmp	r3, #0
 1935 0086 D4D1     		bne	.L183
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1936              		.loc 1 2060 0
 1937 0088 0CB1     		cbz	r4, .L184
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1938              		.loc 1 2068 0
 1939 008a FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1940              	.LVL165:
 1941              	.L184:
 1942              	.LBB30:
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1943              		.loc 1 2076 0
 1944 008e 134B     		ldr	r3, .L192
 1945 0090 D3F82842 		ldr	r4, [r3, #552]
 1946              	.LVL166:
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1947              		.loc 1 2078 0
 1948 0094 64B1     		cbz	r4, .L185
 1949              	.L187:
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
 1950              		.loc 1 2082 0
 1951 0096 FFF7FEFF 		bl	xTaskIncrementTick
 1952              	.LVL167:
 1953 009a 18B1     		cbz	r0, .L186
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
 1954              		.loc 1 2084 0
 1955 009c 0122     		movs	r2, #1
 1956 009e 0F4B     		ldr	r3, .L192
 1957 00a0 C3F82C22 		str	r2, [r3, #556]
 1958              	.L186:
 1959              	.LVL168:
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1960              		.loc 1 2091 0
 1961 00a4 013C     		subs	r4, r4, #1
 1962              	.LVL169:
 1963 00a6 F6D1     		bne	.L187
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1964              		.loc 1 2093 0
 1965 00a8 0022     		movs	r2, #0
 1966 00aa 0C4B     		ldr	r3, .L192
 1967 00ac C3F82822 		str	r2, [r3, #552]
 1968              	.L185:
 1969              	.LBE30:
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1970              		.loc 1 2101 0
 1971 00b0 0A4B     		ldr	r3, .L192
 1972 00b2 D3F82C32 		ldr	r3, [r3, #556]
 1973 00b6 5BB1     		cbz	r3, .L190
 1974              	.LVL170:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 128


2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1975              		.loc 1 2108 0
 1976 00b8 4FF08052 		mov	r2, #268435456
 1977 00bc 084B     		ldr	r3, .L192+4
 1978 00be 1A60     		str	r2, [r3]
 1979              		.syntax unified
 1980              	@ 2108 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1981 00c0 BFF34F8F 		dsb
 1982              	@ 0 "" 2
 1983              	@ 2108 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1984 00c4 BFF36F8F 		isb
 1985              	@ 0 "" 2
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1986              		.loc 1 2105 0
 1987              		.thumb
 1988              		.syntax unified
 1989 00c8 0124     		movs	r4, #1
 1990              	.LVL171:
 1991 00ca 02E0     		b	.L179
 1992              	.LVL172:
 1993              	.L188:
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1994              		.loc 1 2020 0
 1995 00cc 0024     		movs	r4, #0
 1996 00ce 00E0     		b	.L179
 1997              	.LVL173:
 1998              	.L190:
 1999 00d0 0024     		movs	r4, #0
 2000              	.LVL174:
 2001              	.L179:
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2002              		.loc 1 2121 0
 2003 00d2 FFF7FEFF 		bl	vPortExitCritical
 2004              	.LVL175:
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2005              		.loc 1 2124 0
 2006 00d6 2046     		mov	r0, r4
 2007 00d8 70BD     		pop	{r4, r5, r6, pc}
 2008              	.LVL176:
 2009              	.L193:
 2010 00da 00BF     		.align	2
 2011              	.L192:
 2012 00dc 00000000 		.word	.LANCHOR0
 2013 00e0 04ED00E0 		.word	-536810236
 2014              		.cfi_endproc
 2015              	.LFE533:
 2016              		.size	xTaskResumeAll, .-xTaskResumeAll
 2017              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2018              		.align	2
 2019              		.global	vTaskDelayUntil
 2020              		.thumb
 2021              		.thumb_func
 2022              		.type	vTaskDelayUntil, %function
 2023              	vTaskDelayUntil:
 2024              	.LFB521:
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
 2025              		.loc 1 1141 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 129


 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 0
 2028              		@ frame_needed = 0, uses_anonymous_args = 0
 2029              	.LVL177:
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2030              		.loc 1 1145 0
 2031 0000 08B9     		cbnz	r0, .L195
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2032              		.loc 1 1145 0 is_stmt 0 discriminator 1
 2033              		.syntax unified
 2034              	@ 1145 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2035 0002 72B6     		 cpsid i 
 2036              	@ 0 "" 2
 2037              		.thumb
 2038              		.syntax unified
 2039              	.L196:
 2040 0004 FEE7     		b	.L196
 2041              	.L195:
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
 2042              		.loc 1 1141 0 is_stmt 1
 2043 0006 38B5     		push	{r3, r4, r5, lr}
 2044              		.cfi_def_cfa_offset 16
 2045              		.cfi_offset 3, -16
 2046              		.cfi_offset 4, -12
 2047              		.cfi_offset 5, -8
 2048              		.cfi_offset 14, -4
 2049 0008 0546     		mov	r5, r0
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2050              		.loc 1 1146 0
 2051 000a 09B9     		cbnz	r1, .L197
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2052              		.loc 1 1146 0 is_stmt 0 discriminator 1
 2053              		.syntax unified
 2054              	@ 1146 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2055 000c 72B6     		 cpsid i 
 2056              	@ 0 "" 2
 2057              		.thumb
 2058              		.syntax unified
 2059              	.L198:
 2060 000e FEE7     		b	.L198
 2061              	.L197:
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2062              		.loc 1 1147 0 is_stmt 1
 2063 0010 1A4B     		ldr	r3, .L210
 2064 0012 D3F81C32 		ldr	r3, [r3, #540]
 2065 0016 0BB1     		cbz	r3, .L199
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2066              		.loc 1 1147 0 is_stmt 0 discriminator 1
 2067              		.syntax unified
 2068              	@ 1147 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2069 0018 72B6     		 cpsid i 
 2070              	@ 0 "" 2
 2071              		.thumb
 2072              		.syntax unified
 2073              	.L200:
 2074 001a FEE7     		b	.L200
 2075              	.L199:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 130


 2076 001c 0C46     		mov	r4, r1
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2077              		.loc 1 1149 0 is_stmt 1
 2078 001e FFF7FEFF 		bl	vTaskSuspendAll
 2079              	.LVL178:
 2080              	.LBB31:
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2081              		.loc 1 1153 0
 2082 0022 164B     		ldr	r3, .L210
 2083 0024 D3F81402 		ldr	r0, [r3, #532]
 2084              	.LVL179:
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2085              		.loc 1 1156 0
 2086 0028 2A68     		ldr	r2, [r5]
 2087 002a A318     		adds	r3, r4, r2
 2088              	.LVL180:
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2089              		.loc 1 1158 0
 2090 002c 9042     		cmp	r0, r2
 2091 002e 05D2     		bcs	.L201
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2092              		.loc 1 1165 0
 2093 0030 9A42     		cmp	r2, r3
 2094 0032 09D9     		bls	.L205
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2095              		.loc 1 1165 0 is_stmt 0 discriminator 1
 2096 0034 9842     		cmp	r0, r3
 2097 0036 09D3     		bcc	.L206
 2098              	.LBE31:
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2099              		.loc 1 1143 0 is_stmt 1
 2100 0038 0022     		movs	r2, #0
 2101 003a 0CE0     		b	.L202
 2102              	.L201:
 2103              	.LBB32:
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2104              		.loc 1 1179 0
 2105 003c 9A42     		cmp	r2, r3
 2106 003e 07D8     		bhi	.L207
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2107              		.loc 1 1179 0 is_stmt 0 discriminator 1
 2108 0040 9842     		cmp	r0, r3
 2109 0042 07D3     		bcc	.L208
 2110              	.LBE32:
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2111              		.loc 1 1143 0 is_stmt 1
 2112 0044 0022     		movs	r2, #0
 2113 0046 06E0     		b	.L202
 2114              	.L205:
 2115 0048 0022     		movs	r2, #0
 2116 004a 04E0     		b	.L202
 2117              	.L206:
 2118              	.LBB33:
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2119              		.loc 1 1167 0
 2120 004c 0122     		movs	r2, #1
 2121 004e 02E0     		b	.L202
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 131


 2122              	.L207:
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2123              		.loc 1 1181 0
 2124 0050 0122     		movs	r2, #1
 2125 0052 00E0     		b	.L202
 2126              	.L208:
 2127 0054 0122     		movs	r2, #1
 2128              	.L202:
 2129              	.LVL181:
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2130              		.loc 1 1190 0
 2131 0056 2B60     		str	r3, [r5]
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2132              		.loc 1 1192 0
 2133 0058 1AB1     		cbz	r2, .L203
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2134              		.loc 1 1198 0
 2135 005a 0021     		movs	r1, #0
 2136 005c 181A     		subs	r0, r3, r0
 2137              	.LVL182:
 2138 005e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2139              	.LVL183:
 2140              	.L203:
 2141              	.LBE33:
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2142              		.loc 1 1205 0
 2143 0062 FFF7FEFF 		bl	xTaskResumeAll
 2144              	.LVL184:
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2145              		.loc 1 1209 0
 2146 0066 38B9     		cbnz	r0, .L194
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2147              		.loc 1 1211 0
 2148 0068 4FF08052 		mov	r2, #268435456
 2149 006c 044B     		ldr	r3, .L210+4
 2150 006e 1A60     		str	r2, [r3]
 2151              		.syntax unified
 2152              	@ 1211 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2153 0070 BFF34F8F 		dsb
 2154              	@ 0 "" 2
 2155              	@ 1211 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2156 0074 BFF36F8F 		isb
 2157              	@ 0 "" 2
 2158              		.thumb
 2159              		.syntax unified
 2160              	.L194:
 2161 0078 38BD     		pop	{r3, r4, r5, pc}
 2162              	.LVL185:
 2163              	.L211:
 2164 007a 00BF     		.align	2
 2165              	.L210:
 2166 007c 00000000 		.word	.LANCHOR0
 2167 0080 04ED00E0 		.word	-536810236
 2168              		.cfi_endproc
 2169              	.LFE521:
 2170              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2171              		.section	.text.vTaskDelay,"ax",%progbits
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 132


 2172              		.align	2
 2173              		.global	vTaskDelay
 2174              		.thumb
 2175              		.thumb_func
 2176              		.type	vTaskDelay, %function
 2177              	vTaskDelay:
 2178              	.LFB522:
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2179              		.loc 1 1225 0
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 0
 2182              		@ frame_needed = 0, uses_anonymous_args = 0
 2183              	.LVL186:
 2184 0000 10B5     		push	{r4, lr}
 2185              		.cfi_def_cfa_offset 8
 2186              		.cfi_offset 4, -8
 2187              		.cfi_offset 14, -4
 2188              	.LVL187:
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2189              		.loc 1 1229 0
 2190 0002 78B1     		cbz	r0, .L217
 2191 0004 0446     		mov	r4, r0
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
 2192              		.loc 1 1231 0
 2193 0006 0D4B     		ldr	r3, .L219
 2194 0008 D3F81C32 		ldr	r3, [r3, #540]
 2195 000c 0BB1     		cbz	r3, .L214
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
 2196              		.loc 1 1231 0 is_stmt 0 discriminator 1
 2197              		.syntax unified
 2198              	@ 1231 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2199 000e 72B6     		 cpsid i 
 2200              	@ 0 "" 2
 2201              		.thumb
 2202              		.syntax unified
 2203              	.L215:
 2204 0010 FEE7     		b	.L215
 2205              	.L214:
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2206              		.loc 1 1232 0 is_stmt 1
 2207 0012 FFF7FEFF 		bl	vTaskSuspendAll
 2208              	.LVL188:
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2209              		.loc 1 1243 0
 2210 0016 0021     		movs	r1, #0
 2211 0018 2046     		mov	r0, r4
 2212 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2213              	.LVL189:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2214              		.loc 1 1245 0
 2215 001e FFF7FEFF 		bl	xTaskResumeAll
 2216              	.LVL190:
 2217 0022 00E0     		b	.L213
 2218              	.LVL191:
 2219              	.L217:
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2220              		.loc 1 1226 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 133


 2221 0024 0020     		movs	r0, #0
 2222              	.LVL192:
 2223              	.L213:
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2224              		.loc 1 1254 0
 2225 0026 38B9     		cbnz	r0, .L212
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2226              		.loc 1 1256 0
 2227 0028 4FF08052 		mov	r2, #268435456
 2228 002c 044B     		ldr	r3, .L219+4
 2229 002e 1A60     		str	r2, [r3]
 2230              		.syntax unified
 2231              	@ 1256 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2232 0030 BFF34F8F 		dsb
 2233              	@ 0 "" 2
 2234              	@ 1256 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2235 0034 BFF36F8F 		isb
 2236              	@ 0 "" 2
 2237              		.thumb
 2238              		.syntax unified
 2239              	.L212:
 2240 0038 10BD     		pop	{r4, pc}
 2241              	.L220:
 2242 003a 00BF     		.align	2
 2243              	.L219:
 2244 003c 00000000 		.word	.LANCHOR0
 2245 0040 04ED00E0 		.word	-536810236
 2246              		.cfi_endproc
 2247              	.LFE522:
 2248              		.size	vTaskDelay, .-vTaskDelay
 2249              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 2250              		.align	2
 2251              		.thumb
 2252              		.thumb_func
 2253              		.type	prvCheckTasksWaitingTermination, %function
 2254              	prvCheckTasksWaitingTermination:
 2255              	.LFB552:
3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2256              		.loc 1 3377 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 0
 2259              		@ frame_needed = 0, uses_anonymous_args = 0
 2260 0000 38B5     		push	{r3, r4, r5, lr}
 2261              		.cfi_def_cfa_offset 16
 2262              		.cfi_offset 3, -16
 2263              		.cfi_offset 4, -12
 2264              		.cfi_offset 5, -8
 2265              		.cfi_offset 14, -4
 2266              	.LBB34:
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2267              		.loc 1 3387 0
 2268 0002 1FE0     		b	.L223
 2269              	.L224:
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2270              		.loc 1 3389 0
 2271 0004 FFF7FEFF 		bl	vTaskSuspendAll
 2272              	.LVL193:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 134


3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2273              		.loc 1 3391 0
 2274 0008 114B     		ldr	r3, .L226
 2275 000a D3F8E841 		ldr	r4, [r3, #488]
 2276              	.LVL194:
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2277              		.loc 1 3393 0
 2278 000e FFF7FEFF 		bl	xTaskResumeAll
 2279              	.LVL195:
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2280              		.loc 1 3395 0
 2281 0012 BCB1     		cbz	r4, .L223
 2282              	.LBB35:
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2283              		.loc 1 3399 0
 2284 0014 FFF7FEFF 		bl	vPortEnterCritical
 2285              	.LVL196:
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2286              		.loc 1 3401 0
 2287 0018 0D4C     		ldr	r4, .L226
 2288              	.LVL197:
 2289 001a D4F8F431 		ldr	r3, [r4, #500]
 2290 001e DD68     		ldr	r5, [r3, #12]
 2291              	.LVL198:
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxCurrentNumberOfTasks;
 2292              		.loc 1 3402 0
 2293 0020 281D     		adds	r0, r5, #4
 2294 0022 FFF7FEFF 		bl	uxListRemove
 2295              	.LVL199:
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
 2296              		.loc 1 3403 0
 2297 0026 D4F80032 		ldr	r3, [r4, #512]
 2298 002a 013B     		subs	r3, r3, #1
 2299 002c C4F80032 		str	r3, [r4, #512]
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2300              		.loc 1 3404 0
 2301 0030 D4F81832 		ldr	r3, [r4, #536]
 2302 0034 013B     		subs	r3, r3, #1
 2303 0036 C4F81832 		str	r3, [r4, #536]
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2304              		.loc 1 3406 0
 2305 003a FFF7FEFF 		bl	vPortExitCritical
 2306              	.LVL200:
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2307              		.loc 1 3408 0
 2308 003e 2846     		mov	r0, r5
 2309 0040 FFF7FEFF 		bl	prvDeleteTCB
 2310              	.LVL201:
 2311              	.L223:
 2312              	.LBE35:
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2313              		.loc 1 3387 0
 2314 0044 024B     		ldr	r3, .L226
 2315 0046 D3F81832 		ldr	r3, [r3, #536]
 2316 004a 002B     		cmp	r3, #0
 2317 004c DAD1     		bne	.L224
 2318              	.LBE34:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 135


3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2319              		.loc 1 3417 0
 2320 004e 38BD     		pop	{r3, r4, r5, pc}
 2321              	.L227:
 2322              		.align	2
 2323              	.L226:
 2324 0050 00000000 		.word	.LANCHOR0
 2325              		.cfi_endproc
 2326              	.LFE552:
 2327              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 2328              		.section	.text.prvIdleTask,"ax",%progbits
 2329              		.align	2
 2330              		.thumb
 2331              		.thumb_func
 2332              		.type	prvIdleTask, %function
 2333              	prvIdleTask:
 2334              	.LFB548:
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop warnings. */
 2335              		.loc 1 3143 0
 2336              		.cfi_startproc
 2337              		@ Volatile: function does not return.
 2338              		@ args = 0, pretend = 0, frame = 0
 2339              		@ frame_needed = 0, uses_anonymous_args = 0
 2340              	.LVL202:
 2341 0000 08B5     		push	{r3, lr}
 2342              		.cfi_def_cfa_offset 8
 2343              		.cfi_offset 3, -8
 2344              		.cfi_offset 14, -4
 2345              	.LVL203:
 2346              	.L230:
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2347              		.loc 1 3154 0
 2348 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 2349              	.LVL204:
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2350              		.loc 1 3177 0
 2351 0006 074B     		ldr	r3, .L232
 2352 0008 1B6B     		ldr	r3, [r3, #48]
 2353 000a 012B     		cmp	r3, #1
 2354 000c 07D9     		bls	.L229
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2355              		.loc 1 3179 0
 2356 000e 4FF08052 		mov	r2, #268435456
 2357 0012 054B     		ldr	r3, .L232+4
 2358 0014 1A60     		str	r2, [r3]
 2359              		.syntax unified
 2360              	@ 3179 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2361 0016 BFF34F8F 		dsb
 2362              	@ 0 "" 2
 2363              	@ 3179 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2364 001a BFF36F8F 		isb
 2365              	@ 0 "" 2
 2366              		.thumb
 2367              		.syntax unified
 2368              	.L229:
 2369              	.LBB36:
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 136


 2370              		.loc 1 3197 0
 2371 001e FFF7FEFF 		bl	vApplicationIdleHook
 2372              	.LVL205:
 2373              	.LBE36:
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2374              		.loc 1 3245 0
 2375 0022 EEE7     		b	.L230
 2376              	.L233:
 2377              		.align	2
 2378              	.L232:
 2379 0024 00000000 		.word	.LANCHOR0
 2380 0028 04ED00E0 		.word	-536810236
 2381              		.cfi_endproc
 2382              	.LFE548:
 2383              		.size	prvIdleTask, .-prvIdleTask
 2384              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2385              		.align	2
 2386              		.global	vTaskSwitchContext
 2387              		.thumb
 2388              		.thumb_func
 2389              		.type	vTaskSwitchContext, %function
 2390              	vTaskSwitchContext:
 2391              	.LFB539:
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2392              		.loc 1 2762 0
 2393              		.cfi_startproc
 2394              		@ args = 0, pretend = 0, frame = 0
 2395              		@ frame_needed = 0, uses_anonymous_args = 0
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2396              		.loc 1 2763 0
 2397 0000 2D4B     		ldr	r3, .L245
 2398 0002 D3F81C32 		ldr	r3, [r3, #540]
 2399 0006 23B1     		cbz	r3, .L235
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2400              		.loc 1 2767 0
 2401 0008 0122     		movs	r2, #1
 2402 000a 2B4B     		ldr	r3, .L245
 2403 000c C3F82C22 		str	r2, [r3, #556]
 2404 0010 7047     		bx	lr
 2405              	.L235:
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2406              		.loc 1 2762 0
 2407 0012 10B5     		push	{r4, lr}
 2408              		.cfi_def_cfa_offset 8
 2409              		.cfi_offset 4, -8
 2410              		.cfi_offset 14, -4
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2411              		.loc 1 2771 0
 2412 0014 284B     		ldr	r3, .L245
 2413 0016 0022     		movs	r2, #0
 2414 0018 C3F82C22 		str	r2, [r3, #556]
 2415              	.LBB37:
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
 2416              		.loc 1 2803 0
 2417 001c D3F80432 		ldr	r3, [r3, #516]
 2418 0020 1B6B     		ldr	r3, [r3, #48]
 2419              	.LVL206:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 137


2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
 2420              		.loc 1 2806 0
 2421 0022 1A68     		ldr	r2, [r3]
 2422 0024 B2F1A53F 		cmp	r2, #-1515870811
 2423 0028 0BD1     		bne	.L237
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
 2424              		.loc 1 2807 0 discriminator 1
 2425 002a 5A68     		ldr	r2, [r3, #4]
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
 2426              		.loc 1 2806 0 discriminator 1
 2427 002c B2F1A53F 		cmp	r2, #-1515870811
 2428 0030 07D1     		bne	.L237
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
 2429              		.loc 1 2808 0
 2430 0032 9A68     		ldr	r2, [r3, #8]
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
 2431              		.loc 1 2807 0
 2432 0034 B2F1A53F 		cmp	r2, #-1515870811
 2433 0038 03D1     		bne	.L237
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 2434              		.loc 1 2809 0
 2435 003a DB68     		ldr	r3, [r3, #12]
 2436              	.LVL207:
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
 2437              		.loc 1 2808 0
 2438 003c B3F1A53F 		cmp	r3, #-1515870811
 2439 0040 07D0     		beq	.L238
 2440              	.L237:
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 2441              		.loc 1 2811 0
 2442 0042 1D4B     		ldr	r3, .L245
 2443 0044 D3F80402 		ldr	r0, [r3, #516]
 2444 0048 D3F80412 		ldr	r1, [r3, #516]
 2445 004c 3431     		adds	r1, r1, #52
 2446 004e FFF7FEFF 		bl	vApplicationStackOverflowHook
 2447              	.LVL208:
 2448              	.L238:
 2449              	.LBE37:
 2450              	.LBB38:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2451              		.loc 1 2817 0
 2452 0052 194B     		ldr	r3, .L245
 2453 0054 D3F81032 		ldr	r3, [r3, #528]
 2454              	.LVL209:
 2455 0058 03E0     		b	.L239
 2456              	.L242:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2457              		.loc 1 2817 0 is_stmt 0 discriminator 5
 2458 005a 0BB9     		cbnz	r3, .L240
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2459              		.loc 1 2817 0 discriminator 2
 2460              		.syntax unified
 2461              	@ 2817 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2462 005c 72B6     		 cpsid i 
 2463              	@ 0 "" 2
 2464              		.thumb
 2465              		.syntax unified
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 138


 2466              	.L241:
 2467 005e FEE7     		b	.L241
 2468              	.L240:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2469              		.loc 1 2817 0 discriminator 3
 2470 0060 013B     		subs	r3, r3, #1
 2471              	.LVL210:
 2472              	.L239:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2473              		.loc 1 2817 0 discriminator 4
 2474 0062 03EB8301 		add	r1, r3, r3, lsl #2
 2475 0066 8A00     		lsls	r2, r1, #2
 2476 0068 1349     		ldr	r1, .L245
 2477 006a 0A44     		add	r2, r2, r1
 2478 006c 126B     		ldr	r2, [r2, #48]
 2479 006e 002A     		cmp	r2, #0
 2480 0070 F3D0     		beq	.L242
 2481              	.LVL211:
 2482              	.LBB39:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2483              		.loc 1 2817 0 discriminator 6
 2484 0072 0846     		mov	r0, r1
 2485 0074 9900     		lsls	r1, r3, #2
 2486 0076 CC18     		adds	r4, r1, r3
 2487 0078 A200     		lsls	r2, r4, #2
 2488 007a 0244     		add	r2, r2, r0
 2489 007c 546B     		ldr	r4, [r2, #52]
 2490 007e 6468     		ldr	r4, [r4, #4]
 2491 0080 5463     		str	r4, [r2, #52]
 2492 0082 3030     		adds	r0, r0, #48
 2493 0084 1944     		add	r1, r1, r3
 2494 0086 8A00     		lsls	r2, r1, #2
 2495 0088 0832     		adds	r2, r2, #8
 2496 008a 0244     		add	r2, r2, r0
 2497 008c 9442     		cmp	r4, r2
 2498 008e 06D1     		bne	.L243
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2499              		.loc 1 2817 0 discriminator 7
 2500 0090 6068     		ldr	r0, [r4, #4]
 2501 0092 03EB8301 		add	r1, r3, r3, lsl #2
 2502 0096 8A00     		lsls	r2, r1, #2
 2503 0098 0749     		ldr	r1, .L245
 2504 009a 0A44     		add	r2, r2, r1
 2505 009c 5063     		str	r0, [r2, #52]
 2506              	.L243:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2507              		.loc 1 2817 0 discriminator 9
 2508 009e 0649     		ldr	r1, .L245
 2509 00a0 03EB8300 		add	r0, r3, r3, lsl #2
 2510 00a4 8200     		lsls	r2, r0, #2
 2511 00a6 0A44     		add	r2, r2, r1
 2512 00a8 526B     		ldr	r2, [r2, #52]
 2513 00aa D268     		ldr	r2, [r2, #12]
 2514 00ac C1F80422 		str	r2, [r1, #516]
 2515              	.LBE39:
 2516 00b0 C1F81032 		str	r3, [r1, #528]
 2517 00b4 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 139


 2518              	.L246:
 2519 00b6 00BF     		.align	2
 2520              	.L245:
 2521 00b8 00000000 		.word	.LANCHOR0
 2522              	.LBE38:
 2523              		.cfi_endproc
 2524              	.LFE539:
 2525              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2526              		.section	.text.vTaskSuspend,"ax",%progbits
 2527              		.align	2
 2528              		.global	vTaskSuspend
 2529              		.thumb
 2530              		.thumb_func
 2531              		.type	vTaskSuspend, %function
 2532              	vTaskSuspend:
 2533              	.LFB526:
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 2534              		.loc 1 1567 0 is_stmt 1
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 0
 2537              		@ frame_needed = 0, uses_anonymous_args = 0
 2538              	.LVL212:
 2539 0000 70B5     		push	{r4, r5, r6, lr}
 2540              		.cfi_def_cfa_offset 16
 2541              		.cfi_offset 4, -16
 2542              		.cfi_offset 5, -12
 2543              		.cfi_offset 6, -8
 2544              		.cfi_offset 14, -4
 2545 0002 0446     		mov	r4, r0
1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2546              		.loc 1 1570 0
 2547 0004 FFF7FEFF 		bl	vPortEnterCritical
 2548              	.LVL213:
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2549              		.loc 1 1574 0
 2550 0008 14B9     		cbnz	r4, .L248
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2551              		.loc 1 1574 0 is_stmt 0 discriminator 1
 2552 000a 214B     		ldr	r3, .L257
 2553 000c D3F80442 		ldr	r4, [r3, #516]
 2554              	.LVL214:
 2555              	.L248:
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2556              		.loc 1 1580 0 is_stmt 1 discriminator 4
 2557 0010 261D     		adds	r6, r4, #4
 2558 0012 3046     		mov	r0, r6
 2559 0014 FFF7FEFF 		bl	uxListRemove
 2560              	.LVL215:
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2561              		.loc 1 1590 0 discriminator 4
 2562 0018 A36A     		ldr	r3, [r4, #40]
 2563 001a 1BB1     		cbz	r3, .L249
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2564              		.loc 1 1592 0
 2565 001c 04F11800 		add	r0, r4, #24
 2566 0020 FFF7FEFF 		bl	uxListRemove
 2567              	.LVL216:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 140


 2568              	.L249:
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2569              		.loc 1 1599 0
 2570 0024 1A4D     		ldr	r5, .L257
 2571 0026 3146     		mov	r1, r6
 2572 0028 2846     		mov	r0, r5
 2573 002a FFF7FEFF 		bl	vListInsertEnd
 2574              	.LVL217:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2575              		.loc 1 1601 0
 2576 002e FFF7FEFF 		bl	vPortExitCritical
 2577              	.LVL218:
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2578              		.loc 1 1603 0
 2579 0032 D5F80832 		ldr	r3, [r5, #520]
 2580 0036 2BB1     		cbz	r3, .L250
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2581              		.loc 1 1607 0
 2582 0038 FFF7FEFF 		bl	vPortEnterCritical
 2583              	.LVL219:
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2584              		.loc 1 1609 0
 2585 003c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2586              	.LVL220:
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2587              		.loc 1 1611 0
 2588 0040 FFF7FEFF 		bl	vPortExitCritical
 2589              	.LVL221:
 2590              	.L250:
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2591              		.loc 1 1618 0
 2592 0044 124B     		ldr	r3, .L257
 2593 0046 D3F80432 		ldr	r3, [r3, #516]
 2594 004a 9C42     		cmp	r4, r3
 2595 004c 1FD1     		bne	.L247
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2596              		.loc 1 1620 0
 2597 004e 104B     		ldr	r3, .L257
 2598 0050 D3F80832 		ldr	r3, [r3, #520]
 2599 0054 73B1     		cbz	r3, .L252
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2600              		.loc 1 1623 0
 2601 0056 0E4B     		ldr	r3, .L257
 2602 0058 D3F81C32 		ldr	r3, [r3, #540]
 2603 005c 0BB1     		cbz	r3, .L253
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2604              		.loc 1 1623 0 is_stmt 0 discriminator 1
 2605              		.syntax unified
 2606              	@ 1623 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2607 005e 72B6     		 cpsid i 
 2608              	@ 0 "" 2
 2609              		.thumb
 2610              		.syntax unified
 2611              	.L254:
 2612 0060 FEE7     		b	.L254
 2613              	.L253:
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 141


 2614              		.loc 1 1624 0 is_stmt 1
 2615 0062 4FF08052 		mov	r2, #268435456
 2616 0066 0B4B     		ldr	r3, .L257+4
 2617 0068 1A60     		str	r2, [r3]
 2618              		.syntax unified
 2619              	@ 1624 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2620 006a BFF34F8F 		dsb
 2621              	@ 0 "" 2
 2622              	@ 1624 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2623 006e BFF36F8F 		isb
 2624              	@ 0 "" 2
 2625              		.thumb
 2626              		.syntax unified
 2627 0072 70BD     		pop	{r4, r5, r6, pc}
 2628              	.LVL222:
 2629              	.L252:
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2630              		.loc 1 1631 0
 2631 0074 064B     		ldr	r3, .L257
 2632 0076 1A68     		ldr	r2, [r3]
 2633 0078 D3F80032 		ldr	r3, [r3, #512]
 2634 007c 9A42     		cmp	r2, r3
 2635 007e 04D1     		bne	.L255
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2636              		.loc 1 1637 0
 2637 0080 0022     		movs	r2, #0
 2638 0082 034B     		ldr	r3, .L257
 2639 0084 C3F80422 		str	r2, [r3, #516]
 2640 0088 70BD     		pop	{r4, r5, r6, pc}
 2641              	.LVL223:
 2642              	.L255:
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2643              		.loc 1 1641 0
 2644 008a FFF7FEFF 		bl	vTaskSwitchContext
 2645              	.LVL224:
 2646              	.L247:
 2647 008e 70BD     		pop	{r4, r5, r6, pc}
 2648              	.LVL225:
 2649              	.L258:
 2650              		.align	2
 2651              	.L257:
 2652 0090 00000000 		.word	.LANCHOR0
 2653 0094 04ED00E0 		.word	-536810236
 2654              		.cfi_endproc
 2655              	.LFE526:
 2656              		.size	vTaskSuspend, .-vTaskSuspend
 2657              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2658              		.align	2
 2659              		.global	vTaskPlaceOnEventList
 2660              		.thumb
 2661              		.thumb_func
 2662              		.type	vTaskPlaceOnEventList, %function
 2663              	vTaskPlaceOnEventList:
 2664              	.LFB540:
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2665              		.loc 1 2832 0
 2666              		.cfi_startproc
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 142


 2667              		@ args = 0, pretend = 0, frame = 0
 2668              		@ frame_needed = 0, uses_anonymous_args = 0
 2669              	.LVL226:
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2670              		.loc 1 2833 0
 2671 0000 08B9     		cbnz	r0, .L260
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2672              		.loc 1 2833 0 is_stmt 0 discriminator 1
 2673              		.syntax unified
 2674              	@ 2833 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2675 0002 72B6     		 cpsid i 
 2676              	@ 0 "" 2
 2677              		.thumb
 2678              		.syntax unified
 2679              	.L261:
 2680 0004 FEE7     		b	.L261
 2681              	.L260:
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2682              		.loc 1 2832 0 is_stmt 1
 2683 0006 10B5     		push	{r4, lr}
 2684              		.cfi_def_cfa_offset 8
 2685              		.cfi_offset 4, -8
 2686              		.cfi_offset 14, -4
 2687 0008 0C46     		mov	r4, r1
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2688              		.loc 1 2842 0
 2689 000a 054B     		ldr	r3, .L263
 2690 000c D3F80412 		ldr	r1, [r3, #516]
 2691              	.LVL227:
 2692 0010 1831     		adds	r1, r1, #24
 2693 0012 FFF7FEFF 		bl	vListInsert
 2694              	.LVL228:
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2695              		.loc 1 2844 0
 2696 0016 0121     		movs	r1, #1
 2697 0018 2046     		mov	r0, r4
 2698 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2699              	.LVL229:
 2700 001e 10BD     		pop	{r4, pc}
 2701              	.LVL230:
 2702              	.L264:
 2703              		.align	2
 2704              	.L263:
 2705 0020 00000000 		.word	.LANCHOR0
 2706              		.cfi_endproc
 2707              	.LFE540:
 2708              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2709              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2710              		.align	2
 2711              		.global	vTaskPlaceOnUnorderedEventList
 2712              		.thumb
 2713              		.thumb_func
 2714              		.type	vTaskPlaceOnUnorderedEventList, %function
 2715              	vTaskPlaceOnUnorderedEventList:
 2716              	.LFB541:
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2717              		.loc 1 2849 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 143


 2718              		.cfi_startproc
 2719              		@ args = 0, pretend = 0, frame = 0
 2720              		@ frame_needed = 0, uses_anonymous_args = 0
 2721              	.LVL231:
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2722              		.loc 1 2850 0
 2723 0000 08B9     		cbnz	r0, .L266
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2724              		.loc 1 2850 0 is_stmt 0 discriminator 1
 2725              		.syntax unified
 2726              	@ 2850 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2727 0002 72B6     		 cpsid i 
 2728              	@ 0 "" 2
 2729              		.thumb
 2730              		.syntax unified
 2731              	.L267:
 2732 0004 FEE7     		b	.L267
 2733              	.L266:
 2734 0006 0346     		mov	r3, r0
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2735              		.loc 1 2854 0 is_stmt 1
 2736 0008 0C48     		ldr	r0, .L271
 2737              	.LVL232:
 2738 000a D0F81C02 		ldr	r0, [r0, #540]
 2739 000e 08B9     		cbnz	r0, .L268
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2740              		.loc 1 2854 0 is_stmt 0 discriminator 1
 2741              		.syntax unified
 2742              	@ 2854 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2743 0010 72B6     		 cpsid i 
 2744              	@ 0 "" 2
 2745              		.thumb
 2746              		.syntax unified
 2747              	.L269:
 2748 0012 FEE7     		b	.L269
 2749              	.L268:
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2750              		.loc 1 2849 0 is_stmt 1
 2751 0014 10B5     		push	{r4, lr}
 2752              		.cfi_def_cfa_offset 8
 2753              		.cfi_offset 4, -8
 2754              		.cfi_offset 14, -4
 2755 0016 1846     		mov	r0, r3
 2756 0018 1446     		mov	r4, r2
 2757 001a 0B46     		mov	r3, r1
 2758              	.LVL233:
2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2759              		.loc 1 2859 0
 2760 001c 074A     		ldr	r2, .L271
 2761              	.LVL234:
 2762 001e D2F80412 		ldr	r1, [r2, #516]
 2763              	.LVL235:
 2764 0022 43F00043 		orr	r3, r3, #-2147483648
 2765              	.LVL236:
 2766 0026 8B61     		str	r3, [r1, #24]
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2767              		.loc 1 2866 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 144


 2768 0028 D2F80412 		ldr	r1, [r2, #516]
 2769 002c 1831     		adds	r1, r1, #24
 2770 002e FFF7FEFF 		bl	vListInsertEnd
 2771              	.LVL237:
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2772              		.loc 1 2868 0
 2773 0032 0121     		movs	r1, #1
 2774 0034 2046     		mov	r0, r4
 2775 0036 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2776              	.LVL238:
 2777 003a 10BD     		pop	{r4, pc}
 2778              	.LVL239:
 2779              	.L272:
 2780              		.align	2
 2781              	.L271:
 2782 003c 00000000 		.word	.LANCHOR0
 2783              		.cfi_endproc
 2784              	.LFE541:
 2785              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2786              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 2787              		.align	2
 2788              		.global	vTaskPlaceOnEventListRestricted
 2789              		.thumb
 2790              		.thumb_func
 2791              		.type	vTaskPlaceOnEventListRestricted, %function
 2792              	vTaskPlaceOnEventListRestricted:
 2793              	.LFB542:
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
 2794              		.loc 1 2875 0
 2795              		.cfi_startproc
 2796              		@ args = 0, pretend = 0, frame = 0
 2797              		@ frame_needed = 0, uses_anonymous_args = 0
 2798              	.LVL240:
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2799              		.loc 1 2876 0
 2800 0000 08B9     		cbnz	r0, .L274
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2801              		.loc 1 2876 0 is_stmt 0 discriminator 1
 2802              		.syntax unified
 2803              	@ 2876 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2804 0002 72B6     		 cpsid i 
 2805              	@ 0 "" 2
 2806              		.thumb
 2807              		.syntax unified
 2808              	.L275:
 2809 0004 FEE7     		b	.L275
 2810              	.L274:
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
 2811              		.loc 1 2875 0 is_stmt 1
 2812 0006 38B5     		push	{r3, r4, r5, lr}
 2813              		.cfi_def_cfa_offset 16
 2814              		.cfi_offset 3, -16
 2815              		.cfi_offset 4, -12
 2816              		.cfi_offset 5, -8
 2817              		.cfi_offset 14, -4
 2818 0008 0C46     		mov	r4, r1
 2819 000a 1546     		mov	r5, r2
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 145


2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2820              		.loc 1 2888 0
 2821 000c 064A     		ldr	r2, .L279
 2822              	.LVL241:
 2823 000e D2F80412 		ldr	r1, [r2, #516]
 2824              	.LVL242:
 2825 0012 1831     		adds	r1, r1, #24
 2826 0014 FFF7FEFF 		bl	vListInsertEnd
 2827              	.LVL243:
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2828              		.loc 1 2893 0
 2829 0018 0DB1     		cbz	r5, .L276
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2830              		.loc 1 2895 0
 2831 001a 4FF0FF34 		mov	r4, #-1
 2832              	.LVL244:
 2833              	.L276:
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2834              		.loc 1 2899 0
 2835 001e 2946     		mov	r1, r5
 2836 0020 2046     		mov	r0, r4
 2837 0022 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2838              	.LVL245:
 2839 0026 38BD     		pop	{r3, r4, r5, pc}
 2840              	.LVL246:
 2841              	.L280:
 2842              		.align	2
 2843              	.L279:
 2844 0028 00000000 		.word	.LANCHOR0
 2845              		.cfi_endproc
 2846              	.LFE542:
 2847              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 2848              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 2849              		.align	2
 2850              		.global	xTaskRemoveFromEventList
 2851              		.thumb
 2852              		.thumb_func
 2853              		.type	xTaskRemoveFromEventList, %function
 2854              	xTaskRemoveFromEventList:
 2855              	.LFB543:
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2856              		.loc 1 2906 0
 2857              		.cfi_startproc
 2858              		@ args = 0, pretend = 0, frame = 0
 2859              		@ frame_needed = 0, uses_anonymous_args = 0
 2860              	.LVL247:
 2861 0000 38B5     		push	{r3, r4, r5, lr}
 2862              		.cfi_def_cfa_offset 16
 2863              		.cfi_offset 3, -16
 2864              		.cfi_offset 4, -12
 2865              		.cfi_offset 5, -8
 2866              		.cfi_offset 14, -4
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2867              		.loc 1 2923 0
 2868 0002 C368     		ldr	r3, [r0, #12]
 2869 0004 DC68     		ldr	r4, [r3, #12]
 2870              	.LVL248:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 146


2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2871              		.loc 1 2924 0
 2872 0006 0CB9     		cbnz	r4, .L282
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2873              		.loc 1 2924 0 is_stmt 0 discriminator 1
 2874              		.syntax unified
 2875              	@ 2924 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2876 0008 72B6     		 cpsid i 
 2877              	@ 0 "" 2
 2878              		.thumb
 2879              		.syntax unified
 2880              	.L283:
 2881 000a FEE7     		b	.L283
 2882              	.L282:
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2883              		.loc 1 2925 0 is_stmt 1
 2884 000c 04F11805 		add	r5, r4, #24
 2885 0010 2846     		mov	r0, r5
 2886              	.LVL249:
 2887 0012 FFF7FEFF 		bl	uxListRemove
 2888              	.LVL250:
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2889              		.loc 1 2927 0
 2890 0016 164B     		ldr	r3, .L290
 2891 0018 D3F81C32 		ldr	r3, [r3, #540]
 2892 001c ABB9     		cbnz	r3, .L284
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 2893              		.loc 1 2929 0
 2894 001e 251D     		adds	r5, r4, #4
 2895 0020 2846     		mov	r0, r5
 2896 0022 FFF7FEFF 		bl	uxListRemove
 2897              	.LVL251:
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2898              		.loc 1 2930 0
 2899 0026 E36A     		ldr	r3, [r4, #44]
 2900 0028 114A     		ldr	r2, .L290
 2901 002a D2F81022 		ldr	r2, [r2, #528]
 2902 002e 9342     		cmp	r3, r2
 2903 0030 02D9     		bls	.L285
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2904              		.loc 1 2930 0 is_stmt 0 discriminator 1
 2905 0032 0F4A     		ldr	r2, .L290
 2906 0034 C2F81032 		str	r3, [r2, #528]
 2907              	.L285:
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2908              		.loc 1 2930 0 discriminator 3
 2909 0038 03EB8303 		add	r3, r3, r3, lsl #2
 2910 003c 9A00     		lsls	r2, r3, #2
 2911 003e 2946     		mov	r1, r5
 2912 0040 0C48     		ldr	r0, .L290+4
 2913 0042 1044     		add	r0, r0, r2
 2914 0044 FFF7FEFF 		bl	vListInsertEnd
 2915              	.LVL252:
 2916 0048 03E0     		b	.L286
 2917              	.L284:
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2918              		.loc 1 2936 0 is_stmt 1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 147


 2919 004a 2946     		mov	r1, r5
 2920 004c 0A48     		ldr	r0, .L290+8
 2921 004e FFF7FEFF 		bl	vListInsertEnd
 2922              	.LVL253:
 2923              	.L286:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2924              		.loc 1 2939 0
 2925 0052 E26A     		ldr	r2, [r4, #44]
 2926 0054 064B     		ldr	r3, .L290
 2927 0056 D3F80432 		ldr	r3, [r3, #516]
 2928 005a DB6A     		ldr	r3, [r3, #44]
 2929 005c 9A42     		cmp	r2, r3
 2930 005e 04D9     		bls	.L288
 2931              	.LVL254:
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2932              		.loc 1 2948 0
 2933 0060 0120     		movs	r0, #1
 2934 0062 034B     		ldr	r3, .L290
 2935 0064 C3F82C02 		str	r0, [r3, #556]
 2936 0068 38BD     		pop	{r3, r4, r5, pc}
 2937              	.LVL255:
 2938              	.L288:
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2939              		.loc 1 2952 0
 2940 006a 0020     		movs	r0, #0
 2941              	.LVL256:
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2942              		.loc 1 2970 0
 2943 006c 38BD     		pop	{r3, r4, r5, pc}
 2944              	.LVL257:
 2945              	.L291:
 2946 006e 00BF     		.align	2
 2947              	.L290:
 2948 0070 00000000 		.word	.LANCHOR0
 2949 0074 30000000 		.word	.LANCHOR0+48
 2950 0078 14000000 		.word	.LANCHOR0+20
 2951              		.cfi_endproc
 2952              	.LFE543:
 2953              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 2954              		.section	.text.xTaskRemoveFromUnorderedEventList,"ax",%progbits
 2955              		.align	2
 2956              		.global	xTaskRemoveFromUnorderedEventList
 2957              		.thumb
 2958              		.thumb_func
 2959              		.type	xTaskRemoveFromUnorderedEventList, %function
 2960              	xTaskRemoveFromUnorderedEventList:
 2961              	.LFB544:
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2962              		.loc 1 2974 0
 2963              		.cfi_startproc
 2964              		@ args = 0, pretend = 0, frame = 0
 2965              		@ frame_needed = 0, uses_anonymous_args = 0
 2966              	.LVL258:
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2967              		.loc 1 2980 0
 2968 0000 194B     		ldr	r3, .L301
 2969 0002 D3F81C32 		ldr	r3, [r3, #540]
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 148


 2970 0006 0BB9     		cbnz	r3, .L293
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2971              		.loc 1 2980 0 is_stmt 0 discriminator 1
 2972              		.syntax unified
 2973              	@ 2980 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2974 0008 72B6     		 cpsid i 
 2975              	@ 0 "" 2
 2976              		.thumb
 2977              		.syntax unified
 2978              	.L294:
 2979 000a FEE7     		b	.L294
 2980              	.L293:
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2981              		.loc 1 2974 0 is_stmt 1
 2982 000c 70B5     		push	{r4, r5, r6, lr}
 2983              		.cfi_def_cfa_offset 16
 2984              		.cfi_offset 4, -16
 2985              		.cfi_offset 5, -12
 2986              		.cfi_offset 6, -8
 2987              		.cfi_offset 14, -4
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2988              		.loc 1 2983 0
 2989 000e 41F00043 		orr	r3, r1, #-2147483648
 2990 0012 0360     		str	r3, [r0]
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2991              		.loc 1 2987 0
 2992 0014 C468     		ldr	r4, [r0, #12]
 2993              	.LVL259:
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2994              		.loc 1 2988 0
 2995 0016 0CB9     		cbnz	r4, .L295
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2996              		.loc 1 2988 0 is_stmt 0 discriminator 1
 2997              		.syntax unified
 2998              	@ 2988 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2999 0018 72B6     		 cpsid i 
 3000              	@ 0 "" 2
 3001              		.thumb
 3002              		.syntax unified
 3003              	.L296:
 3004 001a FEE7     		b	.L296
 3005              	.L295:
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3006              		.loc 1 2989 0 is_stmt 1
 3007 001c FFF7FEFF 		bl	uxListRemove
 3008              	.LVL260:
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3009              		.loc 1 2994 0
 3010 0020 261D     		adds	r6, r4, #4
 3011 0022 3046     		mov	r0, r6
 3012 0024 FFF7FEFF 		bl	uxListRemove
 3013              	.LVL261:
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3014              		.loc 1 2995 0
 3015 0028 E36A     		ldr	r3, [r4, #44]
 3016 002a 0F4A     		ldr	r2, .L301
 3017 002c D2F81022 		ldr	r2, [r2, #528]
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 149


 3018 0030 9342     		cmp	r3, r2
 3019 0032 02D9     		bls	.L297
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3020              		.loc 1 2995 0 is_stmt 0 discriminator 1
 3021 0034 0C4A     		ldr	r2, .L301
 3022 0036 C2F81032 		str	r3, [r2, #528]
 3023              	.L297:
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3024              		.loc 1 2995 0 discriminator 3
 3025 003a 0B4D     		ldr	r5, .L301
 3026 003c 05F13000 		add	r0, r5, #48
 3027 0040 03EB8303 		add	r3, r3, r3, lsl #2
 3028 0044 9A00     		lsls	r2, r3, #2
 3029 0046 3146     		mov	r1, r6
 3030 0048 1044     		add	r0, r0, r2
 3031 004a FFF7FEFF 		bl	vListInsertEnd
 3032              	.LVL262:
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 3033              		.loc 1 2997 0 is_stmt 1 discriminator 3
 3034 004e E26A     		ldr	r2, [r4, #44]
 3035 0050 D5F80432 		ldr	r3, [r5, #516]
 3036 0054 DB6A     		ldr	r3, [r3, #44]
 3037 0056 9A42     		cmp	r2, r3
 3038 0058 03D9     		bls	.L299
 3039              	.LVL263:
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 3040              		.loc 1 3007 0
 3041 005a 0120     		movs	r0, #1
 3042 005c C5F82C02 		str	r0, [r5, #556]
 3043 0060 70BD     		pop	{r4, r5, r6, pc}
 3044              	.LVL264:
 3045              	.L299:
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 3046              		.loc 1 3011 0
 3047 0062 0020     		movs	r0, #0
 3048              	.LVL265:
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3049              		.loc 1 3015 0
 3050 0064 70BD     		pop	{r4, r5, r6, pc}
 3051              	.LVL266:
 3052              	.L302:
 3053 0066 00BF     		.align	2
 3054              	.L301:
 3055 0068 00000000 		.word	.LANCHOR0
 3056              		.cfi_endproc
 3057              	.LFE544:
 3058              		.size	xTaskRemoveFromUnorderedEventList, .-xTaskRemoveFromUnorderedEventList
 3059              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3060              		.align	2
 3061              		.global	vTaskSetTimeOutState
 3062              		.thumb
 3063              		.thumb_func
 3064              		.type	vTaskSetTimeOutState, %function
 3065              	vTaskSetTimeOutState:
 3066              	.LFB545:
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3067              		.loc 1 3019 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 150


 3068              		.cfi_startproc
 3069              		@ args = 0, pretend = 0, frame = 0
 3070              		@ frame_needed = 0, uses_anonymous_args = 0
 3071              		@ link register save eliminated.
 3072              	.LVL267:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3073              		.loc 1 3020 0
 3074 0000 08B9     		cbnz	r0, .L304
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3075              		.loc 1 3020 0 is_stmt 0 discriminator 1
 3076              		.syntax unified
 3077              	@ 3020 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3078 0002 72B6     		 cpsid i 
 3079              	@ 0 "" 2
 3080              		.thumb
 3081              		.syntax unified
 3082              	.L305:
 3083 0004 FEE7     		b	.L305
 3084              	.L304:
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3085              		.loc 1 3021 0 is_stmt 1
 3086 0006 044A     		ldr	r2, .L306
 3087 0008 D2F82412 		ldr	r1, [r2, #548]
 3088 000c 0160     		str	r1, [r0]
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 3089              		.loc 1 3022 0
 3090 000e D2F81422 		ldr	r2, [r2, #532]
 3091 0012 4260     		str	r2, [r0, #4]
 3092 0014 7047     		bx	lr
 3093              	.L307:
 3094 0016 00BF     		.align	2
 3095              	.L306:
 3096 0018 00000000 		.word	.LANCHOR0
 3097              		.cfi_endproc
 3098              	.LFE545:
 3099              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3100              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3101              		.align	2
 3102              		.global	xTaskCheckForTimeOut
 3103              		.thumb
 3104              		.thumb_func
 3105              		.type	xTaskCheckForTimeOut, %function
 3106              	xTaskCheckForTimeOut:
 3107              	.LFB546:
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 3108              		.loc 1 3027 0
 3109              		.cfi_startproc
 3110              		@ args = 0, pretend = 0, frame = 0
 3111              		@ frame_needed = 0, uses_anonymous_args = 0
 3112              	.LVL268:
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3113              		.loc 1 3030 0
 3114 0000 08B9     		cbnz	r0, .L309
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3115              		.loc 1 3030 0 is_stmt 0 discriminator 1
 3116              		.syntax unified
 3117              	@ 3030 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 151


 3118 0002 72B6     		 cpsid i 
 3119              	@ 0 "" 2
 3120              		.thumb
 3121              		.syntax unified
 3122              	.L310:
 3123 0004 FEE7     		b	.L310
 3124              	.L309:
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 3125              		.loc 1 3027 0 is_stmt 1
 3126 0006 38B5     		push	{r3, r4, r5, lr}
 3127              		.cfi_def_cfa_offset 16
 3128              		.cfi_offset 3, -16
 3129              		.cfi_offset 4, -12
 3130              		.cfi_offset 5, -8
 3131              		.cfi_offset 14, -4
 3132 0008 0446     		mov	r4, r0
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3133              		.loc 1 3031 0
 3134 000a 09B9     		cbnz	r1, .L311
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3135              		.loc 1 3031 0 is_stmt 0 discriminator 1
 3136              		.syntax unified
 3137              	@ 3031 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3138 000c 72B6     		 cpsid i 
 3139              	@ 0 "" 2
 3140              		.thumb
 3141              		.syntax unified
 3142              	.L312:
 3143 000e FEE7     		b	.L312
 3144              	.L311:
 3145 0010 0D46     		mov	r5, r1
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 3146              		.loc 1 3033 0 is_stmt 1
 3147 0012 FFF7FEFF 		bl	vPortEnterCritical
 3148              	.LVL269:
 3149              	.LBB40:
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3150              		.loc 1 3036 0
 3151 0016 124B     		ldr	r3, .L319
 3152 0018 D3F81412 		ldr	r1, [r3, #532]
 3153              	.LVL270:
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3154              		.loc 1 3050 0
 3155 001c 2A68     		ldr	r2, [r5]
 3156 001e B2F1FF3F 		cmp	r2, #-1
 3157 0022 13D0     		beq	.L315
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3158              		.loc 1 3060 0
 3159 0024 2068     		ldr	r0, [r4]
 3160 0026 D3F82432 		ldr	r3, [r3, #548]
 3161 002a 9842     		cmp	r0, r3
 3162 002c 02D0     		beq	.L314
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3163              		.loc 1 3060 0 is_stmt 0 discriminator 1
 3164 002e 6368     		ldr	r3, [r4, #4]
 3165 0030 9942     		cmp	r1, r3
 3166 0032 0DD2     		bcs	.L316
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 152


 3167              	.L314:
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3168              		.loc 1 3069 0 is_stmt 1
 3169 0034 6368     		ldr	r3, [r4, #4]
 3170 0036 C81A     		subs	r0, r1, r3
 3171 0038 8242     		cmp	r2, r0
 3172 003a 0BD9     		bls	.L317
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
 3173              		.loc 1 3072 0
 3174 003c 5B1A     		subs	r3, r3, r1
 3175 003e 1344     		add	r3, r3, r2
 3176 0040 2B60     		str	r3, [r5]
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFALSE;
 3177              		.loc 1 3073 0
 3178 0042 2046     		mov	r0, r4
 3179 0044 FFF7FEFF 		bl	vTaskSetTimeOutState
 3180              	.LVL271:
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3181              		.loc 1 3074 0
 3182 0048 0024     		movs	r4, #0
 3183              	.LVL272:
 3184 004a 04E0     		b	.L313
 3185              	.LVL273:
 3186              	.L315:
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3187              		.loc 1 3055 0
 3188 004c 0024     		movs	r4, #0
 3189              	.LVL274:
 3190 004e 02E0     		b	.L313
 3191              	.LVL275:
 3192              	.L316:
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3193              		.loc 1 3067 0
 3194 0050 0124     		movs	r4, #1
 3195              	.LVL276:
 3196 0052 00E0     		b	.L313
 3197              	.LVL277:
 3198              	.L317:
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3199              		.loc 1 3078 0
 3200 0054 0124     		movs	r4, #1
 3201              	.LVL278:
 3202              	.L313:
 3203              	.LBE40:
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3204              		.loc 1 3081 0
 3205 0056 FFF7FEFF 		bl	vPortExitCritical
 3206              	.LVL279:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3207              		.loc 1 3084 0
 3208 005a 2046     		mov	r0, r4
 3209 005c 38BD     		pop	{r3, r4, r5, pc}
 3210              	.LVL280:
 3211              	.L320:
 3212 005e 00BF     		.align	2
 3213              	.L319:
 3214 0060 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 153


 3215              		.cfi_endproc
 3216              	.LFE546:
 3217              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3218              		.section	.text.vTaskMissedYield,"ax",%progbits
 3219              		.align	2
 3220              		.global	vTaskMissedYield
 3221              		.thumb
 3222              		.thumb_func
 3223              		.type	vTaskMissedYield, %function
 3224              	vTaskMissedYield:
 3225              	.LFB547:
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3226              		.loc 1 3088 0
 3227              		.cfi_startproc
 3228              		@ args = 0, pretend = 0, frame = 0
 3229              		@ frame_needed = 0, uses_anonymous_args = 0
 3230              		@ link register save eliminated.
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 3231              		.loc 1 3089 0
 3232 0000 0122     		movs	r2, #1
 3233 0002 024B     		ldr	r3, .L322
 3234 0004 C3F82C22 		str	r2, [r3, #556]
 3235 0008 7047     		bx	lr
 3236              	.L323:
 3237 000a 00BF     		.align	2
 3238              	.L322:
 3239 000c 00000000 		.word	.LANCHOR0
 3240              		.cfi_endproc
 3241              	.LFE547:
 3242              		.size	vTaskMissedYield, .-vTaskMissedYield
 3243              		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 3244              		.align	2
 3245              		.global	vTaskSetThreadLocalStoragePointer
 3246              		.thumb
 3247              		.thumb_func
 3248              		.type	vTaskSetThreadLocalStoragePointer, %function
 3249              	vTaskSetThreadLocalStoragePointer:
 3250              	.LFB549:
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 3251              		.loc 1 3292 0
 3252              		.cfi_startproc
 3253              		@ args = 0, pretend = 0, frame = 0
 3254              		@ frame_needed = 0, uses_anonymous_args = 0
 3255              		@ link register save eliminated.
 3256              	.LVL281:
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3257              		.loc 1 3295 0
 3258 0000 0429     		cmp	r1, #4
 3259 0002 07DC     		bgt	.L324
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3260              		.loc 1 3297 0
 3261 0004 10B9     		cbnz	r0, .L326
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3262              		.loc 1 3297 0 is_stmt 0 discriminator 1
 3263 0006 044B     		ldr	r3, .L327
 3264 0008 D3F80402 		ldr	r0, [r3, #516]
 3265              	.LVL282:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 154


 3266              	.L326:
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3267              		.loc 1 3298 0 is_stmt 1 discriminator 4
 3268 000c 1031     		adds	r1, r1, #16
 3269              	.LVL283:
 3270 000e 00EB8101 		add	r1, r0, r1, lsl #2
 3271              	.LVL284:
 3272 0012 4A60     		str	r2, [r1, #4]
 3273              	.LVL285:
 3274              	.L324:
 3275 0014 7047     		bx	lr
 3276              	.L328:
 3277 0016 00BF     		.align	2
 3278              	.L327:
 3279 0018 00000000 		.word	.LANCHOR0
 3280              		.cfi_endproc
 3281              	.LFE549:
 3282              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 3283              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 3284              		.align	2
 3285              		.global	pvTaskGetThreadLocalStoragePointer
 3286              		.thumb
 3287              		.thumb_func
 3288              		.type	pvTaskGetThreadLocalStoragePointer, %function
 3289              	pvTaskGetThreadLocalStoragePointer:
 3290              	.LFB550:
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvReturn = NULL;
 3291              		.loc 1 3308 0
 3292              		.cfi_startproc
 3293              		@ args = 0, pretend = 0, frame = 0
 3294              		@ frame_needed = 0, uses_anonymous_args = 0
 3295              		@ link register save eliminated.
 3296              	.LVL286:
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3297              		.loc 1 3312 0
 3298 0000 0429     		cmp	r1, #4
 3299 0002 08DC     		bgt	.L332
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3300              		.loc 1 3314 0
 3301 0004 10B9     		cbnz	r0, .L331
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3302              		.loc 1 3314 0 is_stmt 0 discriminator 1
 3303 0006 054B     		ldr	r3, .L333
 3304 0008 D3F80402 		ldr	r0, [r3, #516]
 3305              	.LVL287:
 3306              	.L331:
3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3307              		.loc 1 3315 0 is_stmt 1 discriminator 4
 3308 000c 1031     		adds	r1, r1, #16
 3309              	.LVL288:
 3310 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3311              	.LVL289:
 3312 0012 4068     		ldr	r0, [r0, #4]
 3313              	.LVL290:
 3314 0014 7047     		bx	lr
 3315              	.LVL291:
 3316              	.L332:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 155


3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3317              		.loc 1 3319 0
 3318 0016 0020     		movs	r0, #0
 3319              	.LVL292:
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3320              		.loc 1 3323 0
 3321 0018 7047     		bx	lr
 3322              	.L334:
 3323 001a 00BF     		.align	2
 3324              	.L333:
 3325 001c 00000000 		.word	.LANCHOR0
 3326              		.cfi_endproc
 3327              	.LFE550:
 3328              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3329              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3330              		.align	2
 3331              		.global	xTaskGetCurrentTaskHandle
 3332              		.thumb
 3333              		.thumb_func
 3334              		.type	xTaskGetCurrentTaskHandle, %function
 3335              	xTaskGetCurrentTaskHandle:
 3336              	.LFB555:
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
 3337              		.loc 1 3673 0
 3338              		.cfi_startproc
 3339              		@ args = 0, pretend = 0, frame = 0
 3340              		@ frame_needed = 0, uses_anonymous_args = 0
 3341              		@ link register save eliminated.
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3342              		.loc 1 3679 0
 3343 0000 014B     		ldr	r3, .L336
 3344 0002 D3F80402 		ldr	r0, [r3, #516]
 3345              	.LVL293:
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3346              		.loc 1 3682 0
 3347 0006 7047     		bx	lr
 3348              	.L337:
 3349              		.align	2
 3350              	.L336:
 3351 0008 00000000 		.word	.LANCHOR0
 3352              		.cfi_endproc
 3353              	.LFE555:
 3354              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3355              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3356              		.align	2
 3357              		.global	xTaskGetSchedulerState
 3358              		.thumb
 3359              		.thumb_func
 3360              		.type	xTaskGetSchedulerState, %function
 3361              	xTaskGetSchedulerState:
 3362              	.LFB556:
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 3363              		.loc 1 3690 0
 3364              		.cfi_startproc
 3365              		@ args = 0, pretend = 0, frame = 0
 3366              		@ frame_needed = 0, uses_anonymous_args = 0
 3367              		@ link register save eliminated.
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 156


3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3368              		.loc 1 3693 0
 3369 0000 064B     		ldr	r3, .L342
 3370 0002 D3F80832 		ldr	r3, [r3, #520]
 3371 0006 2BB1     		cbz	r3, .L340
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3372              		.loc 1 3699 0
 3373 0008 044B     		ldr	r3, .L342
 3374 000a D3F81C32 		ldr	r3, [r3, #540]
 3375 000e 1BB9     		cbnz	r3, .L341
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3376              		.loc 1 3701 0
 3377 0010 0220     		movs	r0, #2
 3378 0012 7047     		bx	lr
 3379              	.L340:
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3380              		.loc 1 3695 0
 3381 0014 0120     		movs	r0, #1
 3382 0016 7047     		bx	lr
 3383              	.L341:
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3384              		.loc 1 3705 0
 3385 0018 0020     		movs	r0, #0
 3386              	.LVL294:
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3387              		.loc 1 3710 0
 3388 001a 7047     		bx	lr
 3389              	.L343:
 3390              		.align	2
 3391              	.L342:
 3392 001c 00000000 		.word	.LANCHOR0
 3393              		.cfi_endproc
 3394              	.LFE556:
 3395              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 3396              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 3397              		.align	2
 3398              		.global	uxTaskResetEventItemValue
 3399              		.thumb
 3400              		.thumb_func
 3401              		.type	uxTaskResetEventItemValue, %function
 3402              	uxTaskResetEventItemValue:
 3403              	.LFB557:
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxReturn;
 3404              		.loc 1 4174 0
 3405              		.cfi_startproc
 3406              		@ args = 0, pretend = 0, frame = 0
 3407              		@ frame_needed = 0, uses_anonymous_args = 0
 3408              		@ link register save eliminated.
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3409              		.loc 1 4177 0
 3410 0000 064B     		ldr	r3, .L345
 3411 0002 D3F80422 		ldr	r2, [r3, #516]
 3412 0006 9069     		ldr	r0, [r2, #24]
 3413              	.LVL295:
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3414              		.loc 1 4181 0
 3415 0008 D3F80422 		ldr	r2, [r3, #516]
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 157


 3416 000c D3F80432 		ldr	r3, [r3, #516]
 3417 0010 DB6A     		ldr	r3, [r3, #44]
 3418 0012 C3F11403 		rsb	r3, r3, #20
 3419 0016 9361     		str	r3, [r2, #24]
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3420              		.loc 1 4184 0
 3421 0018 7047     		bx	lr
 3422              	.L346:
 3423 001a 00BF     		.align	2
 3424              	.L345:
 3425 001c 00000000 		.word	.LANCHOR0
 3426              		.cfi_endproc
 3427              	.LFE557:
 3428              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 3429              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 3430              		.align	2
 3431              		.global	ulTaskNotifyTake
 3432              		.thumb
 3433              		.thumb_func
 3434              		.type	ulTaskNotifyTake, %function
 3435              	ulTaskNotifyTake:
 3436              	.LFB558:
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulReturn;
 3437              		.loc 1 4207 0
 3438              		.cfi_startproc
 3439              		@ args = 0, pretend = 0, frame = 0
 3440              		@ frame_needed = 0, uses_anonymous_args = 0
 3441              	.LVL296:
 3442 0000 38B5     		push	{r3, r4, r5, lr}
 3443              		.cfi_def_cfa_offset 16
 3444              		.cfi_offset 3, -16
 3445              		.cfi_offset 4, -12
 3446              		.cfi_offset 5, -8
 3447              		.cfi_offset 14, -4
 3448 0002 0546     		mov	r5, r0
 3449 0004 0C46     		mov	r4, r1
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3450              		.loc 1 4210 0
 3451 0006 FFF7FEFF 		bl	vPortEnterCritical
 3452              	.LVL297:
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3453              		.loc 1 4213 0
 3454 000a 1B4B     		ldr	r3, .L352
 3455 000c D3F80432 		ldr	r3, [r3, #516]
 3456 0010 9B6D     		ldr	r3, [r3, #88]
 3457 0012 93B9     		cbnz	r3, .L348
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3458              		.loc 1 4216 0
 3459 0014 184B     		ldr	r3, .L352
 3460 0016 D3F80432 		ldr	r3, [r3, #516]
 3461 001a 0122     		movs	r2, #1
 3462 001c 83F85C20 		strb	r2, [r3, #92]
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3463              		.loc 1 4218 0
 3464 0020 5CB1     		cbz	r4, .L348
4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 3465              		.loc 1 4220 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 158


 3466 0022 1146     		mov	r1, r2
 3467 0024 2046     		mov	r0, r4
 3468 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3469              	.LVL298:
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3470              		.loc 1 4227 0
 3471 002a 4FF08052 		mov	r2, #268435456
 3472 002e 134B     		ldr	r3, .L352+4
 3473 0030 1A60     		str	r2, [r3]
 3474              		.syntax unified
 3475              	@ 4227 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3476 0032 BFF34F8F 		dsb
 3477              	@ 0 "" 2
 3478              	@ 4227 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3479 0036 BFF36F8F 		isb
 3480              	@ 0 "" 2
 3481              		.thumb
 3482              		.syntax unified
 3483              	.L348:
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3484              		.loc 1 4239 0
 3485 003a FFF7FEFF 		bl	vPortExitCritical
 3486              	.LVL299:
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3487              		.loc 1 4241 0
 3488 003e FFF7FEFF 		bl	vPortEnterCritical
 3489              	.LVL300:
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3490              		.loc 1 4244 0
 3491 0042 0D4B     		ldr	r3, .L352
 3492 0044 D3F80432 		ldr	r3, [r3, #516]
 3493 0048 9C6D     		ldr	r4, [r3, #88]
 3494              	.LVL301:
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3495              		.loc 1 4246 0
 3496 004a 5CB1     		cbz	r4, .L349
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3497              		.loc 1 4248 0
 3498 004c 2DB1     		cbz	r5, .L350
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3499              		.loc 1 4250 0
 3500 004e 0A4B     		ldr	r3, .L352
 3501 0050 D3F80432 		ldr	r3, [r3, #516]
 3502 0054 0022     		movs	r2, #0
 3503 0056 9A65     		str	r2, [r3, #88]
 3504 0058 04E0     		b	.L349
 3505              	.L350:
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3506              		.loc 1 4254 0
 3507 005a 074B     		ldr	r3, .L352
 3508 005c D3F80432 		ldr	r3, [r3, #516]
 3509 0060 621E     		subs	r2, r4, #1
 3510 0062 9A65     		str	r2, [r3, #88]
 3511              	.L349:
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3512              		.loc 1 4262 0
 3513 0064 044B     		ldr	r3, .L352
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 159


 3514 0066 D3F80432 		ldr	r3, [r3, #516]
 3515 006a 0022     		movs	r2, #0
 3516 006c 83F85C20 		strb	r2, [r3, #92]
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3517              		.loc 1 4264 0
 3518 0070 FFF7FEFF 		bl	vPortExitCritical
 3519              	.LVL302:
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3520              		.loc 1 4267 0
 3521 0074 2046     		mov	r0, r4
 3522 0076 38BD     		pop	{r3, r4, r5, pc}
 3523              	.LVL303:
 3524              	.L353:
 3525              		.align	2
 3526              	.L352:
 3527 0078 00000000 		.word	.LANCHOR0
 3528 007c 04ED00E0 		.word	-536810236
 3529              		.cfi_endproc
 3530              	.LFE558:
 3531              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 3532              		.section	.text.xTaskNotifyWait,"ax",%progbits
 3533              		.align	2
 3534              		.global	xTaskNotifyWait
 3535              		.thumb
 3536              		.thumb_func
 3537              		.type	xTaskNotifyWait, %function
 3538              	xTaskNotifyWait:
 3539              	.LFB559:
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 3540              		.loc 1 4275 0
 3541              		.cfi_startproc
 3542              		@ args = 0, pretend = 0, frame = 0
 3543              		@ frame_needed = 0, uses_anonymous_args = 0
 3544              	.LVL304:
 3545 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3546              		.cfi_def_cfa_offset 24
 3547              		.cfi_offset 3, -24
 3548              		.cfi_offset 4, -20
 3549              		.cfi_offset 5, -16
 3550              		.cfi_offset 6, -12
 3551              		.cfi_offset 7, -8
 3552              		.cfi_offset 14, -4
 3553 0002 0746     		mov	r7, r0
 3554 0004 0C46     		mov	r4, r1
 3555 0006 1546     		mov	r5, r2
 3556 0008 1E46     		mov	r6, r3
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3557              		.loc 1 4278 0
 3558 000a FFF7FEFF 		bl	vPortEnterCritical
 3559              	.LVL305:
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3560              		.loc 1 4281 0
 3561 000e 234B     		ldr	r3, .L360
 3562 0010 D3F80432 		ldr	r3, [r3, #516]
 3563 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3564 0018 DBB2     		uxtb	r3, r3
 3565 001a 022B     		cmp	r3, #2
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 160


 3566 001c 18D0     		beq	.L355
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3567              		.loc 1 4286 0
 3568 001e 1F4B     		ldr	r3, .L360
 3569 0020 D3F80422 		ldr	r2, [r3, #516]
 3570 0024 906D     		ldr	r0, [r2, #88]
 3571 0026 20EA0700 		bic	r0, r0, r7
 3572 002a 9065     		str	r0, [r2, #88]
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3573              		.loc 1 4289 0
 3574 002c D3F80432 		ldr	r3, [r3, #516]
 3575 0030 0122     		movs	r2, #1
 3576 0032 83F85C20 		strb	r2, [r3, #92]
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3577              		.loc 1 4291 0
 3578 0036 5EB1     		cbz	r6, .L355
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 3579              		.loc 1 4293 0
 3580 0038 1146     		mov	r1, r2
 3581 003a 3046     		mov	r0, r6
 3582 003c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3583              	.LVL306:
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3584              		.loc 1 4300 0
 3585 0040 4FF08052 		mov	r2, #268435456
 3586 0044 164B     		ldr	r3, .L360+4
 3587 0046 1A60     		str	r2, [r3]
 3588              		.syntax unified
 3589              	@ 4300 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3590 0048 BFF34F8F 		dsb
 3591              	@ 0 "" 2
 3592              	@ 4300 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3593 004c BFF36F8F 		isb
 3594              	@ 0 "" 2
 3595              		.thumb
 3596              		.syntax unified
 3597              	.L355:
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3598              		.loc 1 4312 0
 3599 0050 FFF7FEFF 		bl	vPortExitCritical
 3600              	.LVL307:
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3601              		.loc 1 4314 0
 3602 0054 FFF7FEFF 		bl	vPortEnterCritical
 3603              	.LVL308:
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3604              		.loc 1 4318 0
 3605 0058 25B1     		cbz	r5, .L356
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3606              		.loc 1 4322 0
 3607 005a 104B     		ldr	r3, .L360
 3608 005c D3F80432 		ldr	r3, [r3, #516]
 3609 0060 9B6D     		ldr	r3, [r3, #88]
 3610 0062 2B60     		str	r3, [r5]
 3611              	.L356:
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3612              		.loc 1 4329 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 161


 3613 0064 0D4B     		ldr	r3, .L360
 3614 0066 D3F80432 		ldr	r3, [r3, #516]
 3615 006a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3616 006e DBB2     		uxtb	r3, r3
 3617 0070 012B     		cmp	r3, #1
 3618 0072 08D0     		beq	.L358
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
 3619              		.loc 1 4338 0
 3620 0074 094B     		ldr	r3, .L360
 3621 0076 D3F80432 		ldr	r3, [r3, #516]
 3622 007a 996D     		ldr	r1, [r3, #88]
 3623 007c 21EA0401 		bic	r1, r1, r4
 3624 0080 9965     		str	r1, [r3, #88]
 3625              	.LVL309:
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3626              		.loc 1 4339 0
 3627 0082 0124     		movs	r4, #1
 3628              	.LVL310:
 3629 0084 00E0     		b	.L357
 3630              	.LVL311:
 3631              	.L358:
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3632              		.loc 1 4332 0
 3633 0086 0024     		movs	r4, #0
 3634              	.LVL312:
 3635              	.L357:
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3636              		.loc 1 4342 0
 3637 0088 044B     		ldr	r3, .L360
 3638 008a D3F80432 		ldr	r3, [r3, #516]
 3639 008e 0022     		movs	r2, #0
 3640 0090 83F85C20 		strb	r2, [r3, #92]
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3641              		.loc 1 4344 0
 3642 0094 FFF7FEFF 		bl	vPortExitCritical
 3643              	.LVL313:
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3644              		.loc 1 4347 0
 3645 0098 2046     		mov	r0, r4
 3646 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3647              	.LVL314:
 3648              	.L361:
 3649              		.align	2
 3650              	.L360:
 3651 009c 00000000 		.word	.LANCHOR0
 3652 00a0 04ED00E0 		.word	-536810236
 3653              		.cfi_endproc
 3654              	.LFE559:
 3655              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 3656              		.section	.text.xTaskGenericNotify,"ax",%progbits
 3657              		.align	2
 3658              		.global	xTaskGenericNotify
 3659              		.thumb
 3660              		.thumb_func
 3661              		.type	xTaskGenericNotify, %function
 3662              	xTaskGenericNotify:
 3663              	.LFB560:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 162


4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3664              		.loc 1 4355 0
 3665              		.cfi_startproc
 3666              		@ args = 0, pretend = 0, frame = 0
 3667              		@ frame_needed = 0, uses_anonymous_args = 0
 3668              	.LVL315:
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3669              		.loc 1 4360 0
 3670 0000 08B9     		cbnz	r0, .L363
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3671              		.loc 1 4360 0 is_stmt 0 discriminator 1
 3672              		.syntax unified
 3673              	@ 4360 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3674 0002 72B6     		 cpsid i 
 3675              	@ 0 "" 2
 3676              		.thumb
 3677              		.syntax unified
 3678              	.L364:
 3679 0004 FEE7     		b	.L364
 3680              	.L363:
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3681              		.loc 1 4355 0 is_stmt 1
 3682 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3683              		.cfi_def_cfa_offset 24
 3684              		.cfi_offset 3, -24
 3685              		.cfi_offset 4, -20
 3686              		.cfi_offset 5, -16
 3687              		.cfi_offset 6, -12
 3688              		.cfi_offset 7, -8
 3689              		.cfi_offset 14, -4
 3690 0008 0446     		mov	r4, r0
 3691 000a 1F46     		mov	r7, r3
 3692 000c 1546     		mov	r5, r2
 3693 000e 0E46     		mov	r6, r1
 3694              	.LVL316:
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3695              		.loc 1 4363 0
 3696 0010 FFF7FEFF 		bl	vPortEnterCritical
 3697              	.LVL317:
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3698              		.loc 1 4365 0
 3699 0014 0FB1     		cbz	r7, .L365
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3700              		.loc 1 4367 0
 3701 0016 A36D     		ldr	r3, [r4, #88]
 3702 0018 3B60     		str	r3, [r7]
 3703              	.L365:
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3704              		.loc 1 4370 0
 3705 001a 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3706 001e DBB2     		uxtb	r3, r3
 3707              	.LVL318:
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3708              		.loc 1 4372 0
 3709 0020 0222     		movs	r2, #2
 3710 0022 84F85C20 		strb	r2, [r4, #92]
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 163


 3711              		.loc 1 4374 0
 3712 0026 6A1E     		subs	r2, r5, #1
 3713 0028 032A     		cmp	r2, #3
 3714 002a 15D8     		bhi	.L376
 3715 002c DFE802F0 		tbb	[pc, r2]
 3716              	.L368:
 3717 0030 02       		.byte	(.L367-.L368)/2
 3718 0031 07       		.byte	(.L369-.L368)/2
 3719 0032 0C       		.byte	(.L370-.L368)/2
 3720 0033 0F       		.byte	(.L371-.L368)/2
 3721              		.p2align 1
 3722              	.L367:
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3723              		.loc 1 4377 0
 3724 0034 A26D     		ldr	r2, [r4, #88]
 3725 0036 1643     		orrs	r6, r6, r2
 3726              	.LVL319:
 3727 0038 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3728              		.loc 1 4357 0
 3729 003a 0125     		movs	r5, #1
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3730              		.loc 1 4378 0
 3731 003c 0FE0     		b	.L366
 3732              	.LVL320:
 3733              	.L369:
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3734              		.loc 1 4381 0
 3735 003e A26D     		ldr	r2, [r4, #88]
 3736 0040 0132     		adds	r2, r2, #1
 3737 0042 A265     		str	r2, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3738              		.loc 1 4357 0
 3739 0044 0125     		movs	r5, #1
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3740              		.loc 1 4382 0
 3741 0046 0AE0     		b	.L366
 3742              	.L370:
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3743              		.loc 1 4385 0
 3744 0048 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3745              		.loc 1 4357 0
 3746 004a 0125     		movs	r5, #1
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3747              		.loc 1 4386 0
 3748 004c 07E0     		b	.L366
 3749              	.L371:
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 3750              		.loc 1 4389 0
 3751 004e 022B     		cmp	r3, #2
 3752 0050 04D0     		beq	.L377
4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3753              		.loc 1 4391 0
 3754 0052 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3755              		.loc 1 4357 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 164


 3756 0054 0125     		movs	r5, #1
 3757 0056 02E0     		b	.L366
 3758              	.L376:
 3759 0058 0125     		movs	r5, #1
 3760 005a 00E0     		b	.L366
 3761              	.L377:
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3762              		.loc 1 4396 0
 3763 005c 0025     		movs	r5, #0
 3764              	.LVL321:
 3765              	.L366:
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3766              		.loc 1 4410 0
 3767 005e 012B     		cmp	r3, #1
 3768 0060 27D1     		bne	.L372
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 3769              		.loc 1 4412 0
 3770 0062 261D     		adds	r6, r4, #4
 3771 0064 3046     		mov	r0, r6
 3772 0066 FFF7FEFF 		bl	uxListRemove
 3773              	.LVL322:
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3774              		.loc 1 4413 0
 3775 006a E36A     		ldr	r3, [r4, #44]
 3776 006c 134A     		ldr	r2, .L379
 3777 006e D2F81022 		ldr	r2, [r2, #528]
 3778 0072 9342     		cmp	r3, r2
 3779 0074 02D9     		bls	.L373
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3780              		.loc 1 4413 0 is_stmt 0 discriminator 1
 3781 0076 114A     		ldr	r2, .L379
 3782 0078 C2F81032 		str	r3, [r2, #528]
 3783              	.L373:
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3784              		.loc 1 4413 0 discriminator 3
 3785 007c 03EB8303 		add	r3, r3, r3, lsl #2
 3786 0080 9A00     		lsls	r2, r3, #2
 3787 0082 3146     		mov	r1, r6
 3788 0084 0E48     		ldr	r0, .L379+4
 3789 0086 1044     		add	r0, r0, r2
 3790 0088 FFF7FEFF 		bl	vListInsertEnd
 3791              	.LVL323:
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3792              		.loc 1 4416 0 is_stmt 1 discriminator 3
 3793 008c A36A     		ldr	r3, [r4, #40]
 3794 008e 0BB1     		cbz	r3, .L374
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3795              		.loc 1 4416 0 is_stmt 0 discriminator 1
 3796              		.syntax unified
 3797              	@ 4416 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3798 0090 72B6     		 cpsid i 
 3799              	@ 0 "" 2
 3800              		.thumb
 3801              		.syntax unified
 3802              	.L375:
 3803 0092 FEE7     		b	.L375
 3804              	.L374:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 165


4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3805              		.loc 1 4434 0 is_stmt 1
 3806 0094 E26A     		ldr	r2, [r4, #44]
 3807 0096 094B     		ldr	r3, .L379
 3808 0098 D3F80432 		ldr	r3, [r3, #516]
 3809 009c DB6A     		ldr	r3, [r3, #44]
 3810 009e 9A42     		cmp	r2, r3
 3811 00a0 07D9     		bls	.L372
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3812              		.loc 1 4438 0
 3813 00a2 4FF08052 		mov	r2, #268435456
 3814 00a6 074B     		ldr	r3, .L379+8
 3815 00a8 1A60     		str	r2, [r3]
 3816              		.syntax unified
 3817              	@ 4438 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3818 00aa BFF34F8F 		dsb
 3819              	@ 0 "" 2
 3820              	@ 4438 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3821 00ae BFF36F8F 		isb
 3822              	@ 0 "" 2
 3823              		.thumb
 3824              		.syntax unified
 3825              	.L372:
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3826              		.loc 1 4450 0
 3827 00b2 FFF7FEFF 		bl	vPortExitCritical
 3828              	.LVL324:
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3829              		.loc 1 4453 0
 3830 00b6 2846     		mov	r0, r5
 3831 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3832              	.LVL325:
 3833              	.L380:
 3834 00ba 00BF     		.align	2
 3835              	.L379:
 3836 00bc 00000000 		.word	.LANCHOR0
 3837 00c0 30000000 		.word	.LANCHOR0+48
 3838 00c4 04ED00E0 		.word	-536810236
 3839              		.cfi_endproc
 3840              	.LFE560:
 3841              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 3842              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 3843              		.align	2
 3844              		.global	xTaskGenericNotifyFromISR
 3845              		.thumb
 3846              		.thumb_func
 3847              		.type	xTaskGenericNotifyFromISR, %function
 3848              	xTaskGenericNotifyFromISR:
 3849              	.LFB561:
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3850              		.loc 1 4461 0
 3851              		.cfi_startproc
 3852              		@ args = 4, pretend = 0, frame = 0
 3853              		@ frame_needed = 0, uses_anonymous_args = 0
 3854              	.LVL326:
 3855 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3856              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 166


 3857              		.cfi_offset 3, -32
 3858              		.cfi_offset 4, -28
 3859              		.cfi_offset 5, -24
 3860              		.cfi_offset 6, -20
 3861              		.cfi_offset 7, -16
 3862              		.cfi_offset 8, -12
 3863              		.cfi_offset 9, -8
 3864              		.cfi_offset 14, -4
 3865 0004 089E     		ldr	r6, [sp, #32]
 3866              	.LVL327:
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3867              		.loc 1 4467 0
 3868 0006 08B9     		cbnz	r0, .L382
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3869              		.loc 1 4467 0 is_stmt 0 discriminator 1
 3870              		.syntax unified
 3871              	@ 4467 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3872 0008 72B6     		 cpsid i 
 3873              	@ 0 "" 2
 3874              		.thumb
 3875              		.syntax unified
 3876              	.L383:
 3877 000a FEE7     		b	.L383
 3878              	.L382:
 3879 000c 0446     		mov	r4, r0
 3880 000e 9946     		mov	r9, r3
 3881 0010 1546     		mov	r5, r2
 3882 0012 8846     		mov	r8, r1
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3883              		.loc 1 4485 0 is_stmt 1
 3884 0014 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3885              	.LVL328:
 3886              	.LBB41:
 3887              	.LBB42:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 3888              		.loc 2 215 0
 3889              		.syntax unified
 3890              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 3891 0018 EFF31187 		    mrs r7, basepri                                            
 3892 001c 4FF02F03 	    mov r3, #47                                                 
 3893 0020 83F31188 	    msr basepri, r3                                            
 3894 0024 BFF36F8F 	    isb                                                        
 3895 0028 BFF34F8F 	    dsb                                                        
 3896              	
 3897              	@ 0 "" 2
 3898              		.thumb
 3899              		.syntax unified
 3900              	.LBE42:
 3901              	.LBE41:
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3902              		.loc 1 4491 0
 3903 002c B9F1000F 		cmp	r9, #0
 3904 0030 02D0     		beq	.L384
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3905              		.loc 1 4493 0
 3906 0032 A36D     		ldr	r3, [r4, #88]
 3907 0034 C9F80030 		str	r3, [r9]
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 167


 3908              	.L384:
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 3909              		.loc 1 4496 0
 3910 0038 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3911 003c DBB2     		uxtb	r3, r3
 3912              	.LVL329:
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3913              		.loc 1 4497 0
 3914 003e 0222     		movs	r2, #2
 3915 0040 84F85C20 		strb	r2, [r4, #92]
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3916              		.loc 1 4499 0
 3917 0044 6A1E     		subs	r2, r5, #1
 3918 0046 032A     		cmp	r2, #3
 3919 0048 18D8     		bhi	.L398
 3920 004a DFE802F0 		tbb	[pc, r2]
 3921              	.L387:
 3922 004e 02       		.byte	(.L386-.L387)/2
 3923 004f 08       		.byte	(.L388-.L387)/2
 3924 0050 0D       		.byte	(.L389-.L387)/2
 3925 0051 11       		.byte	(.L390-.L387)/2
 3926              		.p2align 1
 3927              	.L386:
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3928              		.loc 1 4502 0
 3929 0052 A26D     		ldr	r2, [r4, #88]
 3930 0054 42EA0802 		orr	r2, r2, r8
 3931 0058 A265     		str	r2, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3932              		.loc 1 4464 0
 3933 005a 0125     		movs	r5, #1
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3934              		.loc 1 4503 0
 3935 005c 11E0     		b	.L385
 3936              	.L388:
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3937              		.loc 1 4506 0
 3938 005e A26D     		ldr	r2, [r4, #88]
 3939 0060 0132     		adds	r2, r2, #1
 3940 0062 A265     		str	r2, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3941              		.loc 1 4464 0
 3942 0064 0125     		movs	r5, #1
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3943              		.loc 1 4507 0
 3944 0066 0CE0     		b	.L385
 3945              	.L389:
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3946              		.loc 1 4510 0
 3947 0068 C4F85880 		str	r8, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3948              		.loc 1 4464 0
 3949 006c 0125     		movs	r5, #1
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3950              		.loc 1 4511 0
 3951 006e 08E0     		b	.L385
 3952              	.L390:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 168


4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 3953              		.loc 1 4514 0
 3954 0070 022B     		cmp	r3, #2
 3955 0072 05D0     		beq	.L399
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3956              		.loc 1 4516 0
 3957 0074 C4F85880 		str	r8, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3958              		.loc 1 4464 0
 3959 0078 0125     		movs	r5, #1
 3960 007a 02E0     		b	.L385
 3961              	.L398:
 3962 007c 0125     		movs	r5, #1
 3963 007e 00E0     		b	.L385
 3964              	.L399:
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3965              		.loc 1 4521 0
 3966 0080 0025     		movs	r5, #0
 3967              	.L385:
 3968              	.LVL330:
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3969              		.loc 1 4535 0
 3970 0082 012B     		cmp	r3, #1
 3971 0084 32D1     		bne	.L391
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3972              		.loc 1 4538 0
 3973 0086 A36A     		ldr	r3, [r4, #40]
 3974              	.LVL331:
 3975 0088 0BB1     		cbz	r3, .L392
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3976              		.loc 1 4538 0 is_stmt 0 discriminator 1
 3977              		.syntax unified
 3978              	@ 4538 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3979 008a 72B6     		 cpsid i 
 3980              	@ 0 "" 2
 3981              		.thumb
 3982              		.syntax unified
 3983              	.L393:
 3984 008c FEE7     		b	.L393
 3985              	.L392:
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3986              		.loc 1 4540 0 is_stmt 1
 3987 008e 1A4B     		ldr	r3, .L401
 3988 0090 D3F81C32 		ldr	r3, [r3, #540]
 3989 0094 B3B9     		cbnz	r3, .L394
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3990              		.loc 1 4542 0
 3991 0096 04F10408 		add	r8, r4, #4
 3992              	.LVL332:
 3993 009a 4046     		mov	r0, r8
 3994 009c FFF7FEFF 		bl	uxListRemove
 3995              	.LVL333:
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3996              		.loc 1 4543 0
 3997 00a0 E36A     		ldr	r3, [r4, #44]
 3998 00a2 154A     		ldr	r2, .L401
 3999 00a4 D2F81022 		ldr	r2, [r2, #528]
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 169


 4000 00a8 9342     		cmp	r3, r2
 4001 00aa 02D9     		bls	.L395
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4002              		.loc 1 4543 0 is_stmt 0 discriminator 1
 4003 00ac 124A     		ldr	r2, .L401
 4004 00ae C2F81032 		str	r3, [r2, #528]
 4005              	.L395:
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4006              		.loc 1 4543 0 discriminator 3
 4007 00b2 03EB8303 		add	r3, r3, r3, lsl #2
 4008 00b6 9A00     		lsls	r2, r3, #2
 4009 00b8 4146     		mov	r1, r8
 4010 00ba 1048     		ldr	r0, .L401+4
 4011 00bc 1044     		add	r0, r0, r2
 4012 00be FFF7FEFF 		bl	vListInsertEnd
 4013              	.LVL334:
 4014 00c2 04E0     		b	.L396
 4015              	.LVL335:
 4016              	.L394:
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4017              		.loc 1 4549 0 is_stmt 1
 4018 00c4 04F11801 		add	r1, r4, #24
 4019 00c8 0D48     		ldr	r0, .L401+8
 4020 00ca FFF7FEFF 		bl	vListInsertEnd
 4021              	.LVL336:
 4022              	.L396:
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4023              		.loc 1 4552 0
 4024 00ce E26A     		ldr	r2, [r4, #44]
 4025 00d0 094B     		ldr	r3, .L401
 4026 00d2 D3F80432 		ldr	r3, [r3, #516]
 4027 00d6 DB6A     		ldr	r3, [r3, #44]
 4028 00d8 9A42     		cmp	r2, r3
 4029 00da 07D9     		bls	.L391
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 4030              		.loc 1 4556 0
 4031 00dc 16B1     		cbz	r6, .L397
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4032              		.loc 1 4558 0
 4033 00de 0123     		movs	r3, #1
 4034 00e0 3360     		str	r3, [r6]
 4035 00e2 03E0     		b	.L391
 4036              	.L397:
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4037              		.loc 1 4565 0
 4038 00e4 0122     		movs	r2, #1
 4039 00e6 044B     		ldr	r3, .L401
 4040 00e8 C3F82C22 		str	r2, [r3, #556]
 4041              	.L391:
 4042              	.LVL337:
 4043              	.LBB43:
 4044              	.LBB44:
 4045              		.loc 2 233 0
 4046              		.syntax unified
 4047              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4048 00ec 87F31188 		    msr basepri, r7  
 4049              	@ 0 "" 2
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 170


 4050              	.LVL338:
 4051              		.thumb
 4052              		.syntax unified
 4053              	.LBE44:
 4054              	.LBE43:
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4055              		.loc 1 4577 0
 4056 00f0 2846     		mov	r0, r5
 4057 00f2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4058              	.LVL339:
 4059              	.L402:
 4060 00f6 00BF     		.align	2
 4061              	.L401:
 4062 00f8 00000000 		.word	.LANCHOR0
 4063 00fc 30000000 		.word	.LANCHOR0+48
 4064 0100 14000000 		.word	.LANCHOR0+20
 4065              		.cfi_endproc
 4066              	.LFE561:
 4067              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 4068              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4069              		.align	2
 4070              		.global	vTaskNotifyGiveFromISR
 4071              		.thumb
 4072              		.thumb_func
 4073              		.type	vTaskNotifyGiveFromISR, %function
 4074              	vTaskNotifyGiveFromISR:
 4075              	.LFB562:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 4076              		.loc 1 4585 0
 4077              		.cfi_startproc
 4078              		@ args = 0, pretend = 0, frame = 0
 4079              		@ frame_needed = 0, uses_anonymous_args = 0
 4080              	.LVL340:
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4081              		.loc 1 4590 0
 4082 0000 08B9     		cbnz	r0, .L404
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4083              		.loc 1 4590 0 is_stmt 0 discriminator 1
 4084              		.syntax unified
 4085              	@ 4590 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 4086 0002 72B6     		 cpsid i 
 4087              	@ 0 "" 2
 4088              		.thumb
 4089              		.syntax unified
 4090              	.L405:
 4091 0004 FEE7     		b	.L405
 4092              	.L404:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 4093              		.loc 1 4585 0 is_stmt 1
 4094 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4095              		.cfi_def_cfa_offset 24
 4096              		.cfi_offset 3, -24
 4097              		.cfi_offset 4, -20
 4098              		.cfi_offset 5, -16
 4099              		.cfi_offset 6, -12
 4100              		.cfi_offset 7, -8
 4101              		.cfi_offset 14, -4
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 171


 4102 0008 0446     		mov	r4, r0
 4103 000a 0D46     		mov	r5, r1
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4104              		.loc 1 4608 0
 4105 000c FFF7FEFF 		bl	vPortValidateInterruptPriority
 4106              	.LVL341:
 4107              	.LBB45:
 4108              	.LBB46:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 4109              		.loc 2 215 0
 4110              		.syntax unified
 4111              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4112 0010 EFF31186 		    mrs r6, basepri                                            
 4113 0014 4FF02F03 	    mov r3, #47                                                 
 4114 0018 83F31188 	    msr basepri, r3                                            
 4115 001c BFF36F8F 	    isb                                                        
 4116 0020 BFF34F8F 	    dsb                                                        
 4117              	
 4118              	@ 0 "" 2
 4119              		.thumb
 4120              		.syntax unified
 4121              	.LBE46:
 4122              	.LBE45:
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4123              		.loc 1 4614 0
 4124 0024 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4125 0028 DBB2     		uxtb	r3, r3
 4126              	.LVL342:
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4127              		.loc 1 4615 0
 4128 002a 0222     		movs	r2, #2
 4129 002c 84F85C20 		strb	r2, [r4, #92]
4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4130              		.loc 1 4619 0
 4131 0030 A26D     		ldr	r2, [r4, #88]
 4132 0032 0132     		adds	r2, r2, #1
 4133 0034 A265     		str	r2, [r4, #88]
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 4134              		.loc 1 4625 0
 4135 0036 012B     		cmp	r3, #1
 4136 0038 31D1     		bne	.L406
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4137              		.loc 1 4628 0
 4138 003a A36A     		ldr	r3, [r4, #40]
 4139              	.LVL343:
 4140 003c 0BB1     		cbz	r3, .L407
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4141              		.loc 1 4628 0 is_stmt 0 discriminator 1
 4142              		.syntax unified
 4143              	@ 4628 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 4144 003e 72B6     		 cpsid i 
 4145              	@ 0 "" 2
 4146              		.thumb
 4147              		.syntax unified
 4148              	.L408:
 4149 0040 FEE7     		b	.L408
 4150              	.L407:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 172


4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4151              		.loc 1 4630 0 is_stmt 1
 4152 0042 184B     		ldr	r3, .L414
 4153 0044 D3F81C32 		ldr	r3, [r3, #540]
 4154 0048 ABB9     		cbnz	r3, .L409
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4155              		.loc 1 4632 0
 4156 004a 271D     		adds	r7, r4, #4
 4157 004c 3846     		mov	r0, r7
 4158 004e FFF7FEFF 		bl	uxListRemove
 4159              	.LVL344:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4160              		.loc 1 4633 0
 4161 0052 E36A     		ldr	r3, [r4, #44]
 4162 0054 134A     		ldr	r2, .L414
 4163 0056 D2F81022 		ldr	r2, [r2, #528]
 4164 005a 9342     		cmp	r3, r2
 4165 005c 02D9     		bls	.L410
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4166              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4167 005e 114A     		ldr	r2, .L414
 4168 0060 C2F81032 		str	r3, [r2, #528]
 4169              	.L410:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4170              		.loc 1 4633 0 discriminator 3
 4171 0064 03EB8303 		add	r3, r3, r3, lsl #2
 4172 0068 9A00     		lsls	r2, r3, #2
 4173 006a 3946     		mov	r1, r7
 4174 006c 0E48     		ldr	r0, .L414+4
 4175 006e 1044     		add	r0, r0, r2
 4176 0070 FFF7FEFF 		bl	vListInsertEnd
 4177              	.LVL345:
 4178 0074 04E0     		b	.L411
 4179              	.L409:
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4180              		.loc 1 4639 0 is_stmt 1
 4181 0076 04F11801 		add	r1, r4, #24
 4182 007a 0C48     		ldr	r0, .L414+8
 4183 007c FFF7FEFF 		bl	vListInsertEnd
 4184              	.LVL346:
 4185              	.L411:
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4186              		.loc 1 4642 0
 4187 0080 E26A     		ldr	r2, [r4, #44]
 4188 0082 084B     		ldr	r3, .L414
 4189 0084 D3F80432 		ldr	r3, [r3, #516]
 4190 0088 DB6A     		ldr	r3, [r3, #44]
 4191 008a 9A42     		cmp	r2, r3
 4192 008c 07D9     		bls	.L406
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 4193              		.loc 1 4646 0
 4194 008e 15B1     		cbz	r5, .L412
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4195              		.loc 1 4648 0
 4196 0090 0123     		movs	r3, #1
 4197 0092 2B60     		str	r3, [r5]
 4198 0094 03E0     		b	.L406
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 173


 4199              	.L412:
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4200              		.loc 1 4655 0
 4201 0096 0122     		movs	r2, #1
 4202 0098 024B     		ldr	r3, .L414
 4203 009a C3F82C22 		str	r2, [r3, #556]
 4204              	.L406:
 4205              	.LVL347:
 4206              	.LBB47:
 4207              	.LBB48:
 4208              		.loc 2 233 0
 4209              		.syntax unified
 4210              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4211 009e 86F31188 		    msr basepri, r6  
 4212              	@ 0 "" 2
 4213              	.LVL348:
 4214              		.thumb
 4215              		.syntax unified
 4216 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4217              	.LVL349:
 4218              	.L415:
 4219              		.align	2
 4220              	.L414:
 4221 00a4 00000000 		.word	.LANCHOR0
 4222 00a8 30000000 		.word	.LANCHOR0+48
 4223 00ac 14000000 		.word	.LANCHOR0+20
 4224              	.LBE48:
 4225              	.LBE47:
 4226              		.cfi_endproc
 4227              	.LFE562:
 4228              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 4229              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 4230              		.align	2
 4231              		.global	xTaskNotifyStateClear
 4232              		.thumb
 4233              		.thumb_func
 4234              		.type	xTaskNotifyStateClear, %function
 4235              	xTaskNotifyStateClear:
 4236              	.LFB563:
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 4237              		.loc 1 4674 0
 4238              		.cfi_startproc
 4239              		@ args = 0, pretend = 0, frame = 0
 4240              		@ frame_needed = 0, uses_anonymous_args = 0
 4241              	.LVL350:
 4242 0000 10B5     		push	{r4, lr}
 4243              		.cfi_def_cfa_offset 8
 4244              		.cfi_offset 4, -8
 4245              		.cfi_offset 14, -4
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4246              		.loc 1 4680 0
 4247 0002 0446     		mov	r4, r0
 4248 0004 10B9     		cbnz	r0, .L417
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4249              		.loc 1 4680 0 is_stmt 0 discriminator 1
 4250 0006 0A4B     		ldr	r3, .L421
 4251 0008 D3F80442 		ldr	r4, [r3, #516]
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 174


 4252              	.LVL351:
 4253              	.L417:
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 4254              		.loc 1 4682 0 is_stmt 1 discriminator 4
 4255 000c FFF7FEFF 		bl	vPortEnterCritical
 4256              	.LVL352:
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 4257              		.loc 1 4684 0 discriminator 4
 4258 0010 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4259 0014 DBB2     		uxtb	r3, r3
 4260 0016 022B     		cmp	r3, #2
 4261 0018 04D1     		bne	.L419
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
 4262              		.loc 1 4686 0
 4263 001a 0023     		movs	r3, #0
 4264 001c 84F85C30 		strb	r3, [r4, #92]
 4265              	.LVL353:
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 4266              		.loc 1 4687 0
 4267 0020 0124     		movs	r4, #1
 4268              	.LVL354:
 4269 0022 00E0     		b	.L418
 4270              	.LVL355:
 4271              	.L419:
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 4272              		.loc 1 4691 0
 4273 0024 0024     		movs	r4, #0
 4274              	.LVL356:
 4275              	.L418:
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4276              		.loc 1 4694 0
 4277 0026 FFF7FEFF 		bl	vPortExitCritical
 4278              	.LVL357:
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4279              		.loc 1 4697 0
 4280 002a 2046     		mov	r0, r4
 4281 002c 10BD     		pop	{r4, pc}
 4282              	.LVL358:
 4283              	.L422:
 4284 002e 00BF     		.align	2
 4285              	.L421:
 4286 0030 00000000 		.word	.LANCHOR0
 4287              		.cfi_endproc
 4288              	.LFE563:
 4289              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 4290              		.global	pxCurrentTCB
 4291              		.section	.rodata.str1.4,"aMS",%progbits,1
 4292              		.align	2
 4293              	.LC0:
 4294 0000 49444C45 		.ascii	"IDLE\000"
 4294      00
 4295              		.bss
 4296              		.align	2
 4297              		.set	.LANCHOR0,. + 0
 4298              		.type	xSuspendedTaskList, %object
 4299              		.size	xSuspendedTaskList, 20
 4300              	xSuspendedTaskList:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 175


 4301 0000 00000000 		.space	20
 4301      00000000 
 4301      00000000 
 4301      00000000 
 4301      00000000 
 4302              		.type	xPendingReadyList, %object
 4303              		.size	xPendingReadyList, 20
 4304              	xPendingReadyList:
 4305 0014 00000000 		.space	20
 4305      00000000 
 4305      00000000 
 4305      00000000 
 4305      00000000 
 4306              		.type	pxDelayedTaskList, %object
 4307              		.size	pxDelayedTaskList, 4
 4308              	pxDelayedTaskList:
 4309 0028 00000000 		.space	4
 4310              		.type	xNextTaskUnblockTime, %object
 4311              		.size	xNextTaskUnblockTime, 4
 4312              	xNextTaskUnblockTime:
 4313 002c 00000000 		.space	4
 4314              		.type	pxReadyTasksLists, %object
 4315              		.size	pxReadyTasksLists, 400
 4316              	pxReadyTasksLists:
 4317 0030 00000000 		.space	400
 4317      00000000 
 4317      00000000 
 4317      00000000 
 4317      00000000 
 4318              		.type	xDelayedTaskList1, %object
 4319              		.size	xDelayedTaskList1, 20
 4320              	xDelayedTaskList1:
 4321 01c0 00000000 		.space	20
 4321      00000000 
 4321      00000000 
 4321      00000000 
 4321      00000000 
 4322              		.type	xDelayedTaskList2, %object
 4323              		.size	xDelayedTaskList2, 20
 4324              	xDelayedTaskList2:
 4325 01d4 00000000 		.space	20
 4325      00000000 
 4325      00000000 
 4325      00000000 
 4325      00000000 
 4326              		.type	xTasksWaitingTermination, %object
 4327              		.size	xTasksWaitingTermination, 20
 4328              	xTasksWaitingTermination:
 4329 01e8 00000000 		.space	20
 4329      00000000 
 4329      00000000 
 4329      00000000 
 4329      00000000 
 4330              		.type	pxOverflowDelayedTaskList, %object
 4331              		.size	pxOverflowDelayedTaskList, 4
 4332              	pxOverflowDelayedTaskList:
 4333 01fc 00000000 		.space	4
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 176


 4334              		.type	uxCurrentNumberOfTasks, %object
 4335              		.size	uxCurrentNumberOfTasks, 4
 4336              	uxCurrentNumberOfTasks:
 4337 0200 00000000 		.space	4
 4338              		.type	pxCurrentTCB, %object
 4339              		.size	pxCurrentTCB, 4
 4340              	pxCurrentTCB:
 4341 0204 00000000 		.space	4
 4342              		.type	xSchedulerRunning, %object
 4343              		.size	xSchedulerRunning, 4
 4344              	xSchedulerRunning:
 4345 0208 00000000 		.space	4
 4346              		.type	uxTaskNumber, %object
 4347              		.size	uxTaskNumber, 4
 4348              	uxTaskNumber:
 4349 020c 00000000 		.space	4
 4350              		.type	uxTopReadyPriority, %object
 4351              		.size	uxTopReadyPriority, 4
 4352              	uxTopReadyPriority:
 4353 0210 00000000 		.space	4
 4354              		.type	xTickCount, %object
 4355              		.size	xTickCount, 4
 4356              	xTickCount:
 4357 0214 00000000 		.space	4
 4358              		.type	uxDeletedTasksWaitingCleanUp, %object
 4359              		.size	uxDeletedTasksWaitingCleanUp, 4
 4360              	uxDeletedTasksWaitingCleanUp:
 4361 0218 00000000 		.space	4
 4362              		.type	uxSchedulerSuspended, %object
 4363              		.size	uxSchedulerSuspended, 4
 4364              	uxSchedulerSuspended:
 4365 021c 00000000 		.space	4
 4366              		.type	xIdleTaskHandle, %object
 4367              		.size	xIdleTaskHandle, 4
 4368              	xIdleTaskHandle:
 4369 0220 00000000 		.space	4
 4370              		.type	xNumOfOverflows, %object
 4371              		.size	xNumOfOverflows, 4
 4372              	xNumOfOverflows:
 4373 0224 00000000 		.space	4
 4374              		.type	uxPendedTicks, %object
 4375              		.size	uxPendedTicks, 4
 4376              	uxPendedTicks:
 4377 0228 00000000 		.space	4
 4378              		.type	xYieldPending, %object
 4379              		.size	xYieldPending, 4
 4380              	xYieldPending:
 4381 022c 00000000 		.space	4
 4382              		.text
 4383              	.Letext0:
 4384              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4385              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4386              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4387              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 4388              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_spi.h"
 4389              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
 4390              		.file 9 "Generated_Source\\PSoC6/ADC.h"
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 177


 4391              		.file 10 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/projdefs.h"
 4392              		.file 11 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/list.h"
 4393              		.file 12 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/task.h"
 4394              		.file 13 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 4395              		.file 14 "Generated_Source\\PSoC6/CY_EINK_SPIM.h"
 4396              		.file 15 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/portable.h"
 4397              		.file 16 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 4398              		.file 17 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/timers.h"
 4399              		.section	.debug_info,"",%progbits
 4400              	.Ldebug_info0:
 4401 0000 8D200000 		.4byte	0x208d
 4402 0004 0400     		.2byte	0x4
 4403 0006 00000000 		.4byte	.Ldebug_abbrev0
 4404 000a 04       		.byte	0x4
 4405 000b 01       		.uleb128 0x1
 4406 000c C1020000 		.4byte	.LASF263
 4407 0010 0C       		.byte	0xc
 4408 0011 ED070000 		.4byte	.LASF264
 4409 0015 A10C0000 		.4byte	.LASF265
 4410 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 4411 001d 00000000 		.4byte	0
 4412 0021 00000000 		.4byte	.Ldebug_line0
 4413 0025 02       		.uleb128 0x2
 4414 0026 C4050000 		.4byte	.LASF4
 4415 002a 03       		.byte	0x3
 4416 002b D8       		.byte	0xd8
 4417 002c 30000000 		.4byte	0x30
 4418 0030 03       		.uleb128 0x3
 4419 0031 04       		.byte	0x4
 4420 0032 07       		.byte	0x7
 4421 0033 23010000 		.4byte	.LASF0
 4422 0037 04       		.uleb128 0x4
 4423 0038 04       		.byte	0x4
 4424 0039 05       		.byte	0x5
 4425 003a 696E7400 		.ascii	"int\000"
 4426 003e 03       		.uleb128 0x3
 4427 003f 08       		.byte	0x8
 4428 0040 05       		.byte	0x5
 4429 0041 08090000 		.4byte	.LASF1
 4430 0045 03       		.uleb128 0x3
 4431 0046 08       		.byte	0x8
 4432 0047 04       		.byte	0x4
 4433 0048 D20A0000 		.4byte	.LASF2
 4434 004c 03       		.uleb128 0x3
 4435 004d 01       		.byte	0x1
 4436 004e 06       		.byte	0x6
 4437 004f D70F0000 		.4byte	.LASF3
 4438 0053 02       		.uleb128 0x2
 4439 0054 010D0000 		.4byte	.LASF5
 4440 0058 04       		.byte	0x4
 4441 0059 1D       		.byte	0x1d
 4442 005a 5E000000 		.4byte	0x5e
 4443 005e 03       		.uleb128 0x3
 4444 005f 01       		.byte	0x1
 4445 0060 08       		.byte	0x8
 4446 0061 480B0000 		.4byte	.LASF6
 4447 0065 03       		.uleb128 0x3
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 178


 4448 0066 02       		.byte	0x2
 4449 0067 05       		.byte	0x5
 4450 0068 740B0000 		.4byte	.LASF7
 4451 006c 02       		.uleb128 0x2
 4452 006d 13050000 		.4byte	.LASF8
 4453 0071 04       		.byte	0x4
 4454 0072 2B       		.byte	0x2b
 4455 0073 77000000 		.4byte	0x77
 4456 0077 03       		.uleb128 0x3
 4457 0078 02       		.byte	0x2
 4458 0079 07       		.byte	0x7
 4459 007a E30F0000 		.4byte	.LASF9
 4460 007e 02       		.uleb128 0x2
 4461 007f B5010000 		.4byte	.LASF10
 4462 0083 04       		.byte	0x4
 4463 0084 3F       		.byte	0x3f
 4464 0085 89000000 		.4byte	0x89
 4465 0089 03       		.uleb128 0x3
 4466 008a 04       		.byte	0x4
 4467 008b 05       		.byte	0x5
 4468 008c CE0B0000 		.4byte	.LASF11
 4469 0090 02       		.uleb128 0x2
 4470 0091 850E0000 		.4byte	.LASF12
 4471 0095 04       		.byte	0x4
 4472 0096 41       		.byte	0x41
 4473 0097 9B000000 		.4byte	0x9b
 4474 009b 03       		.uleb128 0x3
 4475 009c 04       		.byte	0x4
 4476 009d 07       		.byte	0x7
 4477 009e B00D0000 		.4byte	.LASF13
 4478 00a2 03       		.uleb128 0x3
 4479 00a3 08       		.byte	0x8
 4480 00a4 07       		.byte	0x7
 4481 00a5 90040000 		.4byte	.LASF14
 4482 00a9 03       		.uleb128 0x3
 4483 00aa 04       		.byte	0x4
 4484 00ab 07       		.byte	0x7
 4485 00ac 880D0000 		.4byte	.LASF15
 4486 00b0 05       		.uleb128 0x5
 4487 00b1 04       		.byte	0x4
 4488 00b2 06       		.uleb128 0x6
 4489 00b3 04       		.byte	0x4
 4490 00b4 B8000000 		.4byte	0xb8
 4491 00b8 03       		.uleb128 0x3
 4492 00b9 01       		.byte	0x1
 4493 00ba 08       		.byte	0x8
 4494 00bb 3B070000 		.4byte	.LASF16
 4495 00bf 06       		.uleb128 0x6
 4496 00c0 04       		.byte	0x4
 4497 00c1 C5000000 		.4byte	0xc5
 4498 00c5 07       		.uleb128 0x7
 4499 00c6 B8000000 		.4byte	0xb8
 4500 00ca 02       		.uleb128 0x2
 4501 00cb 6C080000 		.4byte	.LASF17
 4502 00cf 05       		.byte	0x5
 4503 00d0 18       		.byte	0x18
 4504 00d1 53000000 		.4byte	0x53
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 179


 4505 00d5 02       		.uleb128 0x2
 4506 00d6 ED0A0000 		.4byte	.LASF18
 4507 00da 05       		.byte	0x5
 4508 00db 24       		.byte	0x24
 4509 00dc 6C000000 		.4byte	0x6c
 4510 00e0 02       		.uleb128 0x2
 4511 00e1 D00D0000 		.4byte	.LASF19
 4512 00e5 05       		.byte	0x5
 4513 00e6 2C       		.byte	0x2c
 4514 00e7 7E000000 		.4byte	0x7e
 4515 00eb 02       		.uleb128 0x2
 4516 00ec 56010000 		.4byte	.LASF20
 4517 00f0 05       		.byte	0x5
 4518 00f1 30       		.byte	0x30
 4519 00f2 90000000 		.4byte	0x90
 4520 00f6 08       		.uleb128 0x8
 4521 00f7 EB000000 		.4byte	0xeb
 4522 00fb 08       		.uleb128 0x8
 4523 00fc CA000000 		.4byte	0xca
 4524 0100 03       		.uleb128 0x3
 4525 0101 04       		.byte	0x4
 4526 0102 04       		.byte	0x4
 4527 0103 39040000 		.4byte	.LASF21
 4528 0107 03       		.uleb128 0x3
 4529 0108 08       		.byte	0x8
 4530 0109 04       		.byte	0x4
 4531 010a DF050000 		.4byte	.LASF22
 4532 010e 09       		.uleb128 0x9
 4533 010f 29100000 		.4byte	.LASF23
 4534 0113 06       		.byte	0x6
 4535 0114 8503     		.2byte	0x385
 4536 0116 CA000000 		.4byte	0xca
 4537 011a 06       		.uleb128 0x6
 4538 011b 04       		.byte	0x4
 4539 011c EB000000 		.4byte	0xeb
 4540 0120 03       		.uleb128 0x3
 4541 0121 01       		.byte	0x1
 4542 0122 02       		.byte	0x2
 4543 0123 C2060000 		.4byte	.LASF24
 4544 0127 06       		.uleb128 0x6
 4545 0128 04       		.byte	0x4
 4546 0129 2D010000 		.4byte	0x12d
 4547 012d 0A       		.uleb128 0xa
 4548 012e 38010000 		.4byte	0x138
 4549 0132 0B       		.uleb128 0xb
 4550 0133 EB000000 		.4byte	0xeb
 4551 0137 00       		.byte	0
 4552 0138 09       		.uleb128 0x9
 4553 0139 10000000 		.4byte	.LASF25
 4554 013d 07       		.byte	0x7
 4555 013e BF01     		.2byte	0x1bf
 4556 0140 27010000 		.4byte	0x127
 4557 0144 0C       		.uleb128 0xc
 4558 0145 470D0000 		.4byte	.LASF68
 4559 0149 24       		.byte	0x24
 4560 014a 07       		.byte	0x7
 4561 014b 4102     		.2byte	0x241
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 180


 4562 014d C7010000 		.4byte	0x1c7
 4563 0151 0D       		.uleb128 0xd
 4564 0152 74080000 		.4byte	.LASF26
 4565 0156 07       		.byte	0x7
 4566 0157 4402     		.2byte	0x244
 4567 0159 F6000000 		.4byte	0xf6
 4568 015d 00       		.byte	0
 4569 015e 0D       		.uleb128 0xd
 4570 015f B0050000 		.4byte	.LASF27
 4571 0163 07       		.byte	0x7
 4572 0164 4602     		.2byte	0x246
 4573 0166 B0000000 		.4byte	0xb0
 4574 016a 04       		.byte	0x4
 4575 016b 0D       		.uleb128 0xd
 4576 016c 26110000 		.4byte	.LASF28
 4577 0170 07       		.byte	0x7
 4578 0171 4702     		.2byte	0x247
 4579 0173 EB000000 		.4byte	0xeb
 4580 0177 08       		.byte	0x8
 4581 0178 0D       		.uleb128 0xd
 4582 0179 D5070000 		.4byte	.LASF29
 4583 017d 07       		.byte	0x7
 4584 017e 4802     		.2byte	0x248
 4585 0180 F6000000 		.4byte	0xf6
 4586 0184 0C       		.byte	0xc
 4587 0185 0D       		.uleb128 0xd
 4588 0186 A40A0000 		.4byte	.LASF30
 4589 018a 07       		.byte	0x7
 4590 018b 4A02     		.2byte	0x24a
 4591 018d B0000000 		.4byte	0xb0
 4592 0191 10       		.byte	0x10
 4593 0192 0D       		.uleb128 0xd
 4594 0193 2A0A0000 		.4byte	.LASF31
 4595 0197 07       		.byte	0x7
 4596 0198 4B02     		.2byte	0x24b
 4597 019a EB000000 		.4byte	0xeb
 4598 019e 14       		.byte	0x14
 4599 019f 0D       		.uleb128 0xd
 4600 01a0 8F010000 		.4byte	.LASF32
 4601 01a4 07       		.byte	0x7
 4602 01a5 4C02     		.2byte	0x24c
 4603 01a7 F6000000 		.4byte	0xf6
 4604 01ab 18       		.byte	0x18
 4605 01ac 0D       		.uleb128 0xd
 4606 01ad CB050000 		.4byte	.LASF33
 4607 01b1 07       		.byte	0x7
 4608 01b2 5202     		.2byte	0x252
 4609 01b4 38010000 		.4byte	0x138
 4610 01b8 1C       		.byte	0x1c
 4611 01b9 0D       		.uleb128 0xd
 4612 01ba 4B080000 		.4byte	.LASF34
 4613 01be 07       		.byte	0x7
 4614 01bf 5502     		.2byte	0x255
 4615 01c1 EB000000 		.4byte	0xeb
 4616 01c5 20       		.byte	0x20
 4617 01c6 00       		.byte	0
 4618 01c7 09       		.uleb128 0x9
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 181


 4619 01c8 F4090000 		.4byte	.LASF35
 4620 01cc 07       		.byte	0x7
 4621 01cd 5802     		.2byte	0x258
 4622 01cf 44010000 		.4byte	0x144
 4623 01d3 0E       		.uleb128 0xe
 4624 01d4 01       		.byte	0x1
 4625 01d5 5E000000 		.4byte	0x5e
 4626 01d9 08       		.byte	0x8
 4627 01da 0504     		.2byte	0x405
 4628 01dc F9010000 		.4byte	0x1f9
 4629 01e0 0F       		.uleb128 0xf
 4630 01e1 74030000 		.4byte	.LASF36
 4631 01e5 00       		.byte	0
 4632 01e6 0F       		.uleb128 0xf
 4633 01e7 97050000 		.4byte	.LASF37
 4634 01eb 01       		.byte	0x1
 4635 01ec 0F       		.uleb128 0xf
 4636 01ed 0A070000 		.4byte	.LASF38
 4637 01f1 02       		.byte	0x2
 4638 01f2 0F       		.uleb128 0xf
 4639 01f3 6B010000 		.4byte	.LASF39
 4640 01f7 03       		.byte	0x3
 4641 01f8 00       		.byte	0
 4642 01f9 09       		.uleb128 0x9
 4643 01fa 60100000 		.4byte	.LASF40
 4644 01fe 08       		.byte	0x8
 4645 01ff 0A04     		.2byte	0x40a
 4646 0201 D3010000 		.4byte	0x1d3
 4647 0205 10       		.uleb128 0x10
 4648 0206 78       		.byte	0x78
 4649 0207 08       		.byte	0x8
 4650 0208 F404     		.2byte	0x4f4
 4651 020a D2020000 		.4byte	0x2d2
 4652 020e 0D       		.uleb128 0xd
 4653 020f 65050000 		.4byte	.LASF41
 4654 0213 08       		.byte	0x8
 4655 0214 F604     		.2byte	0x4f6
 4656 0216 EB000000 		.4byte	0xeb
 4657 021a 00       		.byte	0
 4658 021b 0D       		.uleb128 0xd
 4659 021c 120E0000 		.4byte	.LASF42
 4660 0220 08       		.byte	0x8
 4661 0221 F704     		.2byte	0x4f7
 4662 0223 EB000000 		.4byte	0xeb
 4663 0227 04       		.byte	0x4
 4664 0228 0D       		.uleb128 0xd
 4665 0229 C4000000 		.4byte	.LASF43
 4666 022d 08       		.byte	0x8
 4667 022e F804     		.2byte	0x4f8
 4668 0230 EB000000 		.4byte	0xeb
 4669 0234 08       		.byte	0x8
 4670 0235 0D       		.uleb128 0xd
 4671 0236 730D0000 		.4byte	.LASF44
 4672 023a 08       		.byte	0x8
 4673 023b F904     		.2byte	0x4f9
 4674 023d EB000000 		.4byte	0xeb
 4675 0241 0C       		.byte	0xc
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 182


 4676 0242 0D       		.uleb128 0xd
 4677 0243 08050000 		.4byte	.LASF45
 4678 0247 08       		.byte	0x8
 4679 0248 FA04     		.2byte	0x4fa
 4680 024a EB000000 		.4byte	0xeb
 4681 024e 10       		.byte	0x10
 4682 024f 0D       		.uleb128 0xd
 4683 0250 E8080000 		.4byte	.LASF46
 4684 0254 08       		.byte	0x8
 4685 0255 FB04     		.2byte	0x4fb
 4686 0257 F9010000 		.4byte	0x1f9
 4687 025b 14       		.byte	0x14
 4688 025c 0D       		.uleb128 0xd
 4689 025d 4B070000 		.4byte	.LASF47
 4690 0261 08       		.byte	0x8
 4691 0262 FC04     		.2byte	0x4fc
 4692 0264 EB000000 		.4byte	0xeb
 4693 0268 18       		.byte	0x18
 4694 0269 0D       		.uleb128 0xd
 4695 026a 1F0A0000 		.4byte	.LASF48
 4696 026e 08       		.byte	0x8
 4697 026f FD04     		.2byte	0x4fd
 4698 0271 D2020000 		.4byte	0x2d2
 4699 0275 1C       		.byte	0x1c
 4700 0276 0D       		.uleb128 0xd
 4701 0277 1D110000 		.4byte	.LASF49
 4702 027b 08       		.byte	0x8
 4703 027c FE04     		.2byte	0x4fe
 4704 027e EB000000 		.4byte	0xeb
 4705 0282 5C       		.byte	0x5c
 4706 0283 0D       		.uleb128 0xd
 4707 0284 5F020000 		.4byte	.LASF50
 4708 0288 08       		.byte	0x8
 4709 0289 FF04     		.2byte	0x4ff
 4710 028b EB000000 		.4byte	0xeb
 4711 028f 60       		.byte	0x60
 4712 0290 0D       		.uleb128 0xd
 4713 0291 52100000 		.4byte	.LASF51
 4714 0295 08       		.byte	0x8
 4715 0296 0005     		.2byte	0x500
 4716 0298 EB000000 		.4byte	0xeb
 4717 029c 64       		.byte	0x64
 4718 029d 0D       		.uleb128 0xd
 4719 029e 310B0000 		.4byte	.LASF52
 4720 02a2 08       		.byte	0x8
 4721 02a3 0105     		.2byte	0x501
 4722 02a5 EB000000 		.4byte	0xeb
 4723 02a9 68       		.byte	0x68
 4724 02aa 0D       		.uleb128 0xd
 4725 02ab A1080000 		.4byte	.LASF53
 4726 02af 08       		.byte	0x8
 4727 02b0 0205     		.2byte	0x502
 4728 02b2 EB000000 		.4byte	0xeb
 4729 02b6 6C       		.byte	0x6c
 4730 02b7 0D       		.uleb128 0xd
 4731 02b8 2F100000 		.4byte	.LASF54
 4732 02bc 08       		.byte	0x8
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 183


 4733 02bd 0305     		.2byte	0x503
 4734 02bf 20010000 		.4byte	0x120
 4735 02c3 70       		.byte	0x70
 4736 02c4 0D       		.uleb128 0xd
 4737 02c5 D5060000 		.4byte	.LASF55
 4738 02c9 08       		.byte	0x8
 4739 02ca 0405     		.2byte	0x504
 4740 02cc EB000000 		.4byte	0xeb
 4741 02d0 74       		.byte	0x74
 4742 02d1 00       		.byte	0
 4743 02d2 11       		.uleb128 0x11
 4744 02d3 EB000000 		.4byte	0xeb
 4745 02d7 E2020000 		.4byte	0x2e2
 4746 02db 12       		.uleb128 0x12
 4747 02dc A9000000 		.4byte	0xa9
 4748 02e0 0F       		.byte	0xf
 4749 02e1 00       		.byte	0
 4750 02e2 09       		.uleb128 0x9
 4751 02e3 51050000 		.4byte	.LASF56
 4752 02e7 08       		.byte	0x8
 4753 02e8 0505     		.2byte	0x505
 4754 02ea 05020000 		.4byte	0x205
 4755 02ee 13       		.uleb128 0x13
 4756 02ef 14       		.byte	0x14
 4757 02f0 09       		.byte	0x9
 4758 02f1 3B       		.byte	0x3b
 4759 02f2 33030000 		.4byte	0x333
 4760 02f6 14       		.uleb128 0x14
 4761 02f7 DC010000 		.4byte	.LASF57
 4762 02fb 09       		.byte	0x9
 4763 02fc 3D       		.byte	0x3d
 4764 02fd EB000000 		.4byte	0xeb
 4765 0301 00       		.byte	0
 4766 0302 14       		.uleb128 0x14
 4767 0303 6D040000 		.4byte	.LASF58
 4768 0307 09       		.byte	0x9
 4769 0308 3E       		.byte	0x3e
 4770 0309 EB000000 		.4byte	0xeb
 4771 030d 04       		.byte	0x4
 4772 030e 14       		.uleb128 0x14
 4773 030f E8010000 		.4byte	.LASF59
 4774 0313 09       		.byte	0x9
 4775 0314 3F       		.byte	0x3f
 4776 0315 33030000 		.4byte	0x333
 4777 0319 08       		.byte	0x8
 4778 031a 14       		.uleb128 0x14
 4779 031b 1E100000 		.4byte	.LASF60
 4780 031f 09       		.byte	0x9
 4781 0320 40       		.byte	0x40
 4782 0321 EB000000 		.4byte	0xeb
 4783 0325 0C       		.byte	0xc
 4784 0326 14       		.uleb128 0x14
 4785 0327 290F0000 		.4byte	.LASF61
 4786 032b 09       		.byte	0x9
 4787 032c 45       		.byte	0x45
 4788 032d EB000000 		.4byte	0xeb
 4789 0331 10       		.byte	0x10
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 184


 4790 0332 00       		.byte	0
 4791 0333 06       		.uleb128 0x6
 4792 0334 04       		.byte	0x4
 4793 0335 39030000 		.4byte	0x339
 4794 0339 07       		.uleb128 0x7
 4795 033a E2020000 		.4byte	0x2e2
 4796 033e 02       		.uleb128 0x2
 4797 033f 8F080000 		.4byte	.LASF62
 4798 0343 09       		.byte	0x9
 4799 0344 48       		.byte	0x48
 4800 0345 EE020000 		.4byte	0x2ee
 4801 0349 02       		.uleb128 0x2
 4802 034a 97090000 		.4byte	.LASF63
 4803 034e 0A       		.byte	0xa
 4804 034f 4D       		.byte	0x4d
 4805 0350 54030000 		.4byte	0x354
 4806 0354 06       		.uleb128 0x6
 4807 0355 04       		.byte	0x4
 4808 0356 5A030000 		.4byte	0x35a
 4809 035a 0A       		.uleb128 0xa
 4810 035b 65030000 		.4byte	0x365
 4811 035f 0B       		.uleb128 0xb
 4812 0360 B0000000 		.4byte	0xb0
 4813 0364 00       		.byte	0
 4814 0365 02       		.uleb128 0x2
 4815 0366 5F010000 		.4byte	.LASF64
 4816 036a 02       		.byte	0x2
 4817 036b 61       		.byte	0x61
 4818 036c EB000000 		.4byte	0xeb
 4819 0370 02       		.uleb128 0x2
 4820 0371 45090000 		.4byte	.LASF65
 4821 0375 02       		.byte	0x2
 4822 0376 62       		.byte	0x62
 4823 0377 89000000 		.4byte	0x89
 4824 037b 02       		.uleb128 0x2
 4825 037c EC030000 		.4byte	.LASF66
 4826 0380 02       		.byte	0x2
 4827 0381 63       		.byte	0x63
 4828 0382 9B000000 		.4byte	0x9b
 4829 0386 02       		.uleb128 0x2
 4830 0387 AA0A0000 		.4byte	.LASF67
 4831 038b 02       		.byte	0x2
 4832 038c 69       		.byte	0x69
 4833 038d EB000000 		.4byte	0xeb
 4834 0391 11       		.uleb128 0x11
 4835 0392 B0000000 		.4byte	0xb0
 4836 0396 A1030000 		.4byte	0x3a1
 4837 039a 12       		.uleb128 0x12
 4838 039b A9000000 		.4byte	0xa9
 4839 039f 04       		.byte	0x4
 4840 03a0 00       		.byte	0
 4841 03a1 15       		.uleb128 0x15
 4842 03a2 BF010000 		.4byte	.LASF69
 4843 03a6 14       		.byte	0x14
 4844 03a7 0B       		.byte	0xb
 4845 03a8 B5       		.byte	0xb5
 4846 03a9 EA030000 		.4byte	0x3ea
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 185


 4847 03ad 14       		.uleb128 0x14
 4848 03ae C30B0000 		.4byte	.LASF70
 4849 03b2 0B       		.byte	0xb
 4850 03b3 B8       		.byte	0xb8
 4851 03b4 86030000 		.4byte	0x386
 4852 03b8 00       		.byte	0
 4853 03b9 14       		.uleb128 0x14
 4854 03ba A6090000 		.4byte	.LASF71
 4855 03be 0B       		.byte	0xb
 4856 03bf B9       		.byte	0xb9
 4857 03c0 EA030000 		.4byte	0x3ea
 4858 03c4 04       		.byte	0x4
 4859 03c5 14       		.uleb128 0x14
 4860 03c6 FD040000 		.4byte	.LASF72
 4861 03ca 0B       		.byte	0xb
 4862 03cb BA       		.byte	0xba
 4863 03cc EA030000 		.4byte	0x3ea
 4864 03d0 08       		.byte	0x8
 4865 03d1 14       		.uleb128 0x14
 4866 03d2 210F0000 		.4byte	.LASF73
 4867 03d6 0B       		.byte	0xb
 4868 03d7 BB       		.byte	0xbb
 4869 03d8 B0000000 		.4byte	0xb0
 4870 03dc 0C       		.byte	0xc
 4871 03dd 14       		.uleb128 0x14
 4872 03de 250B0000 		.4byte	.LASF74
 4873 03e2 0B       		.byte	0xb
 4874 03e3 BC       		.byte	0xbc
 4875 03e4 B0000000 		.4byte	0xb0
 4876 03e8 10       		.byte	0x10
 4877 03e9 00       		.byte	0
 4878 03ea 06       		.uleb128 0x6
 4879 03eb 04       		.byte	0x4
 4880 03ec A1030000 		.4byte	0x3a1
 4881 03f0 02       		.uleb128 0x2
 4882 03f1 40070000 		.4byte	.LASF75
 4883 03f5 0B       		.byte	0xb
 4884 03f6 BF       		.byte	0xbf
 4885 03f7 A1030000 		.4byte	0x3a1
 4886 03fb 15       		.uleb128 0x15
 4887 03fc E6050000 		.4byte	.LASF76
 4888 0400 0C       		.byte	0xc
 4889 0401 0B       		.byte	0xb
 4890 0402 C1       		.byte	0xc1
 4891 0403 2C040000 		.4byte	0x42c
 4892 0407 14       		.uleb128 0x14
 4893 0408 C30B0000 		.4byte	.LASF70
 4894 040c 0B       		.byte	0xb
 4895 040d C4       		.byte	0xc4
 4896 040e 86030000 		.4byte	0x386
 4897 0412 00       		.byte	0
 4898 0413 14       		.uleb128 0x14
 4899 0414 A6090000 		.4byte	.LASF71
 4900 0418 0B       		.byte	0xb
 4901 0419 C5       		.byte	0xc5
 4902 041a EA030000 		.4byte	0x3ea
 4903 041e 04       		.byte	0x4
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 186


 4904 041f 14       		.uleb128 0x14
 4905 0420 FD040000 		.4byte	.LASF72
 4906 0424 0B       		.byte	0xb
 4907 0425 C6       		.byte	0xc6
 4908 0426 EA030000 		.4byte	0x3ea
 4909 042a 08       		.byte	0x8
 4910 042b 00       		.byte	0
 4911 042c 02       		.uleb128 0x2
 4912 042d DE070000 		.4byte	.LASF77
 4913 0431 0B       		.byte	0xb
 4914 0432 C8       		.byte	0xc8
 4915 0433 FB030000 		.4byte	0x3fb
 4916 0437 15       		.uleb128 0x15
 4917 0438 F4010000 		.4byte	.LASF78
 4918 043c 14       		.byte	0x14
 4919 043d 0B       		.byte	0xb
 4920 043e CD       		.byte	0xcd
 4921 043f 68040000 		.4byte	0x468
 4922 0443 14       		.uleb128 0x14
 4923 0444 00000000 		.4byte	.LASF79
 4924 0448 0B       		.byte	0xb
 4925 0449 D0       		.byte	0xd0
 4926 044a 7B030000 		.4byte	0x37b
 4927 044e 00       		.byte	0
 4928 044f 14       		.uleb128 0x14
 4929 0450 4E010000 		.4byte	.LASF80
 4930 0454 0B       		.byte	0xb
 4931 0455 D1       		.byte	0xd1
 4932 0456 68040000 		.4byte	0x468
 4933 045a 04       		.byte	0x4
 4934 045b 14       		.uleb128 0x14
 4935 045c AE070000 		.4byte	.LASF81
 4936 0460 0B       		.byte	0xb
 4937 0461 D2       		.byte	0xd2
 4938 0462 2C040000 		.4byte	0x42c
 4939 0466 08       		.byte	0x8
 4940 0467 00       		.byte	0
 4941 0468 06       		.uleb128 0x6
 4942 0469 04       		.byte	0x4
 4943 046a F0030000 		.4byte	0x3f0
 4944 046e 02       		.uleb128 0x2
 4945 046f 900A0000 		.4byte	.LASF82
 4946 0473 0B       		.byte	0xb
 4947 0474 D4       		.byte	0xd4
 4948 0475 37040000 		.4byte	0x437
 4949 0479 02       		.uleb128 0x2
 4950 047a 410A0000 		.4byte	.LASF83
 4951 047e 0C       		.byte	0xc
 4952 047f 67       		.byte	0x67
 4953 0480 B0000000 		.4byte	0xb0
 4954 0484 16       		.uleb128 0x16
 4955 0485 01       		.byte	0x1
 4956 0486 5E000000 		.4byte	0x5e
 4957 048a 0C       		.byte	0xc
 4958 048b 7C       		.byte	0x7c
 4959 048c AF040000 		.4byte	0x4af
 4960 0490 0F       		.uleb128 0xf
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 187


 4961 0491 19010000 		.4byte	.LASF84
 4962 0495 00       		.byte	0
 4963 0496 0F       		.uleb128 0xf
 4964 0497 C90A0000 		.4byte	.LASF85
 4965 049b 01       		.byte	0x1
 4966 049c 0F       		.uleb128 0xf
 4967 049d D4050000 		.4byte	.LASF86
 4968 04a1 02       		.byte	0x2
 4969 04a2 0F       		.uleb128 0xf
 4970 04a3 79040000 		.4byte	.LASF87
 4971 04a7 03       		.byte	0x3
 4972 04a8 0F       		.uleb128 0xf
 4973 04a9 52070000 		.4byte	.LASF88
 4974 04ad 04       		.byte	0x4
 4975 04ae 00       		.byte	0
 4976 04af 02       		.uleb128 0x2
 4977 04b0 B6050000 		.4byte	.LASF89
 4978 04b4 0C       		.byte	0xc
 4979 04b5 82       		.byte	0x82
 4980 04b6 84040000 		.4byte	0x484
 4981 04ba 15       		.uleb128 0x15
 4982 04bb 85010000 		.4byte	.LASF90
 4983 04bf 08       		.byte	0x8
 4984 04c0 0C       		.byte	0xc
 4985 04c1 87       		.byte	0x87
 4986 04c2 DF040000 		.4byte	0x4df
 4987 04c6 14       		.uleb128 0x14
 4988 04c7 6B020000 		.4byte	.LASF91
 4989 04cb 0C       		.byte	0xc
 4990 04cc 89       		.byte	0x89
 4991 04cd 70030000 		.4byte	0x370
 4992 04d1 00       		.byte	0
 4993 04d2 14       		.uleb128 0x14
 4994 04d3 79090000 		.4byte	.LASF92
 4995 04d7 0C       		.byte	0xc
 4996 04d8 8A       		.byte	0x8a
 4997 04d9 86030000 		.4byte	0x386
 4998 04dd 04       		.byte	0x4
 4999 04de 00       		.byte	0
 5000 04df 02       		.uleb128 0x2
 5001 04e0 A4070000 		.4byte	.LASF93
 5002 04e4 0C       		.byte	0xc
 5003 04e5 8B       		.byte	0x8b
 5004 04e6 BA040000 		.4byte	0x4ba
 5005 04ea 15       		.uleb128 0x15
 5006 04eb DE0A0000 		.4byte	.LASF94
 5007 04ef 0C       		.byte	0xc
 5008 04f0 0C       		.byte	0xc
 5009 04f1 90       		.byte	0x90
 5010 04f2 1B050000 		.4byte	0x51b
 5011 04f6 14       		.uleb128 0x14
 5012 04f7 1D0E0000 		.4byte	.LASF95
 5013 04fb 0C       		.byte	0xc
 5014 04fc 92       		.byte	0x92
 5015 04fd B0000000 		.4byte	0xb0
 5016 0501 00       		.byte	0
 5017 0502 14       		.uleb128 0x14
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 188


 5018 0503 35090000 		.4byte	.LASF96
 5019 0507 0C       		.byte	0xc
 5020 0508 93       		.byte	0x93
 5021 0509 EB000000 		.4byte	0xeb
 5022 050d 04       		.byte	0x4
 5023 050e 14       		.uleb128 0x14
 5024 050f 8C030000 		.4byte	.LASF97
 5025 0513 0C       		.byte	0xc
 5026 0514 94       		.byte	0x94
 5027 0515 EB000000 		.4byte	0xeb
 5028 0519 08       		.byte	0x8
 5029 051a 00       		.byte	0
 5030 051b 02       		.uleb128 0x2
 5031 051c B1080000 		.4byte	.LASF98
 5032 0520 0C       		.byte	0xc
 5033 0521 95       		.byte	0x95
 5034 0522 EA040000 		.4byte	0x4ea
 5035 0526 07       		.uleb128 0x7
 5036 0527 BF000000 		.4byte	0xbf
 5037 052b 06       		.uleb128 0x6
 5038 052c 04       		.byte	0x4
 5039 052d 65030000 		.4byte	0x365
 5040 0531 0C       		.uleb128 0xc
 5041 0532 6B000000 		.4byte	.LASF99
 5042 0536 60       		.byte	0x60
 5043 0537 01       		.byte	0x1
 5044 0538 2501     		.2byte	0x125
 5045 053a B4050000 		.4byte	0x5b4
 5046 053e 0D       		.uleb128 0xd
 5047 053f 83100000 		.4byte	.LASF100
 5048 0543 01       		.byte	0x1
 5049 0544 2701     		.2byte	0x127
 5050 0546 B4050000 		.4byte	0x5b4
 5051 054a 00       		.byte	0
 5052 054b 0D       		.uleb128 0xd
 5053 054c 9D020000 		.4byte	.LASF101
 5054 0550 01       		.byte	0x1
 5055 0551 2D01     		.2byte	0x12d
 5056 0553 F0030000 		.4byte	0x3f0
 5057 0557 04       		.byte	0x4
 5058 0558 0D       		.uleb128 0xd
 5059 0559 E90E0000 		.4byte	.LASF102
 5060 055d 01       		.byte	0x1
 5061 055e 2E01     		.2byte	0x12e
 5062 0560 F0030000 		.4byte	0x3f0
 5063 0564 18       		.byte	0x18
 5064 0565 0D       		.uleb128 0xd
 5065 0566 54000000 		.4byte	.LASF103
 5066 056a 01       		.byte	0x1
 5067 056b 2F01     		.2byte	0x12f
 5068 056d 7B030000 		.4byte	0x37b
 5069 0571 2C       		.byte	0x2c
 5070 0572 0D       		.uleb128 0xd
 5071 0573 430C0000 		.4byte	.LASF104
 5072 0577 01       		.byte	0x1
 5073 0578 3001     		.2byte	0x130
 5074 057a 2B050000 		.4byte	0x52b
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 189


 5075 057e 30       		.byte	0x30
 5076 057f 0D       		.uleb128 0xd
 5077 0580 390E0000 		.4byte	.LASF105
 5078 0584 01       		.byte	0x1
 5079 0585 3101     		.2byte	0x131
 5080 0587 BF050000 		.4byte	0x5bf
 5081 058b 34       		.byte	0x34
 5082 058c 0D       		.uleb128 0xd
 5083 058d 7A050000 		.4byte	.LASF106
 5084 0591 01       		.byte	0x1
 5085 0592 4A01     		.2byte	0x14a
 5086 0594 91030000 		.4byte	0x391
 5087 0598 44       		.byte	0x44
 5088 0599 0D       		.uleb128 0xd
 5089 059a E1060000 		.4byte	.LASF107
 5090 059e 01       		.byte	0x1
 5091 059f 5D01     		.2byte	0x15d
 5092 05a1 F6000000 		.4byte	0xf6
 5093 05a5 58       		.byte	0x58
 5094 05a6 0D       		.uleb128 0xd
 5095 05a7 7C070000 		.4byte	.LASF108
 5096 05ab 01       		.byte	0x1
 5097 05ac 5E01     		.2byte	0x15e
 5098 05ae FB000000 		.4byte	0xfb
 5099 05b2 5C       		.byte	0x5c
 5100 05b3 00       		.byte	0
 5101 05b4 06       		.uleb128 0x6
 5102 05b5 04       		.byte	0x4
 5103 05b6 BA050000 		.4byte	0x5ba
 5104 05ba 08       		.uleb128 0x8
 5105 05bb 65030000 		.4byte	0x365
 5106 05bf 11       		.uleb128 0x11
 5107 05c0 B8000000 		.4byte	0xb8
 5108 05c4 CF050000 		.4byte	0x5cf
 5109 05c8 12       		.uleb128 0x12
 5110 05c9 A9000000 		.4byte	0xa9
 5111 05cd 0F       		.byte	0xf
 5112 05ce 00       		.byte	0
 5113 05cf 09       		.uleb128 0x9
 5114 05d0 CB030000 		.4byte	.LASF109
 5115 05d4 01       		.byte	0x1
 5116 05d5 6B01     		.2byte	0x16b
 5117 05d7 31050000 		.4byte	0x531
 5118 05db 09       		.uleb128 0x9
 5119 05dc 0E0F0000 		.4byte	.LASF110
 5120 05e0 01       		.byte	0x1
 5121 05e1 6F01     		.2byte	0x16f
 5122 05e3 CF050000 		.4byte	0x5cf
 5123 05e7 17       		.uleb128 0x17
 5124 05e8 D5080000 		.4byte	.LASF266
 5125 05ec 02       		.byte	0x2
 5126 05ed D3       		.byte	0xd3
 5127 05ee EB000000 		.4byte	0xeb
 5128 05f2 03       		.byte	0x3
 5129 05f3 0E060000 		.4byte	0x60e
 5130 05f7 18       		.uleb128 0x18
 5131 05f8 14040000 		.4byte	.LASF111
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 190


 5132 05fc 02       		.byte	0x2
 5133 05fd D5       		.byte	0xd5
 5134 05fe EB000000 		.4byte	0xeb
 5135 0602 18       		.uleb128 0x18
 5136 0603 28090000 		.4byte	.LASF112
 5137 0607 02       		.byte	0x2
 5138 0608 D5       		.byte	0xd5
 5139 0609 EB000000 		.4byte	0xeb
 5140 060d 00       		.byte	0
 5141 060e 19       		.uleb128 0x19
 5142 060f 7A020000 		.4byte	.LASF267
 5143 0613 02       		.byte	0x2
 5144 0614 E7       		.byte	0xe7
 5145 0615 03       		.byte	0x3
 5146 0616 26060000 		.4byte	0x626
 5147 061a 1A       		.uleb128 0x1a
 5148 061b 560A0000 		.4byte	.LASF268
 5149 061f 02       		.byte	0x2
 5150 0620 E7       		.byte	0xe7
 5151 0621 EB000000 		.4byte	0xeb
 5152 0625 00       		.byte	0
 5153 0626 1B       		.uleb128 0x1b
 5154 0627 1C0C0000 		.4byte	.LASF171
 5155 062b 01       		.byte	0x1
 5156 062c 7806     		.2byte	0x678
 5157 062e 70030000 		.4byte	0x370
 5158 0632 00000000 		.4byte	.LFB527
 5159 0636 40000000 		.4byte	.LFE527-.LFB527
 5160 063a 01       		.uleb128 0x1
 5161 063b 9C       		.byte	0x9c
 5162 063c 71060000 		.4byte	0x671
 5163 0640 1C       		.uleb128 0x1c
 5164 0641 C30A0000 		.4byte	.LASF117
 5165 0645 01       		.byte	0x1
 5166 0646 7806     		.2byte	0x678
 5167 0648 71060000 		.4byte	0x671
 5168 064c 00000000 		.4byte	.LLST0
 5169 0650 1D       		.uleb128 0x1d
 5170 0651 800D0000 		.4byte	.LASF113
 5171 0655 01       		.byte	0x1
 5172 0656 7A06     		.2byte	0x67a
 5173 0658 70030000 		.4byte	0x370
 5174 065c 69000000 		.4byte	.LLST1
 5175 0660 1D       		.uleb128 0x1d
 5176 0661 18100000 		.4byte	.LASF114
 5177 0665 01       		.byte	0x1
 5178 0666 7B06     		.2byte	0x67b
 5179 0668 81060000 		.4byte	0x681
 5180 066c 88000000 		.4byte	.LLST2
 5181 0670 00       		.byte	0
 5182 0671 07       		.uleb128 0x7
 5183 0672 79040000 		.4byte	0x479
 5184 0676 06       		.uleb128 0x6
 5185 0677 04       		.byte	0x4
 5186 0678 7C060000 		.4byte	0x67c
 5187 067c 07       		.uleb128 0x7
 5188 067d DB050000 		.4byte	0x5db
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 191


 5189 0681 07       		.uleb128 0x7
 5190 0682 76060000 		.4byte	0x676
 5191 0686 1E       		.uleb128 0x1e
 5192 0687 5D090000 		.4byte	.LASF115
 5193 068b 01       		.byte	0x1
 5194 068c 3E0E     		.2byte	0xe3e
 5195 068e 00000000 		.4byte	.LFB554
 5196 0692 2C000000 		.4byte	.LFE554-.LFB554
 5197 0696 01       		.uleb128 0x1
 5198 0697 9C       		.byte	0x9c
 5199 0698 AD060000 		.4byte	0x6ad
 5200 069c 1D       		.uleb128 0x1d
 5201 069d 18100000 		.4byte	.LASF114
 5202 06a1 01       		.byte	0x1
 5203 06a2 400E     		.2byte	0xe40
 5204 06a4 AD060000 		.4byte	0x6ad
 5205 06a8 F1000000 		.4byte	.LLST3
 5206 06ac 00       		.byte	0
 5207 06ad 06       		.uleb128 0x6
 5208 06ae 04       		.byte	0x4
 5209 06af DB050000 		.4byte	0x5db
 5210 06b3 1E       		.uleb128 0x1e
 5211 06b4 C8060000 		.4byte	.LASF116
 5212 06b8 01       		.byte	0x1
 5213 06b9 080E     		.2byte	0xe08
 5214 06bb 00000000 		.4byte	.LFB553
 5215 06bf 12000000 		.4byte	.LFE553-.LFB553
 5216 06c3 01       		.uleb128 0x1
 5217 06c4 9C       		.byte	0x9c
 5218 06c5 F3060000 		.4byte	0x6f3
 5219 06c9 1C       		.uleb128 0x1c
 5220 06ca 18100000 		.4byte	.LASF114
 5221 06ce 01       		.byte	0x1
 5222 06cf 080E     		.2byte	0xe08
 5223 06d1 AD060000 		.4byte	0x6ad
 5224 06d5 04010000 		.4byte	.LLST4
 5225 06d9 1F       		.uleb128 0x1f
 5226 06da 0A000000 		.4byte	.LVL12
 5227 06de CD1F0000 		.4byte	0x1fcd
 5228 06e2 20       		.uleb128 0x20
 5229 06e3 10000000 		.4byte	.LVL13
 5230 06e7 CD1F0000 		.4byte	0x1fcd
 5231 06eb 21       		.uleb128 0x21
 5232 06ec 01       		.uleb128 0x1
 5233 06ed 50       		.byte	0x50
 5234 06ee 02       		.uleb128 0x2
 5235 06ef 74       		.byte	0x74
 5236 06f0 00       		.sleb128 0
 5237 06f1 00       		.byte	0
 5238 06f2 00       		.byte	0
 5239 06f3 1E       		.uleb128 0x1e
 5240 06f4 A10B0000 		.4byte	.LASF118
 5241 06f8 01       		.byte	0x1
 5242 06f9 FF02     		.2byte	0x2ff
 5243 06fb 00000000 		.4byte	.LFB518
 5244 06ff 9E000000 		.4byte	.LFE518-.LFB518
 5245 0703 01       		.uleb128 0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 192


 5246 0704 9C       		.byte	0x9c
 5247 0705 03080000 		.4byte	0x803
 5248 0709 1C       		.uleb128 0x1c
 5249 070a 84080000 		.4byte	.LASF119
 5250 070e 01       		.byte	0x1
 5251 070f FF02     		.2byte	0x2ff
 5252 0711 49030000 		.4byte	0x349
 5253 0715 22010000 		.4byte	.LLST5
 5254 0719 1C       		.uleb128 0x1c
 5255 071a 75060000 		.4byte	.LASF120
 5256 071e 01       		.byte	0x1
 5257 071f 0003     		.2byte	0x300
 5258 0721 26050000 		.4byte	0x526
 5259 0725 40010000 		.4byte	.LLST6
 5260 0729 1C       		.uleb128 0x1c
 5261 072a 8A070000 		.4byte	.LASF121
 5262 072e 01       		.byte	0x1
 5263 072f 0103     		.2byte	0x301
 5264 0731 03080000 		.4byte	0x803
 5265 0735 5E010000 		.4byte	.LLST7
 5266 0739 1C       		.uleb128 0x1c
 5267 073a B60B0000 		.4byte	.LASF122
 5268 073e 01       		.byte	0x1
 5269 073f 0203     		.2byte	0x302
 5270 0741 08080000 		.4byte	0x808
 5271 0745 9B010000 		.4byte	.LLST8
 5272 0749 1C       		.uleb128 0x1c
 5273 074a 54000000 		.4byte	.LASF103
 5274 074e 01       		.byte	0x1
 5275 074f 0303     		.2byte	0x303
 5276 0751 7B030000 		.4byte	0x37b
 5277 0755 B9010000 		.4byte	.LLST9
 5278 0759 22       		.uleb128 0x22
 5279 075a D8100000 		.4byte	.LASF123
 5280 075e 01       		.byte	0x1
 5281 075f 0403     		.2byte	0x304
 5282 0761 13080000 		.4byte	0x813
 5283 0765 02       		.uleb128 0x2
 5284 0766 91       		.byte	0x91
 5285 0767 04       		.sleb128 4
 5286 0768 22       		.uleb128 0x22
 5287 0769 7B080000 		.4byte	.LASF124
 5288 076d 01       		.byte	0x1
 5289 076e 0503     		.2byte	0x305
 5290 0770 AD060000 		.4byte	0x6ad
 5291 0774 02       		.uleb128 0x2
 5292 0775 91       		.byte	0x91
 5293 0776 08       		.sleb128 8
 5294 0777 22       		.uleb128 0x22
 5295 0778 890F0000 		.4byte	.LASF125
 5296 077c 01       		.byte	0x1
 5297 077d 0603     		.2byte	0x306
 5298 077f 23080000 		.4byte	0x823
 5299 0783 02       		.uleb128 0x2
 5300 0784 91       		.byte	0x91
 5301 0785 0C       		.sleb128 12
 5302 0786 23       		.uleb128 0x23
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 193


 5303 0787 83100000 		.4byte	.LASF100
 5304 078b 01       		.byte	0x1
 5305 078c 0803     		.2byte	0x308
 5306 078e 2B050000 		.4byte	0x52b
 5307 0792 01       		.uleb128 0x1
 5308 0793 55       		.byte	0x55
 5309 0794 24       		.uleb128 0x24
 5310 0795 7800     		.ascii	"x\000"
 5311 0797 01       		.byte	0x1
 5312 0798 0903     		.2byte	0x309
 5313 079a 7B030000 		.4byte	0x37b
 5314 079e D8010000 		.4byte	.LLST10
 5315 07a2 25       		.uleb128 0x25
 5316 07a3 1C000000 		.4byte	.LVL18
 5317 07a7 D81F0000 		.4byte	0x1fd8
 5318 07ab BE070000 		.4byte	0x7be
 5319 07af 21       		.uleb128 0x21
 5320 07b0 01       		.uleb128 0x1
 5321 07b1 51       		.byte	0x51
 5322 07b2 02       		.uleb128 0x2
 5323 07b3 08       		.byte	0x8
 5324 07b4 A5       		.byte	0xa5
 5325 07b5 21       		.uleb128 0x21
 5326 07b6 01       		.uleb128 0x1
 5327 07b7 52       		.byte	0x52
 5328 07b8 04       		.uleb128 0x4
 5329 07b9 75       		.byte	0x75
 5330 07ba 00       		.sleb128 0
 5331 07bb 32       		.byte	0x32
 5332 07bc 24       		.byte	0x24
 5333 07bd 00       		.byte	0
 5334 07be 25       		.uleb128 0x25
 5335 07bf 5A000000 		.4byte	.LVL25
 5336 07c3 E31F0000 		.4byte	0x1fe3
 5337 07c7 D2070000 		.4byte	0x7d2
 5338 07cb 21       		.uleb128 0x21
 5339 07cc 01       		.uleb128 0x1
 5340 07cd 50       		.byte	0x50
 5341 07ce 02       		.uleb128 0x2
 5342 07cf 74       		.byte	0x74
 5343 07d0 04       		.sleb128 4
 5344 07d1 00       		.byte	0
 5345 07d2 25       		.uleb128 0x25
 5346 07d3 62000000 		.4byte	.LVL26
 5347 07d7 E31F0000 		.4byte	0x1fe3
 5348 07db E6070000 		.4byte	0x7e6
 5349 07df 21       		.uleb128 0x21
 5350 07e0 01       		.uleb128 0x1
 5351 07e1 50       		.byte	0x50
 5352 07e2 02       		.uleb128 0x2
 5353 07e3 74       		.byte	0x74
 5354 07e4 18       		.sleb128 24
 5355 07e5 00       		.byte	0
 5356 07e6 20       		.uleb128 0x20
 5357 07e7 94000000 		.4byte	.LVL31
 5358 07eb EF1F0000 		.4byte	0x1fef
 5359 07ef 21       		.uleb128 0x21
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 194


 5360 07f0 01       		.uleb128 0x1
 5361 07f1 50       		.byte	0x50
 5362 07f2 02       		.uleb128 0x2
 5363 07f3 75       		.byte	0x75
 5364 07f4 00       		.sleb128 0
 5365 07f5 21       		.uleb128 0x21
 5366 07f6 01       		.uleb128 0x1
 5367 07f7 51       		.byte	0x51
 5368 07f8 02       		.uleb128 0x2
 5369 07f9 7A       		.byte	0x7a
 5370 07fa 00       		.sleb128 0
 5371 07fb 21       		.uleb128 0x21
 5372 07fc 01       		.uleb128 0x1
 5373 07fd 52       		.byte	0x52
 5374 07fe 02       		.uleb128 0x2
 5375 07ff 78       		.byte	0x78
 5376 0800 00       		.sleb128 0
 5377 0801 00       		.byte	0
 5378 0802 00       		.byte	0
 5379 0803 07       		.uleb128 0x7
 5380 0804 EB000000 		.4byte	0xeb
 5381 0808 07       		.uleb128 0x7
 5382 0809 B0000000 		.4byte	0xb0
 5383 080d 06       		.uleb128 0x6
 5384 080e 04       		.byte	0x4
 5385 080f 79040000 		.4byte	0x479
 5386 0813 07       		.uleb128 0x7
 5387 0814 0D080000 		.4byte	0x80d
 5388 0818 06       		.uleb128 0x6
 5389 0819 04       		.byte	0x4
 5390 081a 1E080000 		.4byte	0x81e
 5391 081e 07       		.uleb128 0x7
 5392 081f 1B050000 		.4byte	0x51b
 5393 0823 07       		.uleb128 0x7
 5394 0824 18080000 		.4byte	0x818
 5395 0828 1E       		.uleb128 0x1e
 5396 0829 A9100000 		.4byte	.LASF126
 5397 082d 01       		.byte	0x1
 5398 082e 100D     		.2byte	0xd10
 5399 0830 00000000 		.4byte	.LFB551
 5400 0834 58000000 		.4byte	.LFE551-.LFB551
 5401 0838 01       		.uleb128 0x1
 5402 0839 9C       		.byte	0x9c
 5403 083a D1080000 		.4byte	0x8d1
 5404 083e 1D       		.uleb128 0x1d
 5405 083f 54000000 		.4byte	.LASF103
 5406 0843 01       		.byte	0x1
 5407 0844 120D     		.2byte	0xd12
 5408 0846 7B030000 		.4byte	0x37b
 5409 084a 02020000 		.4byte	.LLST11
 5410 084e 25       		.uleb128 0x25
 5411 084f 14000000 		.4byte	.LVL34
 5412 0853 FA1F0000 		.4byte	0x1ffa
 5413 0857 6F080000 		.4byte	0x86f
 5414 085b 21       		.uleb128 0x21
 5415 085c 01       		.uleb128 0x1
 5416 085d 50       		.byte	0x50
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 195


 5417 085e 0F       		.uleb128 0xf
 5418 085f 74       		.byte	0x74
 5419 0860 00       		.sleb128 0
 5420 0861 32       		.byte	0x32
 5421 0862 24       		.byte	0x24
 5422 0863 74       		.byte	0x74
 5423 0864 00       		.sleb128 0
 5424 0865 22       		.byte	0x22
 5425 0866 32       		.byte	0x32
 5426 0867 24       		.byte	0x24
 5427 0868 03       		.byte	0x3
 5428 0869 30000000 		.4byte	.LANCHOR0+48
 5429 086d 22       		.byte	0x22
 5430 086e 00       		.byte	0
 5431 086f 25       		.uleb128 0x25
 5432 0870 26000000 		.4byte	.LVL37
 5433 0874 FA1F0000 		.4byte	0x1ffa
 5434 0878 83080000 		.4byte	0x883
 5435 087c 21       		.uleb128 0x21
 5436 087d 01       		.uleb128 0x1
 5437 087e 50       		.byte	0x50
 5438 087f 02       		.uleb128 0x2
 5439 0880 76       		.byte	0x76
 5440 0881 00       		.sleb128 0
 5441 0882 00       		.byte	0
 5442 0883 25       		.uleb128 0x25
 5443 0884 30000000 		.4byte	.LVL38
 5444 0888 FA1F0000 		.4byte	0x1ffa
 5445 088c 97080000 		.4byte	0x897
 5446 0890 21       		.uleb128 0x21
 5447 0891 01       		.uleb128 0x1
 5448 0892 50       		.byte	0x50
 5449 0893 02       		.uleb128 0x2
 5450 0894 75       		.byte	0x75
 5451 0895 00       		.sleb128 0
 5452 0896 00       		.byte	0
 5453 0897 25       		.uleb128 0x25
 5454 0898 38000000 		.4byte	.LVL39
 5455 089c FA1F0000 		.4byte	0x1ffa
 5456 08a0 AB080000 		.4byte	0x8ab
 5457 08a4 21       		.uleb128 0x21
 5458 08a5 01       		.uleb128 0x1
 5459 08a6 50       		.byte	0x50
 5460 08a7 02       		.uleb128 0x2
 5461 08a8 74       		.byte	0x74
 5462 08a9 14       		.sleb128 20
 5463 08aa 00       		.byte	0
 5464 08ab 25       		.uleb128 0x25
 5465 08ac 40000000 		.4byte	.LVL40
 5466 08b0 FA1F0000 		.4byte	0x1ffa
 5467 08b4 C0080000 		.4byte	0x8c0
 5468 08b8 21       		.uleb128 0x21
 5469 08b9 01       		.uleb128 0x1
 5470 08ba 50       		.byte	0x50
 5471 08bb 03       		.uleb128 0x3
 5472 08bc 74       		.byte	0x74
 5473 08bd E803     		.sleb128 488
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 196


 5474 08bf 00       		.byte	0
 5475 08c0 20       		.uleb128 0x20
 5476 08c1 46000000 		.4byte	.LVL41
 5477 08c5 FA1F0000 		.4byte	0x1ffa
 5478 08c9 21       		.uleb128 0x21
 5479 08ca 01       		.uleb128 0x1
 5480 08cb 50       		.byte	0x50
 5481 08cc 02       		.uleb128 0x2
 5482 08cd 74       		.byte	0x74
 5483 08ce 00       		.sleb128 0
 5484 08cf 00       		.byte	0
 5485 08d0 00       		.byte	0
 5486 08d1 1E       		.uleb128 0x1e
 5487 08d2 53080000 		.4byte	.LASF127
 5488 08d6 01       		.byte	0x1
 5489 08d7 C303     		.2byte	0x3c3
 5490 08d9 00000000 		.4byte	.LFB519
 5491 08dd AC000000 		.4byte	.LFE519-.LFB519
 5492 08e1 01       		.uleb128 0x1
 5493 08e2 9C       		.byte	0x9c
 5494 08e3 27090000 		.4byte	0x927
 5495 08e7 1C       		.uleb128 0x1c
 5496 08e8 7B080000 		.4byte	.LASF124
 5497 08ec 01       		.byte	0x1
 5498 08ed C303     		.2byte	0x3c3
 5499 08ef AD060000 		.4byte	0x6ad
 5500 08f3 21020000 		.4byte	.LLST12
 5501 08f7 1F       		.uleb128 0x1f
 5502 08f8 08000000 		.4byte	.LVL43
 5503 08fc 06200000 		.4byte	0x2006
 5504 0900 1F       		.uleb128 0x1f
 5505 0901 2C000000 		.4byte	.LVL44
 5506 0905 28080000 		.4byte	0x828
 5507 0909 25       		.uleb128 0x25
 5508 090a 7A000000 		.4byte	.LVL45
 5509 090e 11200000 		.4byte	0x2011
 5510 0912 1D090000 		.4byte	0x91d
 5511 0916 21       		.uleb128 0x21
 5512 0917 01       		.uleb128 0x1
 5513 0918 51       		.byte	0x51
 5514 0919 02       		.uleb128 0x2
 5515 091a 74       		.byte	0x74
 5516 091b 04       		.sleb128 4
 5517 091c 00       		.byte	0
 5518 091d 1F       		.uleb128 0x1f
 5519 091e 7E000000 		.4byte	.LVL46
 5520 0922 1D200000 		.4byte	0x201d
 5521 0926 00       		.byte	0
 5522 0927 1E       		.uleb128 0x1e
 5523 0928 920F0000 		.4byte	.LASF128
 5524 092c 01       		.byte	0x1
 5525 092d 5F12     		.2byte	0x125f
 5526 092f 00000000 		.4byte	.LFB564
 5527 0933 68000000 		.4byte	.LFE564-.LFB564
 5528 0937 01       		.uleb128 0x1
 5529 0938 9C       		.byte	0x9c
 5530 0939 B0090000 		.4byte	0x9b0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 197


 5531 093d 1C       		.uleb128 0x1c
 5532 093e 140F0000 		.4byte	.LASF129
 5533 0942 01       		.byte	0x1
 5534 0943 5F12     		.2byte	0x125f
 5535 0945 86030000 		.4byte	0x386
 5536 0949 4D020000 		.4byte	.LLST13
 5537 094d 1C       		.uleb128 0x1c
 5538 094e F30D0000 		.4byte	.LASF130
 5539 0952 01       		.byte	0x1
 5540 0953 5F12     		.2byte	0x125f
 5541 0955 B0090000 		.4byte	0x9b0
 5542 0959 79020000 		.4byte	.LLST14
 5543 095d 1D       		.uleb128 0x1d
 5544 095e F60F0000 		.4byte	.LASF131
 5545 0962 01       		.byte	0x1
 5546 0963 6112     		.2byte	0x1261
 5547 0965 86030000 		.4byte	0x386
 5548 0969 A5020000 		.4byte	.LLST15
 5549 096d 1D       		.uleb128 0x1d
 5550 096e 43060000 		.4byte	.LASF132
 5551 0972 01       		.byte	0x1
 5552 0973 6212     		.2byte	0x1262
 5553 0975 B5090000 		.4byte	0x9b5
 5554 0979 B8020000 		.4byte	.LLST16
 5555 097d 1F       		.uleb128 0x1f
 5556 097e 16000000 		.4byte	.LVL51
 5557 0982 28200000 		.4byte	0x2028
 5558 0986 25       		.uleb128 0x25
 5559 0987 2A000000 		.4byte	.LVL52
 5560 098b 11200000 		.4byte	0x2011
 5561 098f 9D090000 		.4byte	0x99d
 5562 0993 21       		.uleb128 0x21
 5563 0994 01       		.uleb128 0x1
 5564 0995 50       		.byte	0x50
 5565 0996 05       		.uleb128 0x5
 5566 0997 03       		.byte	0x3
 5567 0998 00000000 		.4byte	.LANCHOR0
 5568 099c 00       		.byte	0
 5569 099d 1F       		.uleb128 0x1f
 5570 099e 4A000000 		.4byte	.LVL55
 5571 09a2 34200000 		.4byte	0x2034
 5572 09a6 1F       		.uleb128 0x1f
 5573 09a7 5A000000 		.4byte	.LVL58
 5574 09ab 34200000 		.4byte	0x2034
 5575 09af 00       		.byte	0
 5576 09b0 07       		.uleb128 0x7
 5577 09b1 70030000 		.4byte	0x370
 5578 09b5 07       		.uleb128 0x7
 5579 09b6 86030000 		.4byte	0x386
 5580 09ba 26       		.uleb128 0x26
 5581 09bb 6B0F0000 		.4byte	.LASF135
 5582 09bf 01       		.byte	0x1
 5583 09c0 A402     		.2byte	0x2a4
 5584 09c2 70030000 		.4byte	0x370
 5585 09c6 00000000 		.4byte	.LFB517
 5586 09ca 62000000 		.4byte	.LFE517-.LFB517
 5587 09ce 01       		.uleb128 0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 198


 5588 09cf 9C       		.byte	0x9c
 5589 09d0 FE0A0000 		.4byte	0xafe
 5590 09d4 1C       		.uleb128 0x1c
 5591 09d5 84080000 		.4byte	.LASF119
 5592 09d9 01       		.byte	0x1
 5593 09da A402     		.2byte	0x2a4
 5594 09dc 49030000 		.4byte	0x349
 5595 09e0 CB020000 		.4byte	.LLST17
 5596 09e4 1C       		.uleb128 0x1c
 5597 09e5 75060000 		.4byte	.LASF120
 5598 09e9 01       		.byte	0x1
 5599 09ea A502     		.2byte	0x2a5
 5600 09ec 26050000 		.4byte	0x526
 5601 09f0 E9020000 		.4byte	.LLST18
 5602 09f4 1C       		.uleb128 0x1c
 5603 09f5 4E040000 		.4byte	.LASF133
 5604 09f9 01       		.byte	0x1
 5605 09fa A602     		.2byte	0x2a6
 5606 09fc FE0A0000 		.4byte	0xafe
 5607 0a00 07030000 		.4byte	.LLST19
 5608 0a04 1C       		.uleb128 0x1c
 5609 0a05 B60B0000 		.4byte	.LASF122
 5610 0a09 01       		.byte	0x1
 5611 0a0a A702     		.2byte	0x2a7
 5612 0a0c 08080000 		.4byte	0x808
 5613 0a10 28030000 		.4byte	.LLST20
 5614 0a14 22       		.uleb128 0x22
 5615 0a15 54000000 		.4byte	.LASF103
 5616 0a19 01       		.byte	0x1
 5617 0a1a A802     		.2byte	0x2a8
 5618 0a1c 7B030000 		.4byte	0x37b
 5619 0a20 02       		.uleb128 0x2
 5620 0a21 91       		.byte	0x91
 5621 0a22 00       		.sleb128 0
 5622 0a23 22       		.uleb128 0x22
 5623 0a24 D8100000 		.4byte	.LASF123
 5624 0a28 01       		.byte	0x1
 5625 0a29 A902     		.2byte	0x2a9
 5626 0a2b 13080000 		.4byte	0x813
 5627 0a2f 02       		.uleb128 0x2
 5628 0a30 91       		.byte	0x91
 5629 0a31 04       		.sleb128 4
 5630 0a32 1D       		.uleb128 0x1d
 5631 0a33 7B080000 		.4byte	.LASF124
 5632 0a37 01       		.byte	0x1
 5633 0a38 AB02     		.2byte	0x2ab
 5634 0a3a AD060000 		.4byte	0x6ad
 5635 0a3e 46030000 		.4byte	.LLST21
 5636 0a42 1D       		.uleb128 0x1d
 5637 0a43 800D0000 		.4byte	.LASF113
 5638 0a47 01       		.byte	0x1
 5639 0a48 AC02     		.2byte	0x2ac
 5640 0a4a 70030000 		.4byte	0x370
 5641 0a4e 6F030000 		.4byte	.LLST22
 5642 0a52 27       		.uleb128 0x27
 5643 0a53 0E000000 		.4byte	.LBB18
 5644 0a57 24000000 		.4byte	.LBE18-.LBB18
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 199


 5645 0a5b AA0A0000 		.4byte	0xaaa
 5646 0a5f 1D       		.uleb128 0x1d
 5647 0a60 430C0000 		.4byte	.LASF104
 5648 0a64 01       		.byte	0x1
 5649 0a65 C902     		.2byte	0x2c9
 5650 0a67 2B050000 		.4byte	0x52b
 5651 0a6b 8E030000 		.4byte	.LLST23
 5652 0a6f 25       		.uleb128 0x25
 5653 0a70 14000000 		.4byte	.LVL62
 5654 0a74 40200000 		.4byte	0x2040
 5655 0a78 850A0000 		.4byte	0xa85
 5656 0a7c 21       		.uleb128 0x21
 5657 0a7d 01       		.uleb128 0x1
 5658 0a7e 50       		.byte	0x50
 5659 0a7f 04       		.uleb128 0x4
 5660 0a80 75       		.byte	0x75
 5661 0a81 00       		.sleb128 0
 5662 0a82 32       		.byte	0x32
 5663 0a83 24       		.byte	0x24
 5664 0a84 00       		.byte	0
 5665 0a85 25       		.uleb128 0x25
 5666 0a86 1E000000 		.4byte	.LVL64
 5667 0a8a 40200000 		.4byte	0x2040
 5668 0a8e 990A0000 		.4byte	0xa99
 5669 0a92 21       		.uleb128 0x21
 5670 0a93 01       		.uleb128 0x1
 5671 0a94 50       		.byte	0x50
 5672 0a95 02       		.uleb128 0x2
 5673 0a96 08       		.byte	0x8
 5674 0a97 60       		.byte	0x60
 5675 0a98 00       		.byte	0
 5676 0a99 20       		.uleb128 0x20
 5677 0a9a 2E000000 		.4byte	.LVL66
 5678 0a9e CD1F0000 		.4byte	0x1fcd
 5679 0aa2 21       		.uleb128 0x21
 5680 0aa3 01       		.uleb128 0x1
 5681 0aa4 50       		.byte	0x50
 5682 0aa5 02       		.uleb128 0x2
 5683 0aa6 79       		.byte	0x79
 5684 0aa7 00       		.sleb128 0
 5685 0aa8 00       		.byte	0
 5686 0aa9 00       		.byte	0
 5687 0aaa 25       		.uleb128 0x25
 5688 0aab 4E000000 		.4byte	.LVL69
 5689 0aaf F3060000 		.4byte	0x6f3
 5690 0ab3 ED0A0000 		.4byte	0xaed
 5691 0ab7 21       		.uleb128 0x21
 5692 0ab8 01       		.uleb128 0x1
 5693 0ab9 50       		.byte	0x50
 5694 0aba 02       		.uleb128 0x2
 5695 0abb 76       		.byte	0x76
 5696 0abc 00       		.sleb128 0
 5697 0abd 21       		.uleb128 0x21
 5698 0abe 01       		.uleb128 0x1
 5699 0abf 51       		.byte	0x51
 5700 0ac0 02       		.uleb128 0x2
 5701 0ac1 77       		.byte	0x77
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 200


 5702 0ac2 00       		.sleb128 0
 5703 0ac3 21       		.uleb128 0x21
 5704 0ac4 01       		.uleb128 0x1
 5705 0ac5 52       		.byte	0x52
 5706 0ac6 02       		.uleb128 0x2
 5707 0ac7 75       		.byte	0x75
 5708 0ac8 00       		.sleb128 0
 5709 0ac9 21       		.uleb128 0x21
 5710 0aca 01       		.uleb128 0x1
 5711 0acb 53       		.byte	0x53
 5712 0acc 02       		.uleb128 0x2
 5713 0acd 78       		.byte	0x78
 5714 0ace 00       		.sleb128 0
 5715 0acf 21       		.uleb128 0x21
 5716 0ad0 02       		.uleb128 0x2
 5717 0ad1 7D       		.byte	0x7d
 5718 0ad2 00       		.sleb128 0
 5719 0ad3 03       		.uleb128 0x3
 5720 0ad4 91       		.byte	0x91
 5721 0ad5 00       		.sleb128 0
 5722 0ad6 06       		.byte	0x6
 5723 0ad7 21       		.uleb128 0x21
 5724 0ad8 02       		.uleb128 0x2
 5725 0ad9 7D       		.byte	0x7d
 5726 0ada 04       		.sleb128 4
 5727 0adb 03       		.uleb128 0x3
 5728 0adc 91       		.byte	0x91
 5729 0add 04       		.sleb128 4
 5730 0ade 06       		.byte	0x6
 5731 0adf 21       		.uleb128 0x21
 5732 0ae0 02       		.uleb128 0x2
 5733 0ae1 7D       		.byte	0x7d
 5734 0ae2 08       		.sleb128 8
 5735 0ae3 02       		.uleb128 0x2
 5736 0ae4 74       		.byte	0x74
 5737 0ae5 00       		.sleb128 0
 5738 0ae6 21       		.uleb128 0x21
 5739 0ae7 02       		.uleb128 0x2
 5740 0ae8 7D       		.byte	0x7d
 5741 0ae9 0C       		.sleb128 12
 5742 0aea 01       		.uleb128 0x1
 5743 0aeb 30       		.byte	0x30
 5744 0aec 00       		.byte	0
 5745 0aed 20       		.uleb128 0x20
 5746 0aee 54000000 		.4byte	.LVL70
 5747 0af2 D1080000 		.4byte	0x8d1
 5748 0af6 21       		.uleb128 0x21
 5749 0af7 01       		.uleb128 0x1
 5750 0af8 50       		.byte	0x50
 5751 0af9 02       		.uleb128 0x2
 5752 0afa 74       		.byte	0x74
 5753 0afb 00       		.sleb128 0
 5754 0afc 00       		.byte	0
 5755 0afd 00       		.byte	0
 5756 0afe 07       		.uleb128 0x7
 5757 0aff D5000000 		.4byte	0xd5
 5758 0b03 28       		.uleb128 0x28
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 201


 5759 0b04 F60A0000 		.4byte	.LASF140
 5760 0b08 01       		.byte	0x1
 5761 0b09 1804     		.2byte	0x418
 5762 0b0b 00000000 		.4byte	.LFB520
 5763 0b0f A4000000 		.4byte	.LFE520-.LFB520
 5764 0b13 01       		.uleb128 0x1
 5765 0b14 9C       		.byte	0x9c
 5766 0b15 AC0B0000 		.4byte	0xbac
 5767 0b19 1C       		.uleb128 0x1c
 5768 0b1a 4B0C0000 		.4byte	.LASF134
 5769 0b1e 01       		.byte	0x1
 5770 0b1f 1804     		.2byte	0x418
 5771 0b21 79040000 		.4byte	0x479
 5772 0b25 B7030000 		.4byte	.LLST24
 5773 0b29 1D       		.uleb128 0x1d
 5774 0b2a 18100000 		.4byte	.LASF114
 5775 0b2e 01       		.byte	0x1
 5776 0b2f 1A04     		.2byte	0x41a
 5777 0b31 AD060000 		.4byte	0x6ad
 5778 0b35 D5030000 		.4byte	.LLST25
 5779 0b39 1F       		.uleb128 0x1f
 5780 0b3a 08000000 		.4byte	.LVL74
 5781 0b3e 06200000 		.4byte	0x2006
 5782 0b42 25       		.uleb128 0x25
 5783 0b43 18000000 		.4byte	.LVL76
 5784 0b47 28200000 		.4byte	0x2028
 5785 0b4b 560B0000 		.4byte	0xb56
 5786 0b4f 21       		.uleb128 0x21
 5787 0b50 01       		.uleb128 0x1
 5788 0b51 50       		.byte	0x50
 5789 0b52 02       		.uleb128 0x2
 5790 0b53 76       		.byte	0x76
 5791 0b54 00       		.sleb128 0
 5792 0b55 00       		.byte	0
 5793 0b56 25       		.uleb128 0x25
 5794 0b57 24000000 		.4byte	.LVL77
 5795 0b5b 28200000 		.4byte	0x2028
 5796 0b5f 6A0B0000 		.4byte	0xb6a
 5797 0b63 21       		.uleb128 0x21
 5798 0b64 01       		.uleb128 0x1
 5799 0b65 50       		.byte	0x50
 5800 0b66 02       		.uleb128 0x2
 5801 0b67 74       		.byte	0x74
 5802 0b68 18       		.sleb128 24
 5803 0b69 00       		.byte	0
 5804 0b6a 25       		.uleb128 0x25
 5805 0b6b 44000000 		.4byte	.LVL78
 5806 0b6f 11200000 		.4byte	0x2011
 5807 0b73 850B0000 		.4byte	0xb85
 5808 0b77 21       		.uleb128 0x21
 5809 0b78 01       		.uleb128 0x1
 5810 0b79 50       		.byte	0x50
 5811 0b7a 03       		.uleb128 0x3
 5812 0b7b 75       		.byte	0x75
 5813 0b7c E803     		.sleb128 488
 5814 0b7e 21       		.uleb128 0x21
 5815 0b7f 01       		.uleb128 0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 202


 5816 0b80 51       		.byte	0x51
 5817 0b81 02       		.uleb128 0x2
 5818 0b82 76       		.byte	0x76
 5819 0b83 00       		.sleb128 0
 5820 0b84 00       		.byte	0
 5821 0b85 25       		.uleb128 0x25
 5822 0b86 62000000 		.4byte	.LVL79
 5823 0b8a B3060000 		.4byte	0x6b3
 5824 0b8e 990B0000 		.4byte	0xb99
 5825 0b92 21       		.uleb128 0x21
 5826 0b93 01       		.uleb128 0x1
 5827 0b94 50       		.byte	0x50
 5828 0b95 02       		.uleb128 0x2
 5829 0b96 74       		.byte	0x74
 5830 0b97 00       		.sleb128 0
 5831 0b98 00       		.byte	0
 5832 0b99 1F       		.uleb128 0x1f
 5833 0b9a 66000000 		.4byte	.LVL80
 5834 0b9e 86060000 		.4byte	0x686
 5835 0ba2 1F       		.uleb128 0x1f
 5836 0ba3 6A000000 		.4byte	.LVL81
 5837 0ba7 1D200000 		.4byte	0x201d
 5838 0bab 00       		.byte	0
 5839 0bac 26       		.uleb128 0x26
 5840 0bad 31060000 		.4byte	.LASF136
 5841 0bb1 01       		.byte	0x1
 5842 0bb2 3C05     		.2byte	0x53c
 5843 0bb4 7B030000 		.4byte	0x37b
 5844 0bb8 00000000 		.4byte	.LFB523
 5845 0bbc 20000000 		.4byte	.LFE523-.LFB523
 5846 0bc0 01       		.uleb128 0x1
 5847 0bc1 9C       		.byte	0x9c
 5848 0bc2 090C0000 		.4byte	0xc09
 5849 0bc6 1C       		.uleb128 0x1c
 5850 0bc7 C30A0000 		.4byte	.LASF117
 5851 0bcb 01       		.byte	0x1
 5852 0bcc 3C05     		.2byte	0x53c
 5853 0bce 79040000 		.4byte	0x479
 5854 0bd2 E8030000 		.4byte	.LLST26
 5855 0bd6 1D       		.uleb128 0x1d
 5856 0bd7 18100000 		.4byte	.LASF114
 5857 0bdb 01       		.byte	0x1
 5858 0bdc 3E05     		.2byte	0x53e
 5859 0bde AD060000 		.4byte	0x6ad
 5860 0be2 06040000 		.4byte	.LLST27
 5861 0be6 1D       		.uleb128 0x1d
 5862 0be7 16090000 		.4byte	.LASF137
 5863 0beb 01       		.byte	0x1
 5864 0bec 3F05     		.2byte	0x53f
 5865 0bee 7B030000 		.4byte	0x37b
 5866 0bf2 19040000 		.4byte	.LLST28
 5867 0bf6 1F       		.uleb128 0x1f
 5868 0bf7 08000000 		.4byte	.LVL84
 5869 0bfb 06200000 		.4byte	0x2006
 5870 0bff 1F       		.uleb128 0x1f
 5871 0c00 16000000 		.4byte	.LVL87
 5872 0c04 1D200000 		.4byte	0x201d
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 203


 5873 0c08 00       		.byte	0
 5874 0c09 26       		.uleb128 0x26
 5875 0c0a DB090000 		.4byte	.LASF138
 5876 0c0e 01       		.byte	0x1
 5877 0c0f 5205     		.2byte	0x552
 5878 0c11 7B030000 		.4byte	0x37b
 5879 0c15 00000000 		.4byte	.LFB524
 5880 0c19 30000000 		.4byte	.LFE524-.LFB524
 5881 0c1d 01       		.uleb128 0x1
 5882 0c1e 9C       		.byte	0x9c
 5883 0c1f AE0C0000 		.4byte	0xcae
 5884 0c23 1C       		.uleb128 0x1c
 5885 0c24 C30A0000 		.4byte	.LASF117
 5886 0c28 01       		.byte	0x1
 5887 0c29 5205     		.2byte	0x552
 5888 0c2b 79040000 		.4byte	0x479
 5889 0c2f 37040000 		.4byte	.LLST29
 5890 0c33 1D       		.uleb128 0x1d
 5891 0c34 18100000 		.4byte	.LASF114
 5892 0c38 01       		.byte	0x1
 5893 0c39 5405     		.2byte	0x554
 5894 0c3b AD060000 		.4byte	0x6ad
 5895 0c3f 55040000 		.4byte	.LLST30
 5896 0c43 23       		.uleb128 0x23
 5897 0c44 16090000 		.4byte	.LASF137
 5898 0c48 01       		.byte	0x1
 5899 0c49 5505     		.2byte	0x555
 5900 0c4b 7B030000 		.4byte	0x37b
 5901 0c4f 01       		.uleb128 0x1
 5902 0c50 50       		.byte	0x50
 5903 0c51 29       		.uleb128 0x29
 5904 0c52 C0040000 		.4byte	.LASF139
 5905 0c56 01       		.byte	0x1
 5906 0c57 5505     		.2byte	0x555
 5907 0c59 7B030000 		.4byte	0x37b
 5908 0c5d 2A       		.uleb128 0x2a
 5909 0c5e E7050000 		.4byte	0x5e7
 5910 0c62 08000000 		.4byte	.LBB19
 5911 0c66 14000000 		.4byte	.LBE19-.LBB19
 5912 0c6a 01       		.byte	0x1
 5913 0c6b 6905     		.2byte	0x569
 5914 0c6d 860C0000 		.4byte	0xc86
 5915 0c71 2B       		.uleb128 0x2b
 5916 0c72 08000000 		.4byte	.LBB20
 5917 0c76 14000000 		.4byte	.LBE20-.LBB20
 5918 0c7a 2C       		.uleb128 0x2c
 5919 0c7b F7050000 		.4byte	0x5f7
 5920 0c7f 2C       		.uleb128 0x2c
 5921 0c80 02060000 		.4byte	0x602
 5922 0c84 00       		.byte	0
 5923 0c85 00       		.byte	0
 5924 0c86 2A       		.uleb128 0x2a
 5925 0c87 0E060000 		.4byte	0x60e
 5926 0c8b 26000000 		.4byte	.LBB21
 5927 0c8f 04000000 		.4byte	.LBE21-.LBB21
 5928 0c93 01       		.byte	0x1
 5929 0c94 7005     		.2byte	0x570
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 204


 5930 0c96 A40C0000 		.4byte	0xca4
 5931 0c9a 2D       		.uleb128 0x2d
 5932 0c9b 1A060000 		.4byte	0x61a
 5933 0c9f 68040000 		.4byte	.LLST31
 5934 0ca3 00       		.byte	0
 5935 0ca4 1F       		.uleb128 0x1f
 5936 0ca5 08000000 		.4byte	.LVL90
 5937 0ca9 4B200000 		.4byte	0x204b
 5938 0cad 00       		.byte	0
 5939 0cae 28       		.uleb128 0x28
 5940 0caf 7F0A0000 		.4byte	.LASF141
 5941 0cb3 01       		.byte	0x1
 5942 0cb4 7A05     		.2byte	0x57a
 5943 0cb6 00000000 		.4byte	.LFB525
 5944 0cba D0000000 		.4byte	.LFE525-.LFB525
 5945 0cbe 01       		.uleb128 0x1
 5946 0cbf 9C       		.byte	0x9c
 5947 0cc0 5F0D0000 		.4byte	0xd5f
 5948 0cc4 1C       		.uleb128 0x1c
 5949 0cc5 C30A0000 		.4byte	.LASF117
 5950 0cc9 01       		.byte	0x1
 5951 0cca 7A05     		.2byte	0x57a
 5952 0ccc 79040000 		.4byte	0x479
 5953 0cd0 7B040000 		.4byte	.LLST32
 5954 0cd4 1C       		.uleb128 0x1c
 5955 0cd5 89090000 		.4byte	.LASF142
 5956 0cd9 01       		.byte	0x1
 5957 0cda 7A05     		.2byte	0x57a
 5958 0cdc 7B030000 		.4byte	0x37b
 5959 0ce0 99040000 		.4byte	.LLST33
 5960 0ce4 1D       		.uleb128 0x1d
 5961 0ce5 18100000 		.4byte	.LASF114
 5962 0ce9 01       		.byte	0x1
 5963 0cea 7C05     		.2byte	0x57c
 5964 0cec AD060000 		.4byte	0x6ad
 5965 0cf0 C3040000 		.4byte	.LLST34
 5966 0cf4 1D       		.uleb128 0x1d
 5967 0cf5 30110000 		.4byte	.LASF143
 5968 0cf9 01       		.byte	0x1
 5969 0cfa 7D05     		.2byte	0x57d
 5970 0cfc 7B030000 		.4byte	0x37b
 5971 0d00 D6040000 		.4byte	.LLST35
 5972 0d04 1D       		.uleb128 0x1d
 5973 0d05 F80E0000 		.4byte	.LASF144
 5974 0d09 01       		.byte	0x1
 5975 0d0a 7D05     		.2byte	0x57d
 5976 0d0c 7B030000 		.4byte	0x37b
 5977 0d10 E9040000 		.4byte	.LLST36
 5978 0d14 1D       		.uleb128 0x1d
 5979 0d15 05040000 		.4byte	.LASF145
 5980 0d19 01       		.byte	0x1
 5981 0d1a 7E05     		.2byte	0x57e
 5982 0d1c 70030000 		.4byte	0x370
 5983 0d20 FC040000 		.4byte	.LLST37
 5984 0d24 1F       		.uleb128 0x1f
 5985 0d25 18000000 		.4byte	.LVL97
 5986 0d29 06200000 		.4byte	0x2006
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 205


 5987 0d2d 25       		.uleb128 0x25
 5988 0d2e 88000000 		.4byte	.LVL103
 5989 0d32 28200000 		.4byte	0x2028
 5990 0d36 410D0000 		.4byte	0xd41
 5991 0d3a 21       		.uleb128 0x21
 5992 0d3b 01       		.uleb128 0x1
 5993 0d3c 50       		.byte	0x50
 5994 0d3d 02       		.uleb128 0x2
 5995 0d3e 75       		.byte	0x75
 5996 0d3f 00       		.sleb128 0
 5997 0d40 00       		.byte	0
 5998 0d41 25       		.uleb128 0x25
 5999 0d42 AA000000 		.4byte	.LVL104
 6000 0d46 11200000 		.4byte	0x2011
 6001 0d4a 550D0000 		.4byte	0xd55
 6002 0d4e 21       		.uleb128 0x21
 6003 0d4f 01       		.uleb128 0x1
 6004 0d50 51       		.byte	0x51
 6005 0d51 02       		.uleb128 0x2
 6006 0d52 75       		.byte	0x75
 6007 0d53 00       		.sleb128 0
 6008 0d54 00       		.byte	0
 6009 0d55 1F       		.uleb128 0x1f
 6010 0d56 C0000000 		.4byte	.LVL106
 6011 0d5a 1D200000 		.4byte	0x201d
 6012 0d5e 00       		.byte	0
 6013 0d5f 28       		.uleb128 0x28
 6014 0d60 90100000 		.4byte	.LASF146
 6015 0d64 01       		.byte	0x1
 6016 0d65 A606     		.2byte	0x6a6
 6017 0d67 00000000 		.4byte	.LFB528
 6018 0d6b 7C000000 		.4byte	.LFE528-.LFB528
 6019 0d6f 01       		.uleb128 0x1
 6020 0d70 9C       		.byte	0x9c
 6021 0d71 E40D0000 		.4byte	0xde4
 6022 0d75 1C       		.uleb128 0x1c
 6023 0d76 99030000 		.4byte	.LASF147
 6024 0d7a 01       		.byte	0x1
 6025 0d7b A606     		.2byte	0x6a6
 6026 0d7d 79040000 		.4byte	0x479
 6027 0d81 1B050000 		.4byte	.LLST38
 6028 0d85 1D       		.uleb128 0x1d
 6029 0d86 18100000 		.4byte	.LASF114
 6030 0d8a 01       		.byte	0x1
 6031 0d8b A806     		.2byte	0x6a8
 6032 0d8d E40D0000 		.4byte	0xde4
 6033 0d91 47050000 		.4byte	.LLST39
 6034 0d95 1F       		.uleb128 0x1f
 6035 0d96 1A000000 		.4byte	.LVL109
 6036 0d9a 06200000 		.4byte	0x2006
 6037 0d9e 25       		.uleb128 0x25
 6038 0d9f 20000000 		.4byte	.LVL110
 6039 0da3 26060000 		.4byte	0x626
 6040 0da7 B20D0000 		.4byte	0xdb2
 6041 0dab 21       		.uleb128 0x21
 6042 0dac 01       		.uleb128 0x1
 6043 0dad 50       		.byte	0x50
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 206


 6044 0dae 02       		.uleb128 0x2
 6045 0daf 74       		.byte	0x74
 6046 0db0 00       		.sleb128 0
 6047 0db1 00       		.byte	0
 6048 0db2 25       		.uleb128 0x25
 6049 0db3 2A000000 		.4byte	.LVL111
 6050 0db7 28200000 		.4byte	0x2028
 6051 0dbb C60D0000 		.4byte	0xdc6
 6052 0dbf 21       		.uleb128 0x21
 6053 0dc0 01       		.uleb128 0x1
 6054 0dc1 50       		.byte	0x50
 6055 0dc2 02       		.uleb128 0x2
 6056 0dc3 76       		.byte	0x76
 6057 0dc4 00       		.sleb128 0
 6058 0dc5 00       		.byte	0
 6059 0dc6 25       		.uleb128 0x25
 6060 0dc7 50000000 		.4byte	.LVL112
 6061 0dcb 11200000 		.4byte	0x2011
 6062 0dcf DA0D0000 		.4byte	0xdda
 6063 0dd3 21       		.uleb128 0x21
 6064 0dd4 01       		.uleb128 0x1
 6065 0dd5 51       		.byte	0x51
 6066 0dd6 02       		.uleb128 0x2
 6067 0dd7 76       		.byte	0x76
 6068 0dd8 00       		.sleb128 0
 6069 0dd9 00       		.byte	0
 6070 0dda 1F       		.uleb128 0x1f
 6071 0ddb 70000000 		.4byte	.LVL113
 6072 0ddf 1D200000 		.4byte	0x201d
 6073 0de3 00       		.byte	0
 6074 0de4 07       		.uleb128 0x7
 6075 0de5 AD060000 		.4byte	0x6ad
 6076 0de9 26       		.uleb128 0x26
 6077 0dea 340D0000 		.4byte	.LASF148
 6078 0dee 01       		.byte	0x1
 6079 0def DC06     		.2byte	0x6dc
 6080 0df1 70030000 		.4byte	0x370
 6081 0df5 00000000 		.4byte	.LFB529
 6082 0df9 98000000 		.4byte	.LFE529-.LFB529
 6083 0dfd 01       		.uleb128 0x1
 6084 0dfe 9C       		.byte	0x9c
 6085 0dff E50E0000 		.4byte	0xee5
 6086 0e03 1C       		.uleb128 0x1c
 6087 0e04 99030000 		.4byte	.LASF147
 6088 0e08 01       		.byte	0x1
 6089 0e09 DC06     		.2byte	0x6dc
 6090 0e0b 79040000 		.4byte	0x479
 6091 0e0f 73050000 		.4byte	.LLST40
 6092 0e13 1D       		.uleb128 0x1d
 6093 0e14 05040000 		.4byte	.LASF145
 6094 0e18 01       		.byte	0x1
 6095 0e19 DE06     		.2byte	0x6de
 6096 0e1b 70030000 		.4byte	0x370
 6097 0e1f 9F050000 		.4byte	.LLST41
 6098 0e23 1D       		.uleb128 0x1d
 6099 0e24 18100000 		.4byte	.LASF114
 6100 0e28 01       		.byte	0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 207


 6101 0e29 DF06     		.2byte	0x6df
 6102 0e2b E40D0000 		.4byte	0xde4
 6103 0e2f E0050000 		.4byte	.LLST42
 6104 0e33 29       		.uleb128 0x29
 6105 0e34 06110000 		.4byte	.LASF149
 6106 0e38 01       		.byte	0x1
 6107 0e39 E006     		.2byte	0x6e0
 6108 0e3b 7B030000 		.4byte	0x37b
 6109 0e3f 2A       		.uleb128 0x2a
 6110 0e40 E7050000 		.4byte	0x5e7
 6111 0e44 0E000000 		.4byte	.LBB23
 6112 0e48 14000000 		.4byte	.LBE23-.LBB23
 6113 0e4c 01       		.byte	0x1
 6114 0e4d F606     		.2byte	0x6f6
 6115 0e4f 680E0000 		.4byte	0xe68
 6116 0e53 2B       		.uleb128 0x2b
 6117 0e54 0E000000 		.4byte	.LBB24
 6118 0e58 14000000 		.4byte	.LBE24-.LBB24
 6119 0e5c 2C       		.uleb128 0x2c
 6120 0e5d F7050000 		.4byte	0x5f7
 6121 0e61 2C       		.uleb128 0x2c
 6122 0e62 02060000 		.4byte	0x602
 6123 0e66 00       		.byte	0
 6124 0e67 00       		.byte	0
 6125 0e68 2A       		.uleb128 0x2a
 6126 0e69 0E060000 		.4byte	0x60e
 6127 0e6d 82000000 		.4byte	.LBB25
 6128 0e71 04000000 		.4byte	.LBE25-.LBB25
 6129 0e75 01       		.byte	0x1
 6130 0e76 1A07     		.2byte	0x71a
 6131 0e78 860E0000 		.4byte	0xe86
 6132 0e7c 2D       		.uleb128 0x2d
 6133 0e7d 1A060000 		.4byte	0x61a
 6134 0e81 0C060000 		.4byte	.LLST43
 6135 0e85 00       		.byte	0
 6136 0e86 1F       		.uleb128 0x1f
 6137 0e87 0E000000 		.4byte	.LVL116
 6138 0e8b 4B200000 		.4byte	0x204b
 6139 0e8f 25       		.uleb128 0x25
 6140 0e90 28000000 		.4byte	.LVL117
 6141 0e94 26060000 		.4byte	0x626
 6142 0e98 A30E0000 		.4byte	0xea3
 6143 0e9c 21       		.uleb128 0x21
 6144 0e9d 01       		.uleb128 0x1
 6145 0e9e 50       		.byte	0x50
 6146 0e9f 02       		.uleb128 0x2
 6147 0ea0 74       		.byte	0x74
 6148 0ea1 00       		.sleb128 0
 6149 0ea2 00       		.byte	0
 6150 0ea3 25       		.uleb128 0x25
 6151 0ea4 4E000000 		.4byte	.LVL119
 6152 0ea8 28200000 		.4byte	0x2028
 6153 0eac B70E0000 		.4byte	0xeb7
 6154 0eb0 21       		.uleb128 0x21
 6155 0eb1 01       		.uleb128 0x1
 6156 0eb2 50       		.byte	0x50
 6157 0eb3 02       		.uleb128 0x2
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 208


 6158 0eb4 76       		.byte	0x76
 6159 0eb5 00       		.sleb128 0
 6160 0eb6 00       		.byte	0
 6161 0eb7 25       		.uleb128 0x25
 6162 0eb8 70000000 		.4byte	.LVL120
 6163 0ebc 11200000 		.4byte	0x2011
 6164 0ec0 CB0E0000 		.4byte	0xecb
 6165 0ec4 21       		.uleb128 0x21
 6166 0ec5 01       		.uleb128 0x1
 6167 0ec6 51       		.byte	0x51
 6168 0ec7 02       		.uleb128 0x2
 6169 0ec8 76       		.byte	0x76
 6170 0ec9 00       		.sleb128 0
 6171 0eca 00       		.byte	0
 6172 0ecb 20       		.uleb128 0x20
 6173 0ecc 7C000000 		.4byte	.LVL122
 6174 0ed0 11200000 		.4byte	0x2011
 6175 0ed4 21       		.uleb128 0x21
 6176 0ed5 01       		.uleb128 0x1
 6177 0ed6 50       		.byte	0x50
 6178 0ed7 05       		.uleb128 0x5
 6179 0ed8 03       		.byte	0x3
 6180 0ed9 14000000 		.4byte	.LANCHOR0+20
 6181 0edd 21       		.uleb128 0x21
 6182 0ede 01       		.uleb128 0x1
 6183 0edf 51       		.byte	0x51
 6184 0ee0 02       		.uleb128 0x2
 6185 0ee1 74       		.byte	0x74
 6186 0ee2 18       		.sleb128 24
 6187 0ee3 00       		.byte	0
 6188 0ee4 00       		.byte	0
 6189 0ee5 28       		.uleb128 0x28
 6190 0ee6 DF0D0000 		.4byte	.LASF150
 6191 0eea 01       		.byte	0x1
 6192 0eeb 2207     		.2byte	0x722
 6193 0eed 00000000 		.4byte	.LFB530
 6194 0ef1 60000000 		.4byte	.LFE530-.LFB530
 6195 0ef5 01       		.uleb128 0x1
 6196 0ef6 9C       		.byte	0x9c
 6197 0ef7 590F0000 		.4byte	0xf59
 6198 0efb 1D       		.uleb128 0x1d
 6199 0efc 800D0000 		.4byte	.LASF113
 6200 0f00 01       		.byte	0x1
 6201 0f01 2407     		.2byte	0x724
 6202 0f03 70030000 		.4byte	0x370
 6203 0f07 1F060000 		.4byte	.LLST44
 6204 0f0b 25       		.uleb128 0x25
 6205 0f0c 16000000 		.4byte	.LVL126
 6206 0f10 BA090000 		.4byte	0x9ba
 6207 0f14 460F0000 		.4byte	0xf46
 6208 0f18 21       		.uleb128 0x21
 6209 0f19 01       		.uleb128 0x1
 6210 0f1a 50       		.byte	0x50
 6211 0f1b 05       		.uleb128 0x5
 6212 0f1c 03       		.byte	0x3
 6213 0f1d 00000000 		.4byte	prvIdleTask
 6214 0f21 21       		.uleb128 0x21
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 209


 6215 0f22 01       		.uleb128 0x1
 6216 0f23 51       		.byte	0x51
 6217 0f24 05       		.uleb128 0x5
 6218 0f25 03       		.byte	0x3
 6219 0f26 00000000 		.4byte	.LC0
 6220 0f2a 21       		.uleb128 0x21
 6221 0f2b 01       		.uleb128 0x1
 6222 0f2c 52       		.byte	0x52
 6223 0f2d 02       		.uleb128 0x2
 6224 0f2e 08       		.byte	0x8
 6225 0f2f 80       		.byte	0x80
 6226 0f30 21       		.uleb128 0x21
 6227 0f31 01       		.uleb128 0x1
 6228 0f32 53       		.byte	0x53
 6229 0f33 01       		.uleb128 0x1
 6230 0f34 30       		.byte	0x30
 6231 0f35 21       		.uleb128 0x21
 6232 0f36 02       		.uleb128 0x2
 6233 0f37 7D       		.byte	0x7d
 6234 0f38 00       		.sleb128 0
 6235 0f39 01       		.uleb128 0x1
 6236 0f3a 30       		.byte	0x30
 6237 0f3b 21       		.uleb128 0x21
 6238 0f3c 02       		.uleb128 0x2
 6239 0f3d 7D       		.byte	0x7d
 6240 0f3e 04       		.sleb128 4
 6241 0f3f 05       		.uleb128 0x5
 6242 0f40 03       		.byte	0x3
 6243 0f41 20020000 		.4byte	.LANCHOR0+544
 6244 0f45 00       		.byte	0
 6245 0f46 1F       		.uleb128 0x1f
 6246 0f47 1E000000 		.4byte	.LVL127
 6247 0f4b 56200000 		.4byte	0x2056
 6248 0f4f 1F       		.uleb128 0x1f
 6249 0f50 3C000000 		.4byte	.LVL128
 6250 0f54 62200000 		.4byte	0x2062
 6251 0f58 00       		.byte	0
 6252 0f59 28       		.uleb128 0x28
 6253 0f5a 1F060000 		.4byte	.LASF151
 6254 0f5e 01       		.byte	0x1
 6255 0f5f 8D07     		.2byte	0x78d
 6256 0f61 00000000 		.4byte	.LFB531
 6257 0f65 18000000 		.4byte	.LFE531-.LFB531
 6258 0f69 01       		.uleb128 0x1
 6259 0f6a 9C       		.byte	0x9c
 6260 0f6b 790F0000 		.4byte	0xf79
 6261 0f6f 1F       		.uleb128 0x1f
 6262 0f70 10000000 		.4byte	.LVL131
 6263 0f74 6D200000 		.4byte	0x206d
 6264 0f78 00       		.byte	0
 6265 0f79 2E       		.uleb128 0x2e
 6266 0f7a 6A050000 		.4byte	.LASF193
 6267 0f7e 01       		.byte	0x1
 6268 0f7f 9807     		.2byte	0x798
 6269 0f81 00000000 		.4byte	.LFB532
 6270 0f85 14000000 		.4byte	.LFE532-.LFB532
 6271 0f89 01       		.uleb128 0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 210


 6272 0f8a 9C       		.byte	0x9c
 6273 0f8b 26       		.uleb128 0x26
 6274 0f8c 0D0A0000 		.4byte	.LASF152
 6275 0f90 01       		.byte	0x1
 6276 0f91 4F08     		.2byte	0x84f
 6277 0f93 86030000 		.4byte	0x386
 6278 0f97 00000000 		.4byte	.LFB534
 6279 0f9b 0C000000 		.4byte	.LFE534-.LFB534
 6280 0f9f 01       		.uleb128 0x1
 6281 0fa0 9C       		.byte	0x9c
 6282 0fa1 B40F0000 		.4byte	0xfb4
 6283 0fa5 23       		.uleb128 0x23
 6284 0fa6 D80D0000 		.4byte	.LASF153
 6285 0faa 01       		.byte	0x1
 6286 0fab 5108     		.2byte	0x851
 6287 0fad 86030000 		.4byte	0x386
 6288 0fb1 01       		.uleb128 0x1
 6289 0fb2 50       		.byte	0x50
 6290 0fb3 00       		.byte	0
 6291 0fb4 26       		.uleb128 0x26
 6292 0fb5 A7040000 		.4byte	.LASF154
 6293 0fb9 01       		.byte	0x1
 6294 0fba 5E08     		.2byte	0x85e
 6295 0fbc 86030000 		.4byte	0x386
 6296 0fc0 00000000 		.4byte	.LFB535
 6297 0fc4 14000000 		.4byte	.LFE535-.LFB535
 6298 0fc8 01       		.uleb128 0x1
 6299 0fc9 9C       		.byte	0x9c
 6300 0fca F30F0000 		.4byte	0xff3
 6301 0fce 23       		.uleb128 0x23
 6302 0fcf 800D0000 		.4byte	.LASF113
 6303 0fd3 01       		.byte	0x1
 6304 0fd4 6008     		.2byte	0x860
 6305 0fd6 86030000 		.4byte	0x386
 6306 0fda 01       		.uleb128 0x1
 6307 0fdb 50       		.byte	0x50
 6308 0fdc 2F       		.uleb128 0x2f
 6309 0fdd 06110000 		.4byte	.LASF149
 6310 0fe1 01       		.byte	0x1
 6311 0fe2 6108     		.2byte	0x861
 6312 0fe4 7B030000 		.4byte	0x37b
 6313 0fe8 00       		.byte	0
 6314 0fe9 1F       		.uleb128 0x1f
 6315 0fea 06000000 		.4byte	.LVL133
 6316 0fee 4B200000 		.4byte	0x204b
 6317 0ff2 00       		.byte	0
 6318 0ff3 30       		.uleb128 0x30
 6319 0ff4 D1000000 		.4byte	.LASF269
 6320 0ff8 01       		.byte	0x1
 6321 0ff9 7D08     		.2byte	0x87d
 6322 0ffb 7B030000 		.4byte	0x37b
 6323 0fff 00000000 		.4byte	.LFB536
 6324 1003 0C000000 		.4byte	.LFE536-.LFB536
 6325 1007 01       		.uleb128 0x1
 6326 1008 9C       		.byte	0x9c
 6327 1009 26       		.uleb128 0x26
 6328 100a C20D0000 		.4byte	.LASF155
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 211


 6329 100e 01       		.byte	0x1
 6330 100f 8508     		.2byte	0x885
 6331 1011 B2000000 		.4byte	0xb2
 6332 1015 00000000 		.4byte	.LFB537
 6333 1019 1C000000 		.4byte	.LFE537-.LFB537
 6334 101d 01       		.uleb128 0x1
 6335 101e 9C       		.byte	0x9c
 6336 101f 42100000 		.4byte	0x1042
 6337 1023 1C       		.uleb128 0x1c
 6338 1024 970A0000 		.4byte	.LASF156
 6339 1028 01       		.byte	0x1
 6340 1029 8508     		.2byte	0x885
 6341 102b 79040000 		.4byte	0x479
 6342 102f 48060000 		.4byte	.LLST45
 6343 1033 23       		.uleb128 0x23
 6344 1034 18100000 		.4byte	.LASF114
 6345 1038 01       		.byte	0x1
 6346 1039 8708     		.2byte	0x887
 6347 103b AD060000 		.4byte	0x6ad
 6348 103f 01       		.uleb128 0x1
 6349 1040 53       		.byte	0x53
 6350 1041 00       		.byte	0
 6351 1042 26       		.uleb128 0x26
 6352 1043 25020000 		.4byte	.LASF157
 6353 1047 01       		.byte	0x1
 6354 1048 C309     		.2byte	0x9c3
 6355 104a 70030000 		.4byte	0x370
 6356 104e 00000000 		.4byte	.LFB538
 6357 1052 F0000000 		.4byte	.LFE538-.LFB538
 6358 1056 01       		.uleb128 0x1
 6359 1057 9C       		.byte	0x9c
 6360 1058 02110000 		.4byte	0x1102
 6361 105c 1D       		.uleb128 0x1d
 6362 105d 18100000 		.4byte	.LASF114
 6363 1061 01       		.byte	0x1
 6364 1062 C509     		.2byte	0x9c5
 6365 1064 AD060000 		.4byte	0x6ad
 6366 1068 5B060000 		.4byte	.LLST46
 6367 106c 1D       		.uleb128 0x1d
 6368 106d C30B0000 		.4byte	.LASF70
 6369 1071 01       		.byte	0x1
 6370 1072 C609     		.2byte	0x9c6
 6371 1074 86030000 		.4byte	0x386
 6372 1078 79060000 		.4byte	.LLST47
 6373 107c 1D       		.uleb128 0x1d
 6374 107d 330C0000 		.4byte	.LASF158
 6375 1081 01       		.byte	0x1
 6376 1082 C709     		.2byte	0x9c7
 6377 1084 70030000 		.4byte	0x370
 6378 1088 8C060000 		.4byte	.LLST48
 6379 108c 31       		.uleb128 0x31
 6380 108d 00000000 		.4byte	.Ldebug_ranges0+0
 6381 1091 1D       		.uleb128 0x1d
 6382 1092 43060000 		.4byte	.LASF132
 6383 1096 01       		.byte	0x1
 6384 1097 D109     		.2byte	0x9d1
 6385 1099 B5090000 		.4byte	0x9b5
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 212


 6386 109d E4060000 		.4byte	.LLST49
 6387 10a1 27       		.uleb128 0x27
 6388 10a2 1C000000 		.4byte	.LBB28
 6389 10a6 26000000 		.4byte	.LBE28-.LBB28
 6390 10aa C8100000 		.4byte	0x10c8
 6391 10ae 1D       		.uleb128 0x1d
 6392 10af 4A050000 		.4byte	.LASF159
 6393 10b3 01       		.byte	0x1
 6394 10b4 D909     		.2byte	0x9d9
 6395 10b6 02110000 		.4byte	0x1102
 6396 10ba F7060000 		.4byte	.LLST50
 6397 10be 1F       		.uleb128 0x1f
 6398 10bf 42000000 		.4byte	.LVL142
 6399 10c3 86060000 		.4byte	0x686
 6400 10c7 00       		.byte	0
 6401 10c8 25       		.uleb128 0x25
 6402 10c9 8C000000 		.4byte	.LVL149
 6403 10cd 28200000 		.4byte	0x2028
 6404 10d1 DC100000 		.4byte	0x10dc
 6405 10d5 21       		.uleb128 0x21
 6406 10d6 01       		.uleb128 0x1
 6407 10d7 50       		.byte	0x50
 6408 10d8 02       		.uleb128 0x2
 6409 10d9 78       		.byte	0x78
 6410 10da 00       		.sleb128 0
 6411 10db 00       		.byte	0
 6412 10dc 25       		.uleb128 0x25
 6413 10dd 98000000 		.4byte	.LVL150
 6414 10e1 28200000 		.4byte	0x2028
 6415 10e5 F0100000 		.4byte	0x10f0
 6416 10e9 21       		.uleb128 0x21
 6417 10ea 01       		.uleb128 0x1
 6418 10eb 50       		.byte	0x50
 6419 10ec 02       		.uleb128 0x2
 6420 10ed 75       		.byte	0x75
 6421 10ee 18       		.sleb128 24
 6422 10ef 00       		.byte	0
 6423 10f0 20       		.uleb128 0x20
 6424 10f1 BE000000 		.4byte	.LVL151
 6425 10f5 11200000 		.4byte	0x2011
 6426 10f9 21       		.uleb128 0x21
 6427 10fa 01       		.uleb128 0x1
 6428 10fb 51       		.byte	0x51
 6429 10fc 02       		.uleb128 0x2
 6430 10fd 78       		.byte	0x78
 6431 10fe 00       		.sleb128 0
 6432 10ff 00       		.byte	0
 6433 1100 00       		.byte	0
 6434 1101 00       		.byte	0
 6435 1102 06       		.uleb128 0x6
 6436 1103 04       		.byte	0x4
 6437 1104 6E040000 		.4byte	0x46e
 6438 1108 26       		.uleb128 0x26
 6439 1109 E40B0000 		.4byte	.LASF160
 6440 110d 01       		.byte	0x1
 6441 110e E107     		.2byte	0x7e1
 6442 1110 70030000 		.4byte	0x370
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 213


 6443 1114 00000000 		.4byte	.LFB533
 6444 1118 E4000000 		.4byte	.LFE533-.LFB533
 6445 111c 01       		.uleb128 0x1
 6446 111d 9C       		.byte	0x9c
 6447 111e C1110000 		.4byte	0x11c1
 6448 1122 1D       		.uleb128 0x1d
 6449 1123 18100000 		.4byte	.LASF114
 6450 1127 01       		.byte	0x1
 6451 1128 E307     		.2byte	0x7e3
 6452 112a AD060000 		.4byte	0x6ad
 6453 112e 19070000 		.4byte	.LLST51
 6454 1132 1D       		.uleb128 0x1d
 6455 1133 410F0000 		.4byte	.LASF161
 6456 1137 01       		.byte	0x1
 6457 1138 E407     		.2byte	0x7e4
 6458 113a 70030000 		.4byte	0x370
 6459 113e 5B070000 		.4byte	.LLST52
 6460 1142 27       		.uleb128 0x27
 6461 1143 8E000000 		.4byte	.LBB30
 6462 1147 22000000 		.4byte	.LBE30-.LBB30
 6463 114b 69110000 		.4byte	0x1169
 6464 114f 1D       		.uleb128 0x1d
 6465 1150 7F000000 		.4byte	.LASF162
 6466 1154 01       		.byte	0x1
 6467 1155 1C08     		.2byte	0x81c
 6468 1157 7B030000 		.4byte	0x37b
 6469 115b 9D070000 		.4byte	.LLST53
 6470 115f 1F       		.uleb128 0x1f
 6471 1160 9A000000 		.4byte	.LVL167
 6472 1164 42100000 		.4byte	0x1042
 6473 1168 00       		.byte	0
 6474 1169 1F       		.uleb128 0x1f
 6475 116a 12000000 		.4byte	.LVL157
 6476 116e 06200000 		.4byte	0x2006
 6477 1172 25       		.uleb128 0x25
 6478 1173 40000000 		.4byte	.LVL160
 6479 1177 28200000 		.4byte	0x2028
 6480 117b 86110000 		.4byte	0x1186
 6481 117f 21       		.uleb128 0x21
 6482 1180 01       		.uleb128 0x1
 6483 1181 50       		.byte	0x50
 6484 1182 02       		.uleb128 0x2
 6485 1183 74       		.byte	0x74
 6486 1184 18       		.sleb128 24
 6487 1185 00       		.byte	0
 6488 1186 25       		.uleb128 0x25
 6489 1187 48000000 		.4byte	.LVL161
 6490 118b 28200000 		.4byte	0x2028
 6491 118f 9A110000 		.4byte	0x119a
 6492 1193 21       		.uleb128 0x21
 6493 1194 01       		.uleb128 0x1
 6494 1195 50       		.byte	0x50
 6495 1196 02       		.uleb128 0x2
 6496 1197 76       		.byte	0x76
 6497 1198 00       		.sleb128 0
 6498 1199 00       		.byte	0
 6499 119a 25       		.uleb128 0x25
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 214


 6500 119b 6A000000 		.4byte	.LVL162
 6501 119f 11200000 		.4byte	0x2011
 6502 11a3 AE110000 		.4byte	0x11ae
 6503 11a7 21       		.uleb128 0x21
 6504 11a8 01       		.uleb128 0x1
 6505 11a9 51       		.byte	0x51
 6506 11aa 02       		.uleb128 0x2
 6507 11ab 76       		.byte	0x76
 6508 11ac 00       		.sleb128 0
 6509 11ad 00       		.byte	0
 6510 11ae 1F       		.uleb128 0x1f
 6511 11af 8E000000 		.4byte	.LVL165
 6512 11b3 86060000 		.4byte	0x686
 6513 11b7 1F       		.uleb128 0x1f
 6514 11b8 D6000000 		.4byte	.LVL175
 6515 11bc 1D200000 		.4byte	0x201d
 6516 11c0 00       		.byte	0
 6517 11c1 28       		.uleb128 0x28
 6518 11c2 D90E0000 		.4byte	.LASF163
 6519 11c6 01       		.byte	0x1
 6520 11c7 7404     		.2byte	0x474
 6521 11c9 00000000 		.4byte	.LFB521
 6522 11cd 84000000 		.4byte	.LFE521-.LFB521
 6523 11d1 01       		.uleb128 0x1
 6524 11d2 9C       		.byte	0x9c
 6525 11d3 61120000 		.4byte	0x1261
 6526 11d7 1C       		.uleb128 0x1c
 6527 11d8 EE0C0000 		.4byte	.LASF164
 6528 11dc 01       		.byte	0x1
 6529 11dd 7404     		.2byte	0x474
 6530 11df 67120000 		.4byte	0x1267
 6531 11e3 D3070000 		.4byte	.LLST54
 6532 11e7 1C       		.uleb128 0x1c
 6533 11e8 C80F0000 		.4byte	.LASF165
 6534 11ec 01       		.byte	0x1
 6535 11ed 7404     		.2byte	0x474
 6536 11ef B5090000 		.4byte	0x9b5
 6537 11f3 FF070000 		.4byte	.LLST55
 6538 11f7 1D       		.uleb128 0x1d
 6539 11f8 F60F0000 		.4byte	.LASF131
 6540 11fc 01       		.byte	0x1
 6541 11fd 7604     		.2byte	0x476
 6542 11ff 86030000 		.4byte	0x386
 6543 1203 2B080000 		.4byte	.LLST56
 6544 1207 23       		.uleb128 0x23
 6545 1208 410F0000 		.4byte	.LASF161
 6546 120c 01       		.byte	0x1
 6547 120d 7704     		.2byte	0x477
 6548 120f 70030000 		.4byte	0x370
 6549 1213 01       		.uleb128 0x1
 6550 1214 50       		.byte	0x50
 6551 1215 1D       		.uleb128 0x1d
 6552 1216 97070000 		.4byte	.LASF166
 6553 121a 01       		.byte	0x1
 6554 121b 7704     		.2byte	0x477
 6555 121d 70030000 		.4byte	0x370
 6556 1221 3E080000 		.4byte	.LLST57
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 215


 6557 1225 32       		.uleb128 0x32
 6558 1226 18000000 		.4byte	.Ldebug_ranges0+0x18
 6559 122a 4E120000 		.4byte	0x124e
 6560 122e 1D       		.uleb128 0x1d
 6561 122f 43060000 		.4byte	.LASF132
 6562 1233 01       		.byte	0x1
 6563 1234 8104     		.2byte	0x481
 6564 1236 B5090000 		.4byte	0x9b5
 6565 123a 5D080000 		.4byte	.LLST58
 6566 123e 20       		.uleb128 0x20
 6567 123f 62000000 		.4byte	.LVL183
 6568 1243 27090000 		.4byte	0x927
 6569 1247 21       		.uleb128 0x21
 6570 1248 01       		.uleb128 0x1
 6571 1249 51       		.byte	0x51
 6572 124a 01       		.uleb128 0x1
 6573 124b 30       		.byte	0x30
 6574 124c 00       		.byte	0
 6575 124d 00       		.byte	0
 6576 124e 1F       		.uleb128 0x1f
 6577 124f 22000000 		.4byte	.LVL178
 6578 1253 790F0000 		.4byte	0xf79
 6579 1257 1F       		.uleb128 0x1f
 6580 1258 66000000 		.4byte	.LVL184
 6581 125c 08110000 		.4byte	0x1108
 6582 1260 00       		.byte	0
 6583 1261 06       		.uleb128 0x6
 6584 1262 04       		.byte	0x4
 6585 1263 86030000 		.4byte	0x386
 6586 1267 07       		.uleb128 0x7
 6587 1268 61120000 		.4byte	0x1261
 6588 126c 28       		.uleb128 0x28
 6589 126d B7060000 		.4byte	.LASF167
 6590 1271 01       		.byte	0x1
 6591 1272 C804     		.2byte	0x4c8
 6592 1274 00000000 		.4byte	.LFB522
 6593 1278 44000000 		.4byte	.LFE522-.LFB522
 6594 127c 01       		.uleb128 0x1
 6595 127d 9C       		.byte	0x9c
 6596 127e CE120000 		.4byte	0x12ce
 6597 1282 1C       		.uleb128 0x1c
 6598 1283 2B0E0000 		.4byte	.LASF168
 6599 1287 01       		.byte	0x1
 6600 1288 C804     		.2byte	0x4c8
 6601 128a B5090000 		.4byte	0x9b5
 6602 128e 70080000 		.4byte	.LLST59
 6603 1292 1D       		.uleb128 0x1d
 6604 1293 410F0000 		.4byte	.LASF161
 6605 1297 01       		.byte	0x1
 6606 1298 CA04     		.2byte	0x4ca
 6607 129a 70030000 		.4byte	0x370
 6608 129e A7080000 		.4byte	.LLST60
 6609 12a2 1F       		.uleb128 0x1f
 6610 12a3 16000000 		.4byte	.LVL188
 6611 12a7 790F0000 		.4byte	0xf79
 6612 12ab 25       		.uleb128 0x25
 6613 12ac 1E000000 		.4byte	.LVL189
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 216


 6614 12b0 27090000 		.4byte	0x927
 6615 12b4 C4120000 		.4byte	0x12c4
 6616 12b8 21       		.uleb128 0x21
 6617 12b9 01       		.uleb128 0x1
 6618 12ba 50       		.byte	0x50
 6619 12bb 02       		.uleb128 0x2
 6620 12bc 74       		.byte	0x74
 6621 12bd 00       		.sleb128 0
 6622 12be 21       		.uleb128 0x21
 6623 12bf 01       		.uleb128 0x1
 6624 12c0 51       		.byte	0x51
 6625 12c1 01       		.uleb128 0x1
 6626 12c2 30       		.byte	0x30
 6627 12c3 00       		.byte	0
 6628 12c4 1F       		.uleb128 0x1f
 6629 12c5 22000000 		.4byte	.LVL190
 6630 12c9 08110000 		.4byte	0x1108
 6631 12cd 00       		.byte	0
 6632 12ce 1E       		.uleb128 0x1e
 6633 12cf E6100000 		.4byte	.LASF169
 6634 12d3 01       		.byte	0x1
 6635 12d4 300D     		.2byte	0xd30
 6636 12d6 00000000 		.4byte	.LFB552
 6637 12da 54000000 		.4byte	.LFE552-.LFB552
 6638 12de 01       		.uleb128 0x1
 6639 12df 9C       		.byte	0x9c
 6640 12e0 65130000 		.4byte	0x1365
 6641 12e4 2B       		.uleb128 0x2b
 6642 12e5 02000000 		.4byte	.LBB34
 6643 12e9 4C000000 		.4byte	.LBE34-.LBB34
 6644 12ed 1D       		.uleb128 0x1d
 6645 12ee B7070000 		.4byte	.LASF170
 6646 12f2 01       		.byte	0x1
 6647 12f3 370D     		.2byte	0xd37
 6648 12f5 70030000 		.4byte	0x370
 6649 12f9 DD080000 		.4byte	.LLST61
 6650 12fd 27       		.uleb128 0x27
 6651 12fe 14000000 		.4byte	.LBB35
 6652 1302 30000000 		.4byte	.LBE35-.LBB35
 6653 1306 51130000 		.4byte	0x1351
 6654 130a 1D       		.uleb128 0x1d
 6655 130b 18100000 		.4byte	.LASF114
 6656 130f 01       		.byte	0x1
 6657 1310 450D     		.2byte	0xd45
 6658 1312 AD060000 		.4byte	0x6ad
 6659 1316 F7080000 		.4byte	.LLST62
 6660 131a 1F       		.uleb128 0x1f
 6661 131b 18000000 		.4byte	.LVL196
 6662 131f 06200000 		.4byte	0x2006
 6663 1323 25       		.uleb128 0x25
 6664 1324 26000000 		.4byte	.LVL199
 6665 1328 28200000 		.4byte	0x2028
 6666 132c 37130000 		.4byte	0x1337
 6667 1330 21       		.uleb128 0x21
 6668 1331 01       		.uleb128 0x1
 6669 1332 50       		.byte	0x50
 6670 1333 02       		.uleb128 0x2
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 217


 6671 1334 75       		.byte	0x75
 6672 1335 04       		.sleb128 4
 6673 1336 00       		.byte	0
 6674 1337 1F       		.uleb128 0x1f
 6675 1338 3E000000 		.4byte	.LVL200
 6676 133c 1D200000 		.4byte	0x201d
 6677 1340 20       		.uleb128 0x20
 6678 1341 44000000 		.4byte	.LVL201
 6679 1345 B3060000 		.4byte	0x6b3
 6680 1349 21       		.uleb128 0x21
 6681 134a 01       		.uleb128 0x1
 6682 134b 50       		.byte	0x50
 6683 134c 02       		.uleb128 0x2
 6684 134d 75       		.byte	0x75
 6685 134e 00       		.sleb128 0
 6686 134f 00       		.byte	0
 6687 1350 00       		.byte	0
 6688 1351 1F       		.uleb128 0x1f
 6689 1352 08000000 		.4byte	.LVL193
 6690 1356 790F0000 		.4byte	0xf79
 6691 135a 1F       		.uleb128 0x1f
 6692 135b 12000000 		.4byte	.LVL195
 6693 135f 08110000 		.4byte	0x1108
 6694 1363 00       		.byte	0
 6695 1364 00       		.byte	0
 6696 1365 33       		.uleb128 0x33
 6697 1366 13060000 		.4byte	.LASF172
 6698 136a 01       		.byte	0x1
 6699 136b 460C     		.2byte	0xc46
 6700 136d 00000000 		.4byte	.LFB548
 6701 1371 2C000000 		.4byte	.LFE548-.LFB548
 6702 1375 01       		.uleb128 0x1
 6703 1376 9C       		.byte	0x9c
 6704 1377 B4130000 		.4byte	0x13b4
 6705 137b 1C       		.uleb128 0x1c
 6706 137c B60B0000 		.4byte	.LASF122
 6707 1380 01       		.byte	0x1
 6708 1381 460C     		.2byte	0xc46
 6709 1383 B0000000 		.4byte	0xb0
 6710 1387 0A090000 		.4byte	.LLST63
 6711 138b 27       		.uleb128 0x27
 6712 138c 1E000000 		.4byte	.LBB36
 6713 1390 04000000 		.4byte	.LBE36-.LBB36
 6714 1394 AA130000 		.4byte	0x13aa
 6715 1398 34       		.uleb128 0x34
 6716 1399 AC020000 		.4byte	.LASF261
 6717 139d 01       		.byte	0x1
 6718 139e 760C     		.2byte	0xc76
 6719 13a0 1F       		.uleb128 0x1f
 6720 13a1 22000000 		.4byte	.LVL205
 6721 13a5 78200000 		.4byte	0x2078
 6722 13a9 00       		.byte	0
 6723 13aa 1F       		.uleb128 0x1f
 6724 13ab 06000000 		.4byte	.LVL204
 6725 13af CE120000 		.4byte	0x12ce
 6726 13b3 00       		.byte	0
 6727 13b4 28       		.uleb128 0x28
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 218


 6728 13b5 020B0000 		.4byte	.LASF173
 6729 13b9 01       		.byte	0x1
 6730 13ba C90A     		.2byte	0xac9
 6731 13bc 00000000 		.4byte	.LFB539
 6732 13c0 BC000000 		.4byte	.LFE539-.LFB539
 6733 13c4 01       		.uleb128 0x1
 6734 13c5 9C       		.byte	0x9c
 6735 13c6 3D140000 		.4byte	0x143d
 6736 13ca 27       		.uleb128 0x27
 6737 13cb 1C000000 		.4byte	.LBB37
 6738 13cf 36000000 		.4byte	.LBE37-.LBB37
 6739 13d3 02140000 		.4byte	0x1402
 6740 13d7 1D       		.uleb128 0x1d
 6741 13d8 090E0000 		.4byte	.LASF174
 6742 13dc 01       		.byte	0x1
 6743 13dd F30A     		.2byte	0xaf3
 6744 13df 43140000 		.4byte	0x1443
 6745 13e3 2B090000 		.4byte	.LLST64
 6746 13e7 35       		.uleb128 0x35
 6747 13e8 50090000 		.4byte	.LASF175
 6748 13ec 01       		.byte	0x1
 6749 13ed F40A     		.2byte	0xaf4
 6750 13ef 03080000 		.4byte	0x803
 6751 13f3 A5CB96AD 		.sleb128 -1515870811
 6751      7A
 6752 13f8 1F       		.uleb128 0x1f
 6753 13f9 52000000 		.4byte	.LVL208
 6754 13fd 84200000 		.4byte	0x2084
 6755 1401 00       		.byte	0
 6756 1402 2B       		.uleb128 0x2b
 6757 1403 52000000 		.4byte	.LBB38
 6758 1407 6A000000 		.4byte	.LBE38-.LBB38
 6759 140b 23       		.uleb128 0x23
 6760 140c CB0E0000 		.4byte	.LASF176
 6761 1410 01       		.byte	0x1
 6762 1411 010B     		.2byte	0xb01
 6763 1413 7B030000 		.4byte	0x37b
 6764 1417 01       		.uleb128 0x1
 6765 1418 53       		.byte	0x53
 6766 1419 2B       		.uleb128 0x2b
 6767 141a 72000000 		.4byte	.LBB39
 6768 141e 3E000000 		.4byte	.LBE39-.LBB39
 6769 1422 23       		.uleb128 0x23
 6770 1423 5F000000 		.4byte	.LASF177
 6771 1427 01       		.byte	0x1
 6772 1428 010B     		.2byte	0xb01
 6773 142a 48140000 		.4byte	0x1448
 6774 142e 0B       		.uleb128 0xb
 6775 142f 73       		.byte	0x73
 6776 1430 00       		.sleb128 0
 6777 1431 44       		.byte	0x44
 6778 1432 1E       		.byte	0x1e
 6779 1433 03       		.byte	0x3
 6780 1434 30000000 		.4byte	pxReadyTasksLists
 6781 1438 22       		.byte	0x22
 6782 1439 9F       		.byte	0x9f
 6783 143a 00       		.byte	0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 219


 6784 143b 00       		.byte	0
 6785 143c 00       		.byte	0
 6786 143d 06       		.uleb128 0x6
 6787 143e 04       		.byte	0x4
 6788 143f 03080000 		.4byte	0x803
 6789 1443 07       		.uleb128 0x7
 6790 1444 3D140000 		.4byte	0x143d
 6791 1448 07       		.uleb128 0x7
 6792 1449 02110000 		.4byte	0x1102
 6793 144d 28       		.uleb128 0x28
 6794 144e 340F0000 		.4byte	.LASF178
 6795 1452 01       		.byte	0x1
 6796 1453 1E06     		.2byte	0x61e
 6797 1455 00000000 		.4byte	.LFB526
 6798 1459 98000000 		.4byte	.LFE526-.LFB526
 6799 145d 01       		.uleb128 0x1
 6800 145e 9C       		.byte	0x9c
 6801 145f FC140000 		.4byte	0x14fc
 6802 1463 1C       		.uleb128 0x1c
 6803 1464 610C0000 		.4byte	.LASF179
 6804 1468 01       		.byte	0x1
 6805 1469 1E06     		.2byte	0x61e
 6806 146b 79040000 		.4byte	0x479
 6807 146f 3E090000 		.4byte	.LLST65
 6808 1473 1D       		.uleb128 0x1d
 6809 1474 18100000 		.4byte	.LASF114
 6810 1478 01       		.byte	0x1
 6811 1479 2006     		.2byte	0x620
 6812 147b AD060000 		.4byte	0x6ad
 6813 147f 5C090000 		.4byte	.LLST66
 6814 1483 1F       		.uleb128 0x1f
 6815 1484 08000000 		.4byte	.LVL213
 6816 1488 06200000 		.4byte	0x2006
 6817 148c 25       		.uleb128 0x25
 6818 148d 18000000 		.4byte	.LVL215
 6819 1491 28200000 		.4byte	0x2028
 6820 1495 A0140000 		.4byte	0x14a0
 6821 1499 21       		.uleb128 0x21
 6822 149a 01       		.uleb128 0x1
 6823 149b 50       		.byte	0x50
 6824 149c 02       		.uleb128 0x2
 6825 149d 76       		.byte	0x76
 6826 149e 00       		.sleb128 0
 6827 149f 00       		.byte	0
 6828 14a0 25       		.uleb128 0x25
 6829 14a1 24000000 		.4byte	.LVL216
 6830 14a5 28200000 		.4byte	0x2028
 6831 14a9 B4140000 		.4byte	0x14b4
 6832 14ad 21       		.uleb128 0x21
 6833 14ae 01       		.uleb128 0x1
 6834 14af 50       		.byte	0x50
 6835 14b0 02       		.uleb128 0x2
 6836 14b1 74       		.byte	0x74
 6837 14b2 18       		.sleb128 24
 6838 14b3 00       		.byte	0
 6839 14b4 25       		.uleb128 0x25
 6840 14b5 2E000000 		.4byte	.LVL217
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 220


 6841 14b9 11200000 		.4byte	0x2011
 6842 14bd CE140000 		.4byte	0x14ce
 6843 14c1 21       		.uleb128 0x21
 6844 14c2 01       		.uleb128 0x1
 6845 14c3 50       		.byte	0x50
 6846 14c4 02       		.uleb128 0x2
 6847 14c5 75       		.byte	0x75
 6848 14c6 00       		.sleb128 0
 6849 14c7 21       		.uleb128 0x21
 6850 14c8 01       		.uleb128 0x1
 6851 14c9 51       		.byte	0x51
 6852 14ca 02       		.uleb128 0x2
 6853 14cb 76       		.byte	0x76
 6854 14cc 00       		.sleb128 0
 6855 14cd 00       		.byte	0
 6856 14ce 1F       		.uleb128 0x1f
 6857 14cf 32000000 		.4byte	.LVL218
 6858 14d3 1D200000 		.4byte	0x201d
 6859 14d7 1F       		.uleb128 0x1f
 6860 14d8 3C000000 		.4byte	.LVL219
 6861 14dc 06200000 		.4byte	0x2006
 6862 14e0 1F       		.uleb128 0x1f
 6863 14e1 40000000 		.4byte	.LVL220
 6864 14e5 86060000 		.4byte	0x686
 6865 14e9 1F       		.uleb128 0x1f
 6866 14ea 44000000 		.4byte	.LVL221
 6867 14ee 1D200000 		.4byte	0x201d
 6868 14f2 1F       		.uleb128 0x1f
 6869 14f3 8E000000 		.4byte	.LVL224
 6870 14f7 B4130000 		.4byte	0x13b4
 6871 14fb 00       		.byte	0
 6872 14fc 28       		.uleb128 0x28
 6873 14fd A1060000 		.4byte	.LASF180
 6874 1501 01       		.byte	0x1
 6875 1502 0F0B     		.2byte	0xb0f
 6876 1504 00000000 		.4byte	.LFB540
 6877 1508 24000000 		.4byte	.LFE540-.LFB540
 6878 150c 01       		.uleb128 0x1
 6879 150d 9C       		.byte	0x9c
 6880 150e 51150000 		.4byte	0x1551
 6881 1512 1C       		.uleb128 0x1c
 6882 1513 30010000 		.4byte	.LASF181
 6883 1517 01       		.byte	0x1
 6884 1518 0F0B     		.2byte	0xb0f
 6885 151a 48140000 		.4byte	0x1448
 6886 151e 6F090000 		.4byte	.LLST67
 6887 1522 1C       		.uleb128 0x1c
 6888 1523 140F0000 		.4byte	.LASF129
 6889 1527 01       		.byte	0x1
 6890 1528 0F0B     		.2byte	0xb0f
 6891 152a B5090000 		.4byte	0x9b5
 6892 152e 90090000 		.4byte	.LLST68
 6893 1532 1F       		.uleb128 0x1f
 6894 1533 16000000 		.4byte	.LVL228
 6895 1537 34200000 		.4byte	0x2034
 6896 153b 20       		.uleb128 0x20
 6897 153c 1E000000 		.4byte	.LVL229
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 221


 6898 1540 27090000 		.4byte	0x927
 6899 1544 21       		.uleb128 0x21
 6900 1545 01       		.uleb128 0x1
 6901 1546 50       		.byte	0x50
 6902 1547 02       		.uleb128 0x2
 6903 1548 74       		.byte	0x74
 6904 1549 00       		.sleb128 0
 6905 154a 21       		.uleb128 0x21
 6906 154b 01       		.uleb128 0x1
 6907 154c 51       		.byte	0x51
 6908 154d 01       		.uleb128 0x1
 6909 154e 31       		.byte	0x31
 6910 154f 00       		.byte	0
 6911 1550 00       		.byte	0
 6912 1551 28       		.uleb128 0x28
 6913 1552 440E0000 		.4byte	.LASF182
 6914 1556 01       		.byte	0x1
 6915 1557 200B     		.2byte	0xb20
 6916 1559 00000000 		.4byte	.LFB541
 6917 155d 40000000 		.4byte	.LFE541-.LFB541
 6918 1561 01       		.uleb128 0x1
 6919 1562 9C       		.byte	0x9c
 6920 1563 C2150000 		.4byte	0x15c2
 6921 1567 1C       		.uleb128 0x1c
 6922 1568 30010000 		.4byte	.LASF181
 6923 156c 01       		.byte	0x1
 6924 156d 200B     		.2byte	0xb20
 6925 156f 02110000 		.4byte	0x1102
 6926 1573 BC090000 		.4byte	.LLST69
 6927 1577 1C       		.uleb128 0x1c
 6928 1578 C30B0000 		.4byte	.LASF70
 6929 157c 01       		.byte	0x1
 6930 157d 200B     		.2byte	0xb20
 6931 157f B5090000 		.4byte	0x9b5
 6932 1583 F3090000 		.4byte	.LLST70
 6933 1587 1C       		.uleb128 0x1c
 6934 1588 140F0000 		.4byte	.LASF129
 6935 158c 01       		.byte	0x1
 6936 158d 200B     		.2byte	0xb20
 6937 158f B5090000 		.4byte	0x9b5
 6938 1593 1F0A0000 		.4byte	.LLST71
 6939 1597 25       		.uleb128 0x25
 6940 1598 32000000 		.4byte	.LVL237
 6941 159c 11200000 		.4byte	0x2011
 6942 15a0 AC150000 		.4byte	0x15ac
 6943 15a4 21       		.uleb128 0x21
 6944 15a5 01       		.uleb128 0x1
 6945 15a6 50       		.byte	0x50
 6946 15a7 03       		.uleb128 0x3
 6947 15a8 F3       		.byte	0xf3
 6948 15a9 01       		.uleb128 0x1
 6949 15aa 50       		.byte	0x50
 6950 15ab 00       		.byte	0
 6951 15ac 20       		.uleb128 0x20
 6952 15ad 3A000000 		.4byte	.LVL238
 6953 15b1 27090000 		.4byte	0x927
 6954 15b5 21       		.uleb128 0x21
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 222


 6955 15b6 01       		.uleb128 0x1
 6956 15b7 50       		.byte	0x50
 6957 15b8 02       		.uleb128 0x2
 6958 15b9 74       		.byte	0x74
 6959 15ba 00       		.sleb128 0
 6960 15bb 21       		.uleb128 0x21
 6961 15bc 01       		.uleb128 0x1
 6962 15bd 51       		.byte	0x51
 6963 15be 01       		.uleb128 0x1
 6964 15bf 31       		.byte	0x31
 6965 15c0 00       		.byte	0
 6966 15c1 00       		.byte	0
 6967 15c2 28       		.uleb128 0x28
 6968 15c3 2B080000 		.4byte	.LASF183
 6969 15c7 01       		.byte	0x1
 6970 15c8 3A0B     		.2byte	0xb3a
 6971 15ca 00000000 		.4byte	.LFB542
 6972 15ce 2C000000 		.4byte	.LFE542-.LFB542
 6973 15d2 01       		.uleb128 0x1
 6974 15d3 9C       		.byte	0x9c
 6975 15d4 28160000 		.4byte	0x1628
 6976 15d8 1C       		.uleb128 0x1c
 6977 15d9 30010000 		.4byte	.LASF181
 6978 15dd 01       		.byte	0x1
 6979 15de 3A0B     		.2byte	0xb3a
 6980 15e0 48140000 		.4byte	0x1448
 6981 15e4 4B0A0000 		.4byte	.LLST72
 6982 15e8 1C       		.uleb128 0x1c
 6983 15e9 140F0000 		.4byte	.LASF129
 6984 15ed 01       		.byte	0x1
 6985 15ee 3A0B     		.2byte	0xb3a
 6986 15f0 86030000 		.4byte	0x386
 6987 15f4 6C0A0000 		.4byte	.LLST73
 6988 15f8 1C       		.uleb128 0x1c
 6989 15f9 F6050000 		.4byte	.LASF184
 6990 15fd 01       		.byte	0x1
 6991 15fe 3A0B     		.2byte	0xb3a
 6992 1600 B0090000 		.4byte	0x9b0
 6993 1604 8A0A0000 		.4byte	.LLST74
 6994 1608 1F       		.uleb128 0x1f
 6995 1609 18000000 		.4byte	.LVL243
 6996 160d 11200000 		.4byte	0x2011
 6997 1611 20       		.uleb128 0x20
 6998 1612 26000000 		.4byte	.LVL245
 6999 1616 27090000 		.4byte	0x927
 7000 161a 21       		.uleb128 0x21
 7001 161b 01       		.uleb128 0x1
 7002 161c 50       		.byte	0x50
 7003 161d 02       		.uleb128 0x2
 7004 161e 74       		.byte	0x74
 7005 161f 00       		.sleb128 0
 7006 1620 21       		.uleb128 0x21
 7007 1621 01       		.uleb128 0x1
 7008 1622 51       		.byte	0x51
 7009 1623 02       		.uleb128 0x2
 7010 1624 75       		.byte	0x75
 7011 1625 00       		.sleb128 0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 223


 7012 1626 00       		.byte	0
 7013 1627 00       		.byte	0
 7014 1628 26       		.uleb128 0x26
 7015 1629 22070000 		.4byte	.LASF185
 7016 162d 01       		.byte	0x1
 7017 162e 590B     		.2byte	0xb59
 7018 1630 70030000 		.4byte	0x370
 7019 1634 00000000 		.4byte	.LFB543
 7020 1638 7C000000 		.4byte	.LFE543-.LFB543
 7021 163c 01       		.uleb128 0x1
 7022 163d 9C       		.byte	0x9c
 7023 163e C8160000 		.4byte	0x16c8
 7024 1642 1C       		.uleb128 0x1c
 7025 1643 30010000 		.4byte	.LASF181
 7026 1647 01       		.byte	0x1
 7027 1648 590B     		.2byte	0xb59
 7028 164a D3160000 		.4byte	0x16d3
 7029 164e B60A0000 		.4byte	.LLST75
 7030 1652 1D       		.uleb128 0x1d
 7031 1653 3F040000 		.4byte	.LASF186
 7032 1657 01       		.byte	0x1
 7033 1658 5B0B     		.2byte	0xb5b
 7034 165a AD060000 		.4byte	0x6ad
 7035 165e D70A0000 		.4byte	.LLST76
 7036 1662 1D       		.uleb128 0x1d
 7037 1663 800D0000 		.4byte	.LASF113
 7038 1667 01       		.byte	0x1
 7039 1668 5C0B     		.2byte	0xb5c
 7040 166a 70030000 		.4byte	0x370
 7041 166e EA0A0000 		.4byte	.LLST77
 7042 1672 25       		.uleb128 0x25
 7043 1673 16000000 		.4byte	.LVL250
 7044 1677 28200000 		.4byte	0x2028
 7045 167b 86160000 		.4byte	0x1686
 7046 167f 21       		.uleb128 0x21
 7047 1680 01       		.uleb128 0x1
 7048 1681 50       		.byte	0x50
 7049 1682 02       		.uleb128 0x2
 7050 1683 75       		.byte	0x75
 7051 1684 00       		.sleb128 0
 7052 1685 00       		.byte	0
 7053 1686 25       		.uleb128 0x25
 7054 1687 26000000 		.4byte	.LVL251
 7055 168b 28200000 		.4byte	0x2028
 7056 168f 9A160000 		.4byte	0x169a
 7057 1693 21       		.uleb128 0x21
 7058 1694 01       		.uleb128 0x1
 7059 1695 50       		.byte	0x50
 7060 1696 02       		.uleb128 0x2
 7061 1697 75       		.byte	0x75
 7062 1698 00       		.sleb128 0
 7063 1699 00       		.byte	0
 7064 169a 25       		.uleb128 0x25
 7065 169b 48000000 		.4byte	.LVL252
 7066 169f 11200000 		.4byte	0x2011
 7067 16a3 AE160000 		.4byte	0x16ae
 7068 16a7 21       		.uleb128 0x21
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 224


 7069 16a8 01       		.uleb128 0x1
 7070 16a9 51       		.byte	0x51
 7071 16aa 02       		.uleb128 0x2
 7072 16ab 75       		.byte	0x75
 7073 16ac 00       		.sleb128 0
 7074 16ad 00       		.byte	0
 7075 16ae 20       		.uleb128 0x20
 7076 16af 52000000 		.4byte	.LVL253
 7077 16b3 11200000 		.4byte	0x2011
 7078 16b7 21       		.uleb128 0x21
 7079 16b8 01       		.uleb128 0x1
 7080 16b9 50       		.byte	0x50
 7081 16ba 05       		.uleb128 0x5
 7082 16bb 03       		.byte	0x3
 7083 16bc 14000000 		.4byte	.LANCHOR0+20
 7084 16c0 21       		.uleb128 0x21
 7085 16c1 01       		.uleb128 0x1
 7086 16c2 51       		.byte	0x51
 7087 16c3 02       		.uleb128 0x2
 7088 16c4 75       		.byte	0x75
 7089 16c5 00       		.sleb128 0
 7090 16c6 00       		.byte	0
 7091 16c7 00       		.byte	0
 7092 16c8 06       		.uleb128 0x6
 7093 16c9 04       		.byte	0x4
 7094 16ca CE160000 		.4byte	0x16ce
 7095 16ce 07       		.uleb128 0x7
 7096 16cf 6E040000 		.4byte	0x46e
 7097 16d3 07       		.uleb128 0x7
 7098 16d4 C8160000 		.4byte	0x16c8
 7099 16d8 26       		.uleb128 0x26
 7100 16d9 630E0000 		.4byte	.LASF187
 7101 16dd 01       		.byte	0x1
 7102 16de 9D0B     		.2byte	0xb9d
 7103 16e0 70030000 		.4byte	0x370
 7104 16e4 00000000 		.4byte	.LFB544
 7105 16e8 6C000000 		.4byte	.LFE544-.LFB544
 7106 16ec 01       		.uleb128 0x1
 7107 16ed 9C       		.byte	0x9c
 7108 16ee 60170000 		.4byte	0x1760
 7109 16f2 1C       		.uleb128 0x1c
 7110 16f3 C0100000 		.4byte	.LASF188
 7111 16f7 01       		.byte	0x1
 7112 16f8 9D0B     		.2byte	0xb9d
 7113 16fa 68040000 		.4byte	0x468
 7114 16fe 090B0000 		.4byte	.LLST78
 7115 1702 1C       		.uleb128 0x1c
 7116 1703 C30B0000 		.4byte	.LASF70
 7117 1707 01       		.byte	0x1
 7118 1708 9D0B     		.2byte	0xb9d
 7119 170a B5090000 		.4byte	0x9b5
 7120 170e 2A0B0000 		.4byte	.LLST79
 7121 1712 1D       		.uleb128 0x1d
 7122 1713 3F040000 		.4byte	.LASF186
 7123 1717 01       		.byte	0x1
 7124 1718 9F0B     		.2byte	0xb9f
 7125 171a AD060000 		.4byte	0x6ad
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 225


 7126 171e 4B0B0000 		.4byte	.LLST80
 7127 1722 1D       		.uleb128 0x1d
 7128 1723 800D0000 		.4byte	.LASF113
 7129 1727 01       		.byte	0x1
 7130 1728 A00B     		.2byte	0xba0
 7131 172a 70030000 		.4byte	0x370
 7132 172e 5E0B0000 		.4byte	.LLST81
 7133 1732 1F       		.uleb128 0x1f
 7134 1733 20000000 		.4byte	.LVL260
 7135 1737 28200000 		.4byte	0x2028
 7136 173b 25       		.uleb128 0x25
 7137 173c 28000000 		.4byte	.LVL261
 7138 1740 28200000 		.4byte	0x2028
 7139 1744 4F170000 		.4byte	0x174f
 7140 1748 21       		.uleb128 0x21
 7141 1749 01       		.uleb128 0x1
 7142 174a 50       		.byte	0x50
 7143 174b 02       		.uleb128 0x2
 7144 174c 76       		.byte	0x76
 7145 174d 00       		.sleb128 0
 7146 174e 00       		.byte	0
 7147 174f 20       		.uleb128 0x20
 7148 1750 4E000000 		.4byte	.LVL262
 7149 1754 11200000 		.4byte	0x2011
 7150 1758 21       		.uleb128 0x21
 7151 1759 01       		.uleb128 0x1
 7152 175a 51       		.byte	0x51
 7153 175b 02       		.uleb128 0x2
 7154 175c 76       		.byte	0x76
 7155 175d 00       		.sleb128 0
 7156 175e 00       		.byte	0
 7157 175f 00       		.byte	0
 7158 1760 28       		.uleb128 0x28
 7159 1761 10020000 		.4byte	.LASF189
 7160 1765 01       		.byte	0x1
 7161 1766 CA0B     		.2byte	0xbca
 7162 1768 00000000 		.4byte	.LFB545
 7163 176c 1C000000 		.4byte	.LFE545-.LFB545
 7164 1770 01       		.uleb128 0x1
 7165 1771 9C       		.byte	0x9c
 7166 1772 85170000 		.4byte	0x1785
 7167 1776 22       		.uleb128 0x22
 7168 1777 D1090000 		.4byte	.LASF190
 7169 177b 01       		.byte	0x1
 7170 177c CA0B     		.2byte	0xbca
 7171 177e 8B170000 		.4byte	0x178b
 7172 1782 01       		.uleb128 0x1
 7173 1783 50       		.byte	0x50
 7174 1784 00       		.byte	0
 7175 1785 06       		.uleb128 0x6
 7176 1786 04       		.byte	0x4
 7177 1787 DF040000 		.4byte	0x4df
 7178 178b 07       		.uleb128 0x7
 7179 178c 85170000 		.4byte	0x1785
 7180 1790 26       		.uleb128 0x26
 7181 1791 700C0000 		.4byte	.LASF191
 7182 1795 01       		.byte	0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 226


 7183 1796 D20B     		.2byte	0xbd2
 7184 1798 70030000 		.4byte	0x370
 7185 179c 00000000 		.4byte	.LFB546
 7186 17a0 64000000 		.4byte	.LFE546-.LFB546
 7187 17a4 01       		.uleb128 0x1
 7188 17a5 9C       		.byte	0x9c
 7189 17a6 1B180000 		.4byte	0x181b
 7190 17aa 1C       		.uleb128 0x1c
 7191 17ab D1090000 		.4byte	.LASF190
 7192 17af 01       		.byte	0x1
 7193 17b0 D20B     		.2byte	0xbd2
 7194 17b2 8B170000 		.4byte	0x178b
 7195 17b6 7D0B0000 		.4byte	.LLST82
 7196 17ba 1C       		.uleb128 0x1c
 7197 17bb A7030000 		.4byte	.LASF192
 7198 17bf 01       		.byte	0x1
 7199 17c0 D20B     		.2byte	0xbd2
 7200 17c2 67120000 		.4byte	0x1267
 7201 17c6 F40B0000 		.4byte	.LLST83
 7202 17ca 1D       		.uleb128 0x1d
 7203 17cb 800D0000 		.4byte	.LASF113
 7204 17cf 01       		.byte	0x1
 7205 17d0 D40B     		.2byte	0xbd4
 7206 17d2 70030000 		.4byte	0x370
 7207 17d6 200C0000 		.4byte	.LLST84
 7208 17da 27       		.uleb128 0x27
 7209 17db 16000000 		.4byte	.LBB40
 7210 17df 40000000 		.4byte	.LBE40-.LBB40
 7211 17e3 08180000 		.4byte	0x1808
 7212 17e7 1D       		.uleb128 0x1d
 7213 17e8 43060000 		.4byte	.LASF132
 7214 17ec 01       		.byte	0x1
 7215 17ed DC0B     		.2byte	0xbdc
 7216 17ef B5090000 		.4byte	0x9b5
 7217 17f3 4A0C0000 		.4byte	.LLST85
 7218 17f7 20       		.uleb128 0x20
 7219 17f8 48000000 		.4byte	.LVL271
 7220 17fc 60170000 		.4byte	0x1760
 7221 1800 21       		.uleb128 0x21
 7222 1801 01       		.uleb128 0x1
 7223 1802 50       		.byte	0x50
 7224 1803 02       		.uleb128 0x2
 7225 1804 74       		.byte	0x74
 7226 1805 00       		.sleb128 0
 7227 1806 00       		.byte	0
 7228 1807 00       		.byte	0
 7229 1808 1F       		.uleb128 0x1f
 7230 1809 16000000 		.4byte	.LVL269
 7231 180d 06200000 		.4byte	0x2006
 7232 1811 1F       		.uleb128 0x1f
 7233 1812 5A000000 		.4byte	.LVL279
 7234 1816 1D200000 		.4byte	0x201d
 7235 181a 00       		.byte	0
 7236 181b 2E       		.uleb128 0x2e
 7237 181c 910D0000 		.4byte	.LASF194
 7238 1820 01       		.byte	0x1
 7239 1821 0F0C     		.2byte	0xc0f
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 227


 7240 1823 00000000 		.4byte	.LFB547
 7241 1827 10000000 		.4byte	.LFE547-.LFB547
 7242 182b 01       		.uleb128 0x1
 7243 182c 9C       		.byte	0x9c
 7244 182d 28       		.uleb128 0x28
 7245 182e 8E000000 		.4byte	.LASF195
 7246 1832 01       		.byte	0x1
 7247 1833 DB0C     		.2byte	0xcdb
 7248 1835 00000000 		.4byte	.LFB549
 7249 1839 1C000000 		.4byte	.LFE549-.LFB549
 7250 183d 01       		.uleb128 0x1
 7251 183e 9C       		.byte	0x9c
 7252 183f 82180000 		.4byte	0x1882
 7253 1843 1C       		.uleb128 0x1c
 7254 1844 7C060000 		.4byte	.LASF196
 7255 1848 01       		.byte	0x1
 7256 1849 DB0C     		.2byte	0xcdb
 7257 184b 79040000 		.4byte	0x479
 7258 184f 680C0000 		.4byte	.LLST86
 7259 1853 1C       		.uleb128 0x1c
 7260 1854 0B0D0000 		.4byte	.LASF197
 7261 1858 01       		.byte	0x1
 7262 1859 DB0C     		.2byte	0xcdb
 7263 185b 70030000 		.4byte	0x370
 7264 185f 7B0C0000 		.4byte	.LLST87
 7265 1863 22       		.uleb128 0x22
 7266 1864 D0100000 		.4byte	.LASF198
 7267 1868 01       		.byte	0x1
 7268 1869 DB0C     		.2byte	0xcdb
 7269 186b B0000000 		.4byte	0xb0
 7270 186f 01       		.uleb128 0x1
 7271 1870 52       		.byte	0x52
 7272 1871 1D       		.uleb128 0x1d
 7273 1872 18100000 		.4byte	.LASF114
 7274 1876 01       		.byte	0x1
 7275 1877 DD0C     		.2byte	0xcdd
 7276 1879 AD060000 		.4byte	0x6ad
 7277 187d A90C0000 		.4byte	.LLST88
 7278 1881 00       		.byte	0
 7279 1882 26       		.uleb128 0x26
 7280 1883 1E050000 		.4byte	.LASF199
 7281 1887 01       		.byte	0x1
 7282 1888 EB0C     		.2byte	0xceb
 7283 188a B0000000 		.4byte	0xb0
 7284 188e 00000000 		.4byte	.LFB550
 7285 1892 20000000 		.4byte	.LFE550-.LFB550
 7286 1896 01       		.uleb128 0x1
 7287 1897 9C       		.byte	0x9c
 7288 1898 DD180000 		.4byte	0x18dd
 7289 189c 1C       		.uleb128 0x1c
 7290 189d 970A0000 		.4byte	.LASF156
 7291 18a1 01       		.byte	0x1
 7292 18a2 EB0C     		.2byte	0xceb
 7293 18a4 79040000 		.4byte	0x479
 7294 18a8 BC0C0000 		.4byte	.LLST89
 7295 18ac 1C       		.uleb128 0x1c
 7296 18ad 0B0D0000 		.4byte	.LASF197
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 228


 7297 18b1 01       		.byte	0x1
 7298 18b2 EB0C     		.2byte	0xceb
 7299 18b4 70030000 		.4byte	0x370
 7300 18b8 E80C0000 		.4byte	.LLST90
 7301 18bc 1D       		.uleb128 0x1d
 7302 18bd 41050000 		.4byte	.LASF200
 7303 18c1 01       		.byte	0x1
 7304 18c2 ED0C     		.2byte	0xced
 7305 18c4 B0000000 		.4byte	0xb0
 7306 18c8 130D0000 		.4byte	.LLST91
 7307 18cc 1D       		.uleb128 0x1d
 7308 18cd 18100000 		.4byte	.LASF114
 7309 18d1 01       		.byte	0x1
 7310 18d2 EE0C     		.2byte	0xcee
 7311 18d4 AD060000 		.4byte	0x6ad
 7312 18d8 490D0000 		.4byte	.LLST92
 7313 18dc 00       		.byte	0
 7314 18dd 26       		.uleb128 0x26
 7315 18de 510F0000 		.4byte	.LASF201
 7316 18e2 01       		.byte	0x1
 7317 18e3 580E     		.2byte	0xe58
 7318 18e5 79040000 		.4byte	0x479
 7319 18e9 00000000 		.4byte	.LFB555
 7320 18ed 0C000000 		.4byte	.LFE555-.LFB555
 7321 18f1 01       		.uleb128 0x1
 7322 18f2 9C       		.byte	0x9c
 7323 18f3 06190000 		.4byte	0x1906
 7324 18f7 23       		.uleb128 0x23
 7325 18f8 800D0000 		.4byte	.LASF113
 7326 18fc 01       		.byte	0x1
 7327 18fd 5A0E     		.2byte	0xe5a
 7328 18ff 79040000 		.4byte	0x479
 7329 1903 01       		.uleb128 0x1
 7330 1904 50       		.byte	0x50
 7331 1905 00       		.byte	0
 7332 1906 26       		.uleb128 0x26
 7333 1907 E8000000 		.4byte	.LASF202
 7334 190b 01       		.byte	0x1
 7335 190c 690E     		.2byte	0xe69
 7336 190e 70030000 		.4byte	0x370
 7337 1912 00000000 		.4byte	.LFB556
 7338 1916 20000000 		.4byte	.LFE556-.LFB556
 7339 191a 01       		.uleb128 0x1
 7340 191b 9C       		.byte	0x9c
 7341 191c 2F190000 		.4byte	0x192f
 7342 1920 23       		.uleb128 0x23
 7343 1921 800D0000 		.4byte	.LASF113
 7344 1925 01       		.byte	0x1
 7345 1926 6B0E     		.2byte	0xe6b
 7346 1928 70030000 		.4byte	0x370
 7347 192c 01       		.uleb128 0x1
 7348 192d 50       		.byte	0x50
 7349 192e 00       		.byte	0
 7350 192f 26       		.uleb128 0x26
 7351 1930 650A0000 		.4byte	.LASF203
 7352 1934 01       		.byte	0x1
 7353 1935 4D10     		.2byte	0x104d
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 229


 7354 1937 86030000 		.4byte	0x386
 7355 193b 00000000 		.4byte	.LFB557
 7356 193f 20000000 		.4byte	.LFE557-.LFB557
 7357 1943 01       		.uleb128 0x1
 7358 1944 9C       		.byte	0x9c
 7359 1945 58190000 		.4byte	0x1958
 7360 1949 23       		.uleb128 0x23
 7361 194a 16090000 		.4byte	.LASF137
 7362 194e 01       		.byte	0x1
 7363 194f 4F10     		.2byte	0x104f
 7364 1951 86030000 		.4byte	0x386
 7365 1955 01       		.uleb128 0x1
 7366 1956 50       		.byte	0x50
 7367 1957 00       		.byte	0
 7368 1958 26       		.uleb128 0x26
 7369 1959 C4070000 		.4byte	.LASF204
 7370 195d 01       		.byte	0x1
 7371 195e 6E10     		.2byte	0x106e
 7372 1960 EB000000 		.4byte	0xeb
 7373 1964 00000000 		.4byte	.LFB558
 7374 1968 80000000 		.4byte	.LFE558-.LFB558
 7375 196c 01       		.uleb128 0x1
 7376 196d 9C       		.byte	0x9c
 7377 196e E0190000 		.4byte	0x19e0
 7378 1972 1C       		.uleb128 0x1c
 7379 1973 5B040000 		.4byte	.LASF205
 7380 1977 01       		.byte	0x1
 7381 1978 6E10     		.2byte	0x106e
 7382 197a 70030000 		.4byte	0x370
 7383 197e 5C0D0000 		.4byte	.LLST93
 7384 1982 1C       		.uleb128 0x1c
 7385 1983 140F0000 		.4byte	.LASF129
 7386 1987 01       		.byte	0x1
 7387 1988 6E10     		.2byte	0x106e
 7388 198a 86030000 		.4byte	0x386
 7389 198e 880D0000 		.4byte	.LLST94
 7390 1992 1D       		.uleb128 0x1d
 7391 1993 1F090000 		.4byte	.LASF206
 7392 1997 01       		.byte	0x1
 7393 1998 7010     		.2byte	0x1070
 7394 199a EB000000 		.4byte	0xeb
 7395 199e B40D0000 		.4byte	.LLST95
 7396 19a2 1F       		.uleb128 0x1f
 7397 19a3 0A000000 		.4byte	.LVL297
 7398 19a7 06200000 		.4byte	0x2006
 7399 19ab 25       		.uleb128 0x25
 7400 19ac 2A000000 		.4byte	.LVL298
 7401 19b0 27090000 		.4byte	0x927
 7402 19b4 C4190000 		.4byte	0x19c4
 7403 19b8 21       		.uleb128 0x21
 7404 19b9 01       		.uleb128 0x1
 7405 19ba 50       		.byte	0x50
 7406 19bb 02       		.uleb128 0x2
 7407 19bc 74       		.byte	0x74
 7408 19bd 00       		.sleb128 0
 7409 19be 21       		.uleb128 0x21
 7410 19bf 01       		.uleb128 0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 230


 7411 19c0 51       		.byte	0x51
 7412 19c1 01       		.uleb128 0x1
 7413 19c2 31       		.byte	0x31
 7414 19c3 00       		.byte	0
 7415 19c4 1F       		.uleb128 0x1f
 7416 19c5 3E000000 		.4byte	.LVL299
 7417 19c9 1D200000 		.4byte	0x201d
 7418 19cd 1F       		.uleb128 0x1f
 7419 19ce 42000000 		.4byte	.LVL300
 7420 19d2 06200000 		.4byte	0x2006
 7421 19d6 1F       		.uleb128 0x1f
 7422 19d7 74000000 		.4byte	.LVL302
 7423 19db 1D200000 		.4byte	0x201d
 7424 19df 00       		.byte	0
 7425 19e0 26       		.uleb128 0x26
 7426 19e1 6C070000 		.4byte	.LASF207
 7427 19e5 01       		.byte	0x1
 7428 19e6 B210     		.2byte	0x10b2
 7429 19e8 70030000 		.4byte	0x370
 7430 19ec 00000000 		.4byte	.LFB559
 7431 19f0 A4000000 		.4byte	.LFE559-.LFB559
 7432 19f4 01       		.uleb128 0x1
 7433 19f5 9C       		.byte	0x9c
 7434 19f6 881A0000 		.4byte	0x1a88
 7435 19fa 1C       		.uleb128 0x1c
 7436 19fb D6040000 		.4byte	.LASF208
 7437 19ff 01       		.byte	0x1
 7438 1a00 B210     		.2byte	0x10b2
 7439 1a02 EB000000 		.4byte	0xeb
 7440 1a06 D20D0000 		.4byte	.LLST96
 7441 1a0a 1C       		.uleb128 0x1c
 7442 1a0b B0000000 		.4byte	.LASF209
 7443 1a0f 01       		.byte	0x1
 7444 1a10 B210     		.2byte	0x10b2
 7445 1a12 EB000000 		.4byte	0xeb
 7446 1a16 FE0D0000 		.4byte	.LLST97
 7447 1a1a 1C       		.uleb128 0x1c
 7448 1a1b 5E0D0000 		.4byte	.LASF210
 7449 1a1f 01       		.byte	0x1
 7450 1a20 B210     		.2byte	0x10b2
 7451 1a22 1A010000 		.4byte	0x11a
 7452 1a26 430E0000 		.4byte	.LLST98
 7453 1a2a 1C       		.uleb128 0x1c
 7454 1a2b 140F0000 		.4byte	.LASF129
 7455 1a2f 01       		.byte	0x1
 7456 1a30 B210     		.2byte	0x10b2
 7457 1a32 86030000 		.4byte	0x386
 7458 1a36 6F0E0000 		.4byte	.LLST99
 7459 1a3a 1D       		.uleb128 0x1d
 7460 1a3b 800D0000 		.4byte	.LASF113
 7461 1a3f 01       		.byte	0x1
 7462 1a40 B410     		.2byte	0x10b4
 7463 1a42 70030000 		.4byte	0x370
 7464 1a46 9B0E0000 		.4byte	.LLST100
 7465 1a4a 1F       		.uleb128 0x1f
 7466 1a4b 0E000000 		.4byte	.LVL305
 7467 1a4f 06200000 		.4byte	0x2006
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 231


 7468 1a53 25       		.uleb128 0x25
 7469 1a54 40000000 		.4byte	.LVL306
 7470 1a58 27090000 		.4byte	0x927
 7471 1a5c 6C1A0000 		.4byte	0x1a6c
 7472 1a60 21       		.uleb128 0x21
 7473 1a61 01       		.uleb128 0x1
 7474 1a62 50       		.byte	0x50
 7475 1a63 02       		.uleb128 0x2
 7476 1a64 76       		.byte	0x76
 7477 1a65 00       		.sleb128 0
 7478 1a66 21       		.uleb128 0x21
 7479 1a67 01       		.uleb128 0x1
 7480 1a68 51       		.byte	0x51
 7481 1a69 01       		.uleb128 0x1
 7482 1a6a 31       		.byte	0x31
 7483 1a6b 00       		.byte	0
 7484 1a6c 1F       		.uleb128 0x1f
 7485 1a6d 54000000 		.4byte	.LVL307
 7486 1a71 1D200000 		.4byte	0x201d
 7487 1a75 1F       		.uleb128 0x1f
 7488 1a76 58000000 		.4byte	.LVL308
 7489 1a7a 06200000 		.4byte	0x2006
 7490 1a7e 1F       		.uleb128 0x1f
 7491 1a7f 98000000 		.4byte	.LVL313
 7492 1a83 1D200000 		.4byte	0x201d
 7493 1a87 00       		.byte	0
 7494 1a88 26       		.uleb128 0x26
 7495 1a89 26040000 		.4byte	.LASF211
 7496 1a8d 01       		.byte	0x1
 7497 1a8e 0211     		.2byte	0x1102
 7498 1a90 70030000 		.4byte	0x370
 7499 1a94 00000000 		.4byte	.LFB560
 7500 1a98 C8000000 		.4byte	.LFE560-.LFB560
 7501 1a9c 01       		.uleb128 0x1
 7502 1a9d 9C       		.byte	0x9c
 7503 1a9e 4D1B0000 		.4byte	0x1b4d
 7504 1aa2 1C       		.uleb128 0x1c
 7505 1aa3 B50A0000 		.4byte	.LASF212
 7506 1aa7 01       		.byte	0x1
 7507 1aa8 0211     		.2byte	0x1102
 7508 1aaa 79040000 		.4byte	0x479
 7509 1aae C50E0000 		.4byte	.LLST101
 7510 1ab2 1C       		.uleb128 0x1c
 7511 1ab3 590C0000 		.4byte	.LASF213
 7512 1ab7 01       		.byte	0x1
 7513 1ab8 0211     		.2byte	0x1102
 7514 1aba EB000000 		.4byte	0xeb
 7515 1abe F10E0000 		.4byte	.LLST102
 7516 1ac2 1C       		.uleb128 0x1c
 7517 1ac3 4E0A0000 		.4byte	.LASF214
 7518 1ac7 01       		.byte	0x1
 7519 1ac8 0211     		.2byte	0x1102
 7520 1aca AF040000 		.4byte	0x4af
 7521 1ace 360F0000 		.4byte	.LLST103
 7522 1ad2 1C       		.uleb128 0x1c
 7523 1ad3 AD090000 		.4byte	.LASF215
 7524 1ad7 01       		.byte	0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 232


 7525 1ad8 0211     		.2byte	0x1102
 7526 1ada 1A010000 		.4byte	0x11a
 7527 1ade 570F0000 		.4byte	.LLST104
 7528 1ae2 1D       		.uleb128 0x1d
 7529 1ae3 18100000 		.4byte	.LASF114
 7530 1ae7 01       		.byte	0x1
 7531 1ae8 0411     		.2byte	0x1104
 7532 1aea AD060000 		.4byte	0x6ad
 7533 1aee 830F0000 		.4byte	.LLST105
 7534 1af2 1D       		.uleb128 0x1d
 7535 1af3 800D0000 		.4byte	.LASF113
 7536 1af7 01       		.byte	0x1
 7537 1af8 0511     		.2byte	0x1105
 7538 1afa 70030000 		.4byte	0x370
 7539 1afe A40F0000 		.4byte	.LLST106
 7540 1b02 1D       		.uleb128 0x1d
 7541 1b03 FA010000 		.4byte	.LASF216
 7542 1b07 01       		.byte	0x1
 7543 1b08 0611     		.2byte	0x1106
 7544 1b0a CA000000 		.4byte	0xca
 7545 1b0e CE0F0000 		.4byte	.LLST107
 7546 1b12 1F       		.uleb128 0x1f
 7547 1b13 14000000 		.4byte	.LVL317
 7548 1b17 06200000 		.4byte	0x2006
 7549 1b1b 25       		.uleb128 0x25
 7550 1b1c 6A000000 		.4byte	.LVL322
 7551 1b20 28200000 		.4byte	0x2028
 7552 1b24 2F1B0000 		.4byte	0x1b2f
 7553 1b28 21       		.uleb128 0x21
 7554 1b29 01       		.uleb128 0x1
 7555 1b2a 50       		.byte	0x50
 7556 1b2b 02       		.uleb128 0x2
 7557 1b2c 76       		.byte	0x76
 7558 1b2d 00       		.sleb128 0
 7559 1b2e 00       		.byte	0
 7560 1b2f 25       		.uleb128 0x25
 7561 1b30 8C000000 		.4byte	.LVL323
 7562 1b34 11200000 		.4byte	0x2011
 7563 1b38 431B0000 		.4byte	0x1b43
 7564 1b3c 21       		.uleb128 0x21
 7565 1b3d 01       		.uleb128 0x1
 7566 1b3e 51       		.byte	0x51
 7567 1b3f 02       		.uleb128 0x2
 7568 1b40 76       		.byte	0x76
 7569 1b41 00       		.sleb128 0
 7570 1b42 00       		.byte	0
 7571 1b43 1F       		.uleb128 0x1f
 7572 1b44 B6000000 		.4byte	.LVL324
 7573 1b48 1D200000 		.4byte	0x201d
 7574 1b4c 00       		.byte	0
 7575 1b4d 26       		.uleb128 0x26
 7576 1b4e D2030000 		.4byte	.LASF217
 7577 1b52 01       		.byte	0x1
 7578 1b53 6C11     		.2byte	0x116c
 7579 1b55 70030000 		.4byte	0x370
 7580 1b59 00000000 		.4byte	.LFB561
 7581 1b5d 04010000 		.4byte	.LFE561-.LFB561
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 233


 7582 1b61 01       		.uleb128 0x1
 7583 1b62 9C       		.byte	0x9c
 7584 1b63 851C0000 		.4byte	0x1c85
 7585 1b67 1C       		.uleb128 0x1c
 7586 1b68 B50A0000 		.4byte	.LASF212
 7587 1b6c 01       		.byte	0x1
 7588 1b6d 6C11     		.2byte	0x116c
 7589 1b6f 79040000 		.4byte	0x479
 7590 1b73 E10F0000 		.4byte	.LLST108
 7591 1b77 1C       		.uleb128 0x1c
 7592 1b78 590C0000 		.4byte	.LASF213
 7593 1b7c 01       		.byte	0x1
 7594 1b7d 6C11     		.2byte	0x116c
 7595 1b7f EB000000 		.4byte	0xeb
 7596 1b83 0D100000 		.4byte	.LLST109
 7597 1b87 1C       		.uleb128 0x1c
 7598 1b88 4E0A0000 		.4byte	.LASF214
 7599 1b8c 01       		.byte	0x1
 7600 1b8d 6C11     		.2byte	0x116c
 7601 1b8f AF040000 		.4byte	0x4af
 7602 1b93 52100000 		.4byte	.LLST110
 7603 1b97 1C       		.uleb128 0x1c
 7604 1b98 AD090000 		.4byte	.LASF215
 7605 1b9c 01       		.byte	0x1
 7606 1b9d 6C11     		.2byte	0x116c
 7607 1b9f 1A010000 		.4byte	0x11a
 7608 1ba3 73100000 		.4byte	.LLST111
 7609 1ba7 1C       		.uleb128 0x1c
 7610 1ba8 FF000000 		.4byte	.LASF218
 7611 1bac 01       		.byte	0x1
 7612 1bad 6C11     		.2byte	0x116c
 7613 1baf 851C0000 		.4byte	0x1c85
 7614 1bb3 9F100000 		.4byte	.LLST112
 7615 1bb7 1D       		.uleb128 0x1d
 7616 1bb8 18100000 		.4byte	.LASF114
 7617 1bbc 01       		.byte	0x1
 7618 1bbd 6E11     		.2byte	0x116e
 7619 1bbf AD060000 		.4byte	0x6ad
 7620 1bc3 BF100000 		.4byte	.LLST113
 7621 1bc7 1D       		.uleb128 0x1d
 7622 1bc8 FA010000 		.4byte	.LASF216
 7623 1bcc 01       		.byte	0x1
 7624 1bcd 6F11     		.2byte	0x116f
 7625 1bcf CA000000 		.4byte	0xca
 7626 1bd3 E0100000 		.4byte	.LLST114
 7627 1bd7 1D       		.uleb128 0x1d
 7628 1bd8 800D0000 		.4byte	.LASF113
 7629 1bdc 01       		.byte	0x1
 7630 1bdd 7011     		.2byte	0x1170
 7631 1bdf 70030000 		.4byte	0x370
 7632 1be3 F3100000 		.4byte	.LLST115
 7633 1be7 29       		.uleb128 0x29
 7634 1be8 06110000 		.4byte	.LASF149
 7635 1bec 01       		.byte	0x1
 7636 1bed 7111     		.2byte	0x1171
 7637 1bef 7B030000 		.4byte	0x37b
 7638 1bf3 2A       		.uleb128 0x2a
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 234


 7639 1bf4 E7050000 		.4byte	0x5e7
 7640 1bf8 18000000 		.4byte	.LBB41
 7641 1bfc 14000000 		.4byte	.LBE41-.LBB41
 7642 1c00 01       		.byte	0x1
 7643 1c01 8911     		.2byte	0x1189
 7644 1c03 1C1C0000 		.4byte	0x1c1c
 7645 1c07 2B       		.uleb128 0x2b
 7646 1c08 18000000 		.4byte	.LBB42
 7647 1c0c 14000000 		.4byte	.LBE42-.LBB42
 7648 1c10 2C       		.uleb128 0x2c
 7649 1c11 F7050000 		.4byte	0x5f7
 7650 1c15 2C       		.uleb128 0x2c
 7651 1c16 02060000 		.4byte	0x602
 7652 1c1a 00       		.byte	0
 7653 1c1b 00       		.byte	0
 7654 1c1c 2A       		.uleb128 0x2a
 7655 1c1d 0E060000 		.4byte	0x60e
 7656 1c21 EC000000 		.4byte	.LBB43
 7657 1c25 04000000 		.4byte	.LBE43-.LBB43
 7658 1c29 01       		.byte	0x1
 7659 1c2a DE11     		.2byte	0x11de
 7660 1c2c 3A1C0000 		.4byte	0x1c3a
 7661 1c30 2D       		.uleb128 0x2d
 7662 1c31 1A060000 		.4byte	0x61a
 7663 1c35 1D110000 		.4byte	.LLST116
 7664 1c39 00       		.byte	0
 7665 1c3a 1F       		.uleb128 0x1f
 7666 1c3b 18000000 		.4byte	.LVL328
 7667 1c3f 4B200000 		.4byte	0x204b
 7668 1c43 25       		.uleb128 0x25
 7669 1c44 A0000000 		.4byte	.LVL333
 7670 1c48 28200000 		.4byte	0x2028
 7671 1c4c 571C0000 		.4byte	0x1c57
 7672 1c50 21       		.uleb128 0x21
 7673 1c51 01       		.uleb128 0x1
 7674 1c52 50       		.byte	0x50
 7675 1c53 02       		.uleb128 0x2
 7676 1c54 78       		.byte	0x78
 7677 1c55 00       		.sleb128 0
 7678 1c56 00       		.byte	0
 7679 1c57 25       		.uleb128 0x25
 7680 1c58 C2000000 		.4byte	.LVL334
 7681 1c5c 11200000 		.4byte	0x2011
 7682 1c60 6B1C0000 		.4byte	0x1c6b
 7683 1c64 21       		.uleb128 0x21
 7684 1c65 01       		.uleb128 0x1
 7685 1c66 51       		.byte	0x51
 7686 1c67 02       		.uleb128 0x2
 7687 1c68 78       		.byte	0x78
 7688 1c69 00       		.sleb128 0
 7689 1c6a 00       		.byte	0
 7690 1c6b 20       		.uleb128 0x20
 7691 1c6c CE000000 		.4byte	.LVL336
 7692 1c70 11200000 		.4byte	0x2011
 7693 1c74 21       		.uleb128 0x21
 7694 1c75 01       		.uleb128 0x1
 7695 1c76 50       		.byte	0x50
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 235


 7696 1c77 05       		.uleb128 0x5
 7697 1c78 03       		.byte	0x3
 7698 1c79 14000000 		.4byte	.LANCHOR0+20
 7699 1c7d 21       		.uleb128 0x21
 7700 1c7e 01       		.uleb128 0x1
 7701 1c7f 51       		.byte	0x51
 7702 1c80 02       		.uleb128 0x2
 7703 1c81 74       		.byte	0x74
 7704 1c82 18       		.sleb128 24
 7705 1c83 00       		.byte	0
 7706 1c84 00       		.byte	0
 7707 1c85 06       		.uleb128 0x6
 7708 1c86 04       		.byte	0x4
 7709 1c87 70030000 		.4byte	0x370
 7710 1c8b 28       		.uleb128 0x28
 7711 1c8c F30B0000 		.4byte	.LASF219
 7712 1c90 01       		.byte	0x1
 7713 1c91 E811     		.2byte	0x11e8
 7714 1c93 00000000 		.4byte	.LFB562
 7715 1c97 B0000000 		.4byte	.LFE562-.LFB562
 7716 1c9b 01       		.uleb128 0x1
 7717 1c9c 9C       		.byte	0x9c
 7718 1c9d 7F1D0000 		.4byte	0x1d7f
 7719 1ca1 1C       		.uleb128 0x1c
 7720 1ca2 B50A0000 		.4byte	.LASF212
 7721 1ca6 01       		.byte	0x1
 7722 1ca7 E811     		.2byte	0x11e8
 7723 1ca9 79040000 		.4byte	0x479
 7724 1cad 30110000 		.4byte	.LLST117
 7725 1cb1 1C       		.uleb128 0x1c
 7726 1cb2 FF000000 		.4byte	.LASF218
 7727 1cb6 01       		.byte	0x1
 7728 1cb7 E811     		.2byte	0x11e8
 7729 1cb9 851C0000 		.4byte	0x1c85
 7730 1cbd 5C110000 		.4byte	.LLST118
 7731 1cc1 1D       		.uleb128 0x1d
 7732 1cc2 18100000 		.4byte	.LASF114
 7733 1cc6 01       		.byte	0x1
 7734 1cc7 EA11     		.2byte	0x11ea
 7735 1cc9 AD060000 		.4byte	0x6ad
 7736 1ccd 88110000 		.4byte	.LLST119
 7737 1cd1 1D       		.uleb128 0x1d
 7738 1cd2 FA010000 		.4byte	.LASF216
 7739 1cd6 01       		.byte	0x1
 7740 1cd7 EB11     		.2byte	0x11eb
 7741 1cd9 CA000000 		.4byte	0xca
 7742 1cdd A9110000 		.4byte	.LLST120
 7743 1ce1 29       		.uleb128 0x29
 7744 1ce2 06110000 		.4byte	.LASF149
 7745 1ce6 01       		.byte	0x1
 7746 1ce7 EC11     		.2byte	0x11ec
 7747 1ce9 7B030000 		.4byte	0x37b
 7748 1ced 2A       		.uleb128 0x2a
 7749 1cee E7050000 		.4byte	0x5e7
 7750 1cf2 10000000 		.4byte	.LBB45
 7751 1cf6 14000000 		.4byte	.LBE45-.LBB45
 7752 1cfa 01       		.byte	0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 236


 7753 1cfb 0412     		.2byte	0x1204
 7754 1cfd 161D0000 		.4byte	0x1d16
 7755 1d01 2B       		.uleb128 0x2b
 7756 1d02 10000000 		.4byte	.LBB46
 7757 1d06 14000000 		.4byte	.LBE46-.LBB46
 7758 1d0a 2C       		.uleb128 0x2c
 7759 1d0b F7050000 		.4byte	0x5f7
 7760 1d0f 2C       		.uleb128 0x2c
 7761 1d10 02060000 		.4byte	0x602
 7762 1d14 00       		.byte	0
 7763 1d15 00       		.byte	0
 7764 1d16 2A       		.uleb128 0x2a
 7765 1d17 0E060000 		.4byte	0x60e
 7766 1d1b 9E000000 		.4byte	.LBB47
 7767 1d1f 12000000 		.4byte	.LBE47-.LBB47
 7768 1d23 01       		.byte	0x1
 7769 1d24 3812     		.2byte	0x1238
 7770 1d26 341D0000 		.4byte	0x1d34
 7771 1d2a 2D       		.uleb128 0x2d
 7772 1d2b 1A060000 		.4byte	0x61a
 7773 1d2f BC110000 		.4byte	.LLST121
 7774 1d33 00       		.byte	0
 7775 1d34 1F       		.uleb128 0x1f
 7776 1d35 10000000 		.4byte	.LVL341
 7777 1d39 4B200000 		.4byte	0x204b
 7778 1d3d 25       		.uleb128 0x25
 7779 1d3e 52000000 		.4byte	.LVL344
 7780 1d42 28200000 		.4byte	0x2028
 7781 1d46 511D0000 		.4byte	0x1d51
 7782 1d4a 21       		.uleb128 0x21
 7783 1d4b 01       		.uleb128 0x1
 7784 1d4c 50       		.byte	0x50
 7785 1d4d 02       		.uleb128 0x2
 7786 1d4e 77       		.byte	0x77
 7787 1d4f 00       		.sleb128 0
 7788 1d50 00       		.byte	0
 7789 1d51 25       		.uleb128 0x25
 7790 1d52 74000000 		.4byte	.LVL345
 7791 1d56 11200000 		.4byte	0x2011
 7792 1d5a 651D0000 		.4byte	0x1d65
 7793 1d5e 21       		.uleb128 0x21
 7794 1d5f 01       		.uleb128 0x1
 7795 1d60 51       		.byte	0x51
 7796 1d61 02       		.uleb128 0x2
 7797 1d62 77       		.byte	0x77
 7798 1d63 00       		.sleb128 0
 7799 1d64 00       		.byte	0
 7800 1d65 20       		.uleb128 0x20
 7801 1d66 80000000 		.4byte	.LVL346
 7802 1d6a 11200000 		.4byte	0x2011
 7803 1d6e 21       		.uleb128 0x21
 7804 1d6f 01       		.uleb128 0x1
 7805 1d70 50       		.byte	0x50
 7806 1d71 05       		.uleb128 0x5
 7807 1d72 03       		.byte	0x3
 7808 1d73 14000000 		.4byte	.LANCHOR0+20
 7809 1d77 21       		.uleb128 0x21
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 237


 7810 1d78 01       		.uleb128 0x1
 7811 1d79 51       		.byte	0x51
 7812 1d7a 02       		.uleb128 0x2
 7813 1d7b 74       		.byte	0x74
 7814 1d7c 18       		.sleb128 24
 7815 1d7d 00       		.byte	0
 7816 1d7e 00       		.byte	0
 7817 1d7f 26       		.uleb128 0x26
 7818 1d80 02100000 		.4byte	.LASF220
 7819 1d84 01       		.byte	0x1
 7820 1d85 4112     		.2byte	0x1241
 7821 1d87 70030000 		.4byte	0x370
 7822 1d8b 00000000 		.4byte	.LFB563
 7823 1d8f 34000000 		.4byte	.LFE563-.LFB563
 7824 1d93 01       		.uleb128 0x1
 7825 1d94 9C       		.byte	0x9c
 7826 1d95 DC1D0000 		.4byte	0x1ddc
 7827 1d99 1C       		.uleb128 0x1c
 7828 1d9a C30A0000 		.4byte	.LASF117
 7829 1d9e 01       		.byte	0x1
 7830 1d9f 4112     		.2byte	0x1241
 7831 1da1 79040000 		.4byte	0x479
 7832 1da5 CF110000 		.4byte	.LLST122
 7833 1da9 1D       		.uleb128 0x1d
 7834 1daa 18100000 		.4byte	.LASF114
 7835 1dae 01       		.byte	0x1
 7836 1daf 4312     		.2byte	0x1243
 7837 1db1 AD060000 		.4byte	0x6ad
 7838 1db5 E2110000 		.4byte	.LLST123
 7839 1db9 1D       		.uleb128 0x1d
 7840 1dba 800D0000 		.4byte	.LASF113
 7841 1dbe 01       		.byte	0x1
 7842 1dbf 4412     		.2byte	0x1244
 7843 1dc1 70030000 		.4byte	0x370
 7844 1dc5 00120000 		.4byte	.LLST124
 7845 1dc9 1F       		.uleb128 0x1f
 7846 1dca 10000000 		.4byte	.LVL352
 7847 1dce 06200000 		.4byte	0x2006
 7848 1dd2 1F       		.uleb128 0x1f
 7849 1dd3 2A000000 		.4byte	.LVL357
 7850 1dd7 1D200000 		.4byte	0x201d
 7851 1ddb 00       		.byte	0
 7852 1ddc 11       		.uleb128 0x11
 7853 1ddd 6E040000 		.4byte	0x46e
 7854 1de1 EC1D0000 		.4byte	0x1dec
 7855 1de5 12       		.uleb128 0x12
 7856 1de6 A9000000 		.4byte	0xa9
 7857 1dea 13       		.byte	0x13
 7858 1deb 00       		.byte	0
 7859 1dec 23       		.uleb128 0x23
 7860 1ded CA010000 		.4byte	.LASF221
 7861 1df1 01       		.byte	0x1
 7862 1df2 7701     		.2byte	0x177
 7863 1df4 DC1D0000 		.4byte	0x1ddc
 7864 1df8 05       		.uleb128 0x5
 7865 1df9 03       		.byte	0x3
 7866 1dfa 30000000 		.4byte	pxReadyTasksLists
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 238


 7867 1dfe 23       		.uleb128 0x23
 7868 1dff 220D0000 		.4byte	.LASF222
 7869 1e03 01       		.byte	0x1
 7870 1e04 7801     		.2byte	0x178
 7871 1e06 6E040000 		.4byte	0x46e
 7872 1e0a 05       		.uleb128 0x5
 7873 1e0b 03       		.byte	0x3
 7874 1e0c C0010000 		.4byte	xDelayedTaskList1
 7875 1e10 23       		.uleb128 0x23
 7876 1e11 4D020000 		.4byte	.LASF223
 7877 1e15 01       		.byte	0x1
 7878 1e16 7901     		.2byte	0x179
 7879 1e18 6E040000 		.4byte	0x46e
 7880 1e1c 05       		.uleb128 0x5
 7881 1e1d 03       		.byte	0x3
 7882 1e1e D4010000 		.4byte	xDelayedTaskList2
 7883 1e22 23       		.uleb128 0x23
 7884 1e23 0A0C0000 		.4byte	.LASF224
 7885 1e27 01       		.byte	0x1
 7886 1e28 7A01     		.2byte	0x17a
 7887 1e2a 341E0000 		.4byte	0x1e34
 7888 1e2e 05       		.uleb128 0x5
 7889 1e2f 03       		.byte	0x3
 7890 1e30 28000000 		.4byte	pxDelayedTaskList
 7891 1e34 08       		.uleb128 0x8
 7892 1e35 02110000 		.4byte	0x1102
 7893 1e39 23       		.uleb128 0x23
 7894 1e3a 87060000 		.4byte	.LASF225
 7895 1e3e 01       		.byte	0x1
 7896 1e3f 7B01     		.2byte	0x17b
 7897 1e41 341E0000 		.4byte	0x1e34
 7898 1e45 05       		.uleb128 0x5
 7899 1e46 03       		.byte	0x3
 7900 1e47 FC010000 		.4byte	pxOverflowDelayedTaskList
 7901 1e4b 23       		.uleb128 0x23
 7902 1e4c EB040000 		.4byte	.LASF226
 7903 1e50 01       		.byte	0x1
 7904 1e51 7C01     		.2byte	0x17c
 7905 1e53 6E040000 		.4byte	0x46e
 7906 1e57 05       		.uleb128 0x5
 7907 1e58 03       		.byte	0x3
 7908 1e59 14000000 		.4byte	xPendingReadyList
 7909 1e5d 23       		.uleb128 0x23
 7910 1e5e F1060000 		.4byte	.LASF227
 7911 1e62 01       		.byte	0x1
 7912 1e63 8001     		.2byte	0x180
 7913 1e65 6E040000 		.4byte	0x46e
 7914 1e69 05       		.uleb128 0x5
 7915 1e6a 03       		.byte	0x3
 7916 1e6b E8010000 		.4byte	xTasksWaitingTermination
 7917 1e6f 23       		.uleb128 0x23
 7918 1e70 98010000 		.4byte	.LASF228
 7919 1e74 01       		.byte	0x1
 7920 1e75 8101     		.2byte	0x181
 7921 1e77 811E0000 		.4byte	0x1e81
 7922 1e7b 05       		.uleb128 0x5
 7923 1e7c 03       		.byte	0x3
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 239


 7924 1e7d 18020000 		.4byte	uxDeletedTasksWaitingCleanUp
 7925 1e81 08       		.uleb128 0x8
 7926 1e82 7B030000 		.4byte	0x37b
 7927 1e86 23       		.uleb128 0x23
 7928 1e87 62060000 		.4byte	.LASF229
 7929 1e8b 01       		.byte	0x1
 7930 1e8c 8701     		.2byte	0x187
 7931 1e8e 6E040000 		.4byte	0x46e
 7932 1e92 05       		.uleb128 0x5
 7933 1e93 03       		.byte	0x3
 7934 1e94 00000000 		.4byte	xSuspendedTaskList
 7935 1e98 23       		.uleb128 0x23
 7936 1e99 B10F0000 		.4byte	.LASF230
 7937 1e9d 01       		.byte	0x1
 7938 1e9e 8C01     		.2byte	0x18c
 7939 1ea0 811E0000 		.4byte	0x1e81
 7940 1ea4 05       		.uleb128 0x5
 7941 1ea5 03       		.byte	0x3
 7942 1ea6 00020000 		.4byte	uxCurrentNumberOfTasks
 7943 1eaa 23       		.uleb128 0x23
 7944 1eab 08060000 		.4byte	.LASF231
 7945 1eaf 01       		.byte	0x1
 7946 1eb0 8D01     		.2byte	0x18d
 7947 1eb2 BC1E0000 		.4byte	0x1ebc
 7948 1eb6 05       		.uleb128 0x5
 7949 1eb7 03       		.byte	0x3
 7950 1eb8 14020000 		.4byte	xTickCount
 7951 1ebc 08       		.uleb128 0x8
 7952 1ebd 86030000 		.4byte	0x386
 7953 1ec1 23       		.uleb128 0x23
 7954 1ec2 DB0C0000 		.4byte	.LASF232
 7955 1ec6 01       		.byte	0x1
 7956 1ec7 8E01     		.2byte	0x18e
 7957 1ec9 811E0000 		.4byte	0x1e81
 7958 1ecd 05       		.uleb128 0x5
 7959 1ece 03       		.byte	0x3
 7960 1ecf 10020000 		.4byte	uxTopReadyPriority
 7961 1ed3 23       		.uleb128 0x23
 7962 1ed4 3C010000 		.4byte	.LASF233
 7963 1ed8 01       		.byte	0x1
 7964 1ed9 8F01     		.2byte	0x18f
 7965 1edb E51E0000 		.4byte	0x1ee5
 7966 1edf 05       		.uleb128 0x5
 7967 1ee0 03       		.byte	0x3
 7968 1ee1 08020000 		.4byte	xSchedulerRunning
 7969 1ee5 08       		.uleb128 0x8
 7970 1ee6 70030000 		.4byte	0x370
 7971 1eea 23       		.uleb128 0x23
 7972 1eeb A20D0000 		.4byte	.LASF234
 7973 1eef 01       		.byte	0x1
 7974 1ef0 9001     		.2byte	0x190
 7975 1ef2 811E0000 		.4byte	0x1e81
 7976 1ef6 05       		.uleb128 0x5
 7977 1ef7 03       		.byte	0x3
 7978 1ef8 28020000 		.4byte	uxPendedTicks
 7979 1efc 23       		.uleb128 0x23
 7980 1efd 46110000 		.4byte	.LASF235
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 240


 7981 1f01 01       		.byte	0x1
 7982 1f02 9101     		.2byte	0x191
 7983 1f04 E51E0000 		.4byte	0x1ee5
 7984 1f08 05       		.uleb128 0x5
 7985 1f09 03       		.byte	0x3
 7986 1f0a 2C020000 		.4byte	xYieldPending
 7987 1f0e 23       		.uleb128 0x23
 7988 1f0f 150B0000 		.4byte	.LASF236
 7989 1f13 01       		.byte	0x1
 7990 1f14 9201     		.2byte	0x192
 7991 1f16 E51E0000 		.4byte	0x1ee5
 7992 1f1a 05       		.uleb128 0x5
 7993 1f1b 03       		.byte	0x3
 7994 1f1c 24020000 		.4byte	xNumOfOverflows
 7995 1f20 23       		.uleb128 0x23
 7996 1f21 340A0000 		.4byte	.LASF237
 7997 1f25 01       		.byte	0x1
 7998 1f26 9301     		.2byte	0x193
 7999 1f28 7B030000 		.4byte	0x37b
 8000 1f2c 05       		.uleb128 0x5
 8001 1f2d 03       		.byte	0x3
 8002 1f2e 0C020000 		.4byte	uxTaskNumber
 8003 1f32 23       		.uleb128 0x23
 8004 1f33 C0080000 		.4byte	.LASF238
 8005 1f37 01       		.byte	0x1
 8006 1f38 9401     		.2byte	0x194
 8007 1f3a BC1E0000 		.4byte	0x1ebc
 8008 1f3e 05       		.uleb128 0x5
 8009 1f3f 03       		.byte	0x3
 8010 1f40 2C000000 		.4byte	xNextTaskUnblockTime
 8011 1f44 23       		.uleb128 0x23
 8012 1f45 120D0000 		.4byte	.LASF239
 8013 1f49 01       		.byte	0x1
 8014 1f4a 9501     		.2byte	0x195
 8015 1f4c 79040000 		.4byte	0x479
 8016 1f50 05       		.uleb128 0x5
 8017 1f51 03       		.byte	0x3
 8018 1f52 20020000 		.4byte	xIdleTaskHandle
 8019 1f56 23       		.uleb128 0x23
 8020 1f57 3D100000 		.4byte	.LASF240
 8021 1f5b 01       		.byte	0x1
 8022 1f5c 9F01     		.2byte	0x19f
 8023 1f5e 811E0000 		.4byte	0x1e81
 8024 1f62 05       		.uleb128 0x5
 8025 1f63 03       		.byte	0x3
 8026 1f64 1C020000 		.4byte	uxSchedulerSuspended
 8027 1f68 36       		.uleb128 0x36
 8028 1f69 D70B0000 		.4byte	.LASF241
 8029 1f6d 0D       		.byte	0xd
 8030 1f6e EA07     		.2byte	0x7ea
 8031 1f70 741F0000 		.4byte	0x1f74
 8032 1f74 08       		.uleb128 0x8
 8033 1f75 E0000000 		.4byte	0xe0
 8034 1f79 37       		.uleb128 0x37
 8035 1f7a 38020000 		.4byte	.LASF242
 8036 1f7e 0E       		.byte	0xe
 8037 1f7f 5E       		.byte	0x5e
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 241


 8038 1f80 C7010000 		.4byte	0x1c7
 8039 1f84 36       		.uleb128 0x36
 8040 1f85 770F0000 		.4byte	.LASF243
 8041 1f89 09       		.byte	0x9
 8042 1f8a 6001     		.2byte	0x160
 8043 1f8c EB000000 		.4byte	0xeb
 8044 1f90 11       		.uleb128 0x11
 8045 1f91 A01F0000 		.4byte	0x1fa0
 8046 1f95 A01F0000 		.4byte	0x1fa0
 8047 1f99 12       		.uleb128 0x12
 8048 1f9a A9000000 		.4byte	0xa9
 8049 1f9e 00       		.byte	0
 8050 1f9f 00       		.byte	0
 8051 1fa0 07       		.uleb128 0x7
 8052 1fa1 3E030000 		.4byte	0x33e
 8053 1fa5 36       		.uleb128 0x36
 8054 1fa6 7E0B0000 		.4byte	.LASF244
 8055 1faa 09       		.byte	0x9
 8056 1fab 6401     		.2byte	0x164
 8057 1fad B11F0000 		.4byte	0x1fb1
 8058 1fb1 07       		.uleb128 0x7
 8059 1fb2 901F0000 		.4byte	0x1f90
 8060 1fb6 38       		.uleb128 0x38
 8061 1fb7 3B0B0000 		.4byte	.LASF245
 8062 1fbb 01       		.byte	0x1
 8063 1fbc 7401     		.2byte	0x174
 8064 1fbe C81F0000 		.4byte	0x1fc8
 8065 1fc2 05       		.uleb128 0x5
 8066 1fc3 03       		.byte	0x3
 8067 1fc4 00000000 		.4byte	pxCurrentTCB
 8068 1fc8 08       		.uleb128 0x8
 8069 1fc9 AD060000 		.4byte	0x6ad
 8070 1fcd 39       		.uleb128 0x39
 8071 1fce 970C0000 		.4byte	.LASF246
 8072 1fd2 970C0000 		.4byte	.LASF246
 8073 1fd6 0F       		.byte	0xf
 8074 1fd7 AC       		.byte	0xac
 8075 1fd8 39       		.uleb128 0x39
 8076 1fd9 CA090000 		.4byte	.LASF247
 8077 1fdd CA090000 		.4byte	.LASF247
 8078 1fe1 10       		.byte	0x10
 8079 1fe2 19       		.byte	0x19
 8080 1fe3 3A       		.uleb128 0x3a
 8081 1fe4 8D0B0000 		.4byte	.LASF248
 8082 1fe8 8D0B0000 		.4byte	.LASF248
 8083 1fec 0B       		.byte	0xb
 8084 1fed 8D01     		.2byte	0x18d
 8085 1fef 39       		.uleb128 0x39
 8086 1ff0 F2080000 		.4byte	.LASF249
 8087 1ff4 F2080000 		.4byte	.LASF249
 8088 1ff8 0F       		.byte	0xf
 8089 1ff9 90       		.byte	0x90
 8090 1ffa 3A       		.uleb128 0x3a
 8091 1ffb 900E0000 		.4byte	.LASF250
 8092 1fff 900E0000 		.4byte	.LASF250
 8093 2003 0B       		.byte	0xb
 8094 2004 8201     		.2byte	0x182
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 242


 8095 2006 39       		.uleb128 0x39
 8096 2007 8A020000 		.4byte	.LASF251
 8097 200b 8A020000 		.4byte	.LASF251
 8098 200f 02       		.byte	0x2
 8099 2010 8D       		.byte	0x8d
 8100 2011 3A       		.uleb128 0x3a
 8101 2012 53060000 		.4byte	.LASF252
 8102 2016 53060000 		.4byte	.LASF252
 8103 201a 0B       		.byte	0xb
 8104 201b AF01     		.2byte	0x1af
 8105 201d 39       		.uleb128 0x39
 8106 201e 2E000000 		.4byte	.LASF253
 8107 2022 2E000000 		.4byte	.LASF253
 8108 2026 02       		.byte	0x2
 8109 2027 8E       		.byte	0x8e
 8110 2028 3A       		.uleb128 0x3a
 8111 2029 F8030000 		.4byte	.LASF254
 8112 202d F8030000 		.4byte	.LASF254
 8113 2031 0B       		.byte	0xb
 8114 2032 BE01     		.2byte	0x1be
 8115 2034 3A       		.uleb128 0x3a
 8116 2035 BF0E0000 		.4byte	.LASF255
 8117 2039 BF0E0000 		.4byte	.LASF255
 8118 203d 0B       		.byte	0xb
 8119 203e 9A01     		.2byte	0x19a
 8120 2040 39       		.uleb128 0x39
 8121 2041 9C100000 		.4byte	.LASF256
 8122 2045 9C100000 		.4byte	.LASF256
 8123 2049 0F       		.byte	0xf
 8124 204a AB       		.byte	0xab
 8125 204b 39       		.uleb128 0x39
 8126 204c A00E0000 		.4byte	.LASF257
 8127 2050 A00E0000 		.4byte	.LASF257
 8128 2054 02       		.byte	0x2
 8129 2055 9F       		.byte	0x9f
 8130 2056 3A       		.uleb128 0x3a
 8131 2057 B5030000 		.4byte	.LASF258
 8132 205b B5030000 		.4byte	.LASF258
 8133 205f 11       		.byte	0x11
 8134 2060 1905     		.2byte	0x519
 8135 2062 39       		.uleb128 0x39
 8136 2063 40000000 		.4byte	.LASF259
 8137 2067 40000000 		.4byte	.LASF259
 8138 206b 0F       		.byte	0xf
 8139 206c B5       		.byte	0xb5
 8140 206d 39       		.uleb128 0x39
 8141 206e 850C0000 		.4byte	.LASF260
 8142 2072 850C0000 		.4byte	.LASF260
 8143 2076 0F       		.byte	0xf
 8144 2077 BC       		.byte	0xbc
 8145 2078 3A       		.uleb128 0x3a
 8146 2079 AC020000 		.4byte	.LASF261
 8147 207d AC020000 		.4byte	.LASF261
 8148 2081 01       		.byte	0x1
 8149 2082 760C     		.2byte	0xc76
 8150 2084 3A       		.uleb128 0x3a
 8151 2085 560B0000 		.4byte	.LASF262
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 243


 8152 2089 560B0000 		.4byte	.LASF262
 8153 208d 01       		.byte	0x1
 8154 208e AE01     		.2byte	0x1ae
 8155 2090 00       		.byte	0
 8156              		.section	.debug_abbrev,"",%progbits
 8157              	.Ldebug_abbrev0:
 8158 0000 01       		.uleb128 0x1
 8159 0001 11       		.uleb128 0x11
 8160 0002 01       		.byte	0x1
 8161 0003 25       		.uleb128 0x25
 8162 0004 0E       		.uleb128 0xe
 8163 0005 13       		.uleb128 0x13
 8164 0006 0B       		.uleb128 0xb
 8165 0007 03       		.uleb128 0x3
 8166 0008 0E       		.uleb128 0xe
 8167 0009 1B       		.uleb128 0x1b
 8168 000a 0E       		.uleb128 0xe
 8169 000b 55       		.uleb128 0x55
 8170 000c 17       		.uleb128 0x17
 8171 000d 11       		.uleb128 0x11
 8172 000e 01       		.uleb128 0x1
 8173 000f 10       		.uleb128 0x10
 8174 0010 17       		.uleb128 0x17
 8175 0011 00       		.byte	0
 8176 0012 00       		.byte	0
 8177 0013 02       		.uleb128 0x2
 8178 0014 16       		.uleb128 0x16
 8179 0015 00       		.byte	0
 8180 0016 03       		.uleb128 0x3
 8181 0017 0E       		.uleb128 0xe
 8182 0018 3A       		.uleb128 0x3a
 8183 0019 0B       		.uleb128 0xb
 8184 001a 3B       		.uleb128 0x3b
 8185 001b 0B       		.uleb128 0xb
 8186 001c 49       		.uleb128 0x49
 8187 001d 13       		.uleb128 0x13
 8188 001e 00       		.byte	0
 8189 001f 00       		.byte	0
 8190 0020 03       		.uleb128 0x3
 8191 0021 24       		.uleb128 0x24
 8192 0022 00       		.byte	0
 8193 0023 0B       		.uleb128 0xb
 8194 0024 0B       		.uleb128 0xb
 8195 0025 3E       		.uleb128 0x3e
 8196 0026 0B       		.uleb128 0xb
 8197 0027 03       		.uleb128 0x3
 8198 0028 0E       		.uleb128 0xe
 8199 0029 00       		.byte	0
 8200 002a 00       		.byte	0
 8201 002b 04       		.uleb128 0x4
 8202 002c 24       		.uleb128 0x24
 8203 002d 00       		.byte	0
 8204 002e 0B       		.uleb128 0xb
 8205 002f 0B       		.uleb128 0xb
 8206 0030 3E       		.uleb128 0x3e
 8207 0031 0B       		.uleb128 0xb
 8208 0032 03       		.uleb128 0x3
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 244


 8209 0033 08       		.uleb128 0x8
 8210 0034 00       		.byte	0
 8211 0035 00       		.byte	0
 8212 0036 05       		.uleb128 0x5
 8213 0037 0F       		.uleb128 0xf
 8214 0038 00       		.byte	0
 8215 0039 0B       		.uleb128 0xb
 8216 003a 0B       		.uleb128 0xb
 8217 003b 00       		.byte	0
 8218 003c 00       		.byte	0
 8219 003d 06       		.uleb128 0x6
 8220 003e 0F       		.uleb128 0xf
 8221 003f 00       		.byte	0
 8222 0040 0B       		.uleb128 0xb
 8223 0041 0B       		.uleb128 0xb
 8224 0042 49       		.uleb128 0x49
 8225 0043 13       		.uleb128 0x13
 8226 0044 00       		.byte	0
 8227 0045 00       		.byte	0
 8228 0046 07       		.uleb128 0x7
 8229 0047 26       		.uleb128 0x26
 8230 0048 00       		.byte	0
 8231 0049 49       		.uleb128 0x49
 8232 004a 13       		.uleb128 0x13
 8233 004b 00       		.byte	0
 8234 004c 00       		.byte	0
 8235 004d 08       		.uleb128 0x8
 8236 004e 35       		.uleb128 0x35
 8237 004f 00       		.byte	0
 8238 0050 49       		.uleb128 0x49
 8239 0051 13       		.uleb128 0x13
 8240 0052 00       		.byte	0
 8241 0053 00       		.byte	0
 8242 0054 09       		.uleb128 0x9
 8243 0055 16       		.uleb128 0x16
 8244 0056 00       		.byte	0
 8245 0057 03       		.uleb128 0x3
 8246 0058 0E       		.uleb128 0xe
 8247 0059 3A       		.uleb128 0x3a
 8248 005a 0B       		.uleb128 0xb
 8249 005b 3B       		.uleb128 0x3b
 8250 005c 05       		.uleb128 0x5
 8251 005d 49       		.uleb128 0x49
 8252 005e 13       		.uleb128 0x13
 8253 005f 00       		.byte	0
 8254 0060 00       		.byte	0
 8255 0061 0A       		.uleb128 0xa
 8256 0062 15       		.uleb128 0x15
 8257 0063 01       		.byte	0x1
 8258 0064 27       		.uleb128 0x27
 8259 0065 19       		.uleb128 0x19
 8260 0066 01       		.uleb128 0x1
 8261 0067 13       		.uleb128 0x13
 8262 0068 00       		.byte	0
 8263 0069 00       		.byte	0
 8264 006a 0B       		.uleb128 0xb
 8265 006b 05       		.uleb128 0x5
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 245


 8266 006c 00       		.byte	0
 8267 006d 49       		.uleb128 0x49
 8268 006e 13       		.uleb128 0x13
 8269 006f 00       		.byte	0
 8270 0070 00       		.byte	0
 8271 0071 0C       		.uleb128 0xc
 8272 0072 13       		.uleb128 0x13
 8273 0073 01       		.byte	0x1
 8274 0074 03       		.uleb128 0x3
 8275 0075 0E       		.uleb128 0xe
 8276 0076 0B       		.uleb128 0xb
 8277 0077 0B       		.uleb128 0xb
 8278 0078 3A       		.uleb128 0x3a
 8279 0079 0B       		.uleb128 0xb
 8280 007a 3B       		.uleb128 0x3b
 8281 007b 05       		.uleb128 0x5
 8282 007c 01       		.uleb128 0x1
 8283 007d 13       		.uleb128 0x13
 8284 007e 00       		.byte	0
 8285 007f 00       		.byte	0
 8286 0080 0D       		.uleb128 0xd
 8287 0081 0D       		.uleb128 0xd
 8288 0082 00       		.byte	0
 8289 0083 03       		.uleb128 0x3
 8290 0084 0E       		.uleb128 0xe
 8291 0085 3A       		.uleb128 0x3a
 8292 0086 0B       		.uleb128 0xb
 8293 0087 3B       		.uleb128 0x3b
 8294 0088 05       		.uleb128 0x5
 8295 0089 49       		.uleb128 0x49
 8296 008a 13       		.uleb128 0x13
 8297 008b 38       		.uleb128 0x38
 8298 008c 0B       		.uleb128 0xb
 8299 008d 00       		.byte	0
 8300 008e 00       		.byte	0
 8301 008f 0E       		.uleb128 0xe
 8302 0090 04       		.uleb128 0x4
 8303 0091 01       		.byte	0x1
 8304 0092 0B       		.uleb128 0xb
 8305 0093 0B       		.uleb128 0xb
 8306 0094 49       		.uleb128 0x49
 8307 0095 13       		.uleb128 0x13
 8308 0096 3A       		.uleb128 0x3a
 8309 0097 0B       		.uleb128 0xb
 8310 0098 3B       		.uleb128 0x3b
 8311 0099 05       		.uleb128 0x5
 8312 009a 01       		.uleb128 0x1
 8313 009b 13       		.uleb128 0x13
 8314 009c 00       		.byte	0
 8315 009d 00       		.byte	0
 8316 009e 0F       		.uleb128 0xf
 8317 009f 28       		.uleb128 0x28
 8318 00a0 00       		.byte	0
 8319 00a1 03       		.uleb128 0x3
 8320 00a2 0E       		.uleb128 0xe
 8321 00a3 1C       		.uleb128 0x1c
 8322 00a4 0B       		.uleb128 0xb
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 246


 8323 00a5 00       		.byte	0
 8324 00a6 00       		.byte	0
 8325 00a7 10       		.uleb128 0x10
 8326 00a8 13       		.uleb128 0x13
 8327 00a9 01       		.byte	0x1
 8328 00aa 0B       		.uleb128 0xb
 8329 00ab 0B       		.uleb128 0xb
 8330 00ac 3A       		.uleb128 0x3a
 8331 00ad 0B       		.uleb128 0xb
 8332 00ae 3B       		.uleb128 0x3b
 8333 00af 05       		.uleb128 0x5
 8334 00b0 01       		.uleb128 0x1
 8335 00b1 13       		.uleb128 0x13
 8336 00b2 00       		.byte	0
 8337 00b3 00       		.byte	0
 8338 00b4 11       		.uleb128 0x11
 8339 00b5 01       		.uleb128 0x1
 8340 00b6 01       		.byte	0x1
 8341 00b7 49       		.uleb128 0x49
 8342 00b8 13       		.uleb128 0x13
 8343 00b9 01       		.uleb128 0x1
 8344 00ba 13       		.uleb128 0x13
 8345 00bb 00       		.byte	0
 8346 00bc 00       		.byte	0
 8347 00bd 12       		.uleb128 0x12
 8348 00be 21       		.uleb128 0x21
 8349 00bf 00       		.byte	0
 8350 00c0 49       		.uleb128 0x49
 8351 00c1 13       		.uleb128 0x13
 8352 00c2 2F       		.uleb128 0x2f
 8353 00c3 0B       		.uleb128 0xb
 8354 00c4 00       		.byte	0
 8355 00c5 00       		.byte	0
 8356 00c6 13       		.uleb128 0x13
 8357 00c7 13       		.uleb128 0x13
 8358 00c8 01       		.byte	0x1
 8359 00c9 0B       		.uleb128 0xb
 8360 00ca 0B       		.uleb128 0xb
 8361 00cb 3A       		.uleb128 0x3a
 8362 00cc 0B       		.uleb128 0xb
 8363 00cd 3B       		.uleb128 0x3b
 8364 00ce 0B       		.uleb128 0xb
 8365 00cf 01       		.uleb128 0x1
 8366 00d0 13       		.uleb128 0x13
 8367 00d1 00       		.byte	0
 8368 00d2 00       		.byte	0
 8369 00d3 14       		.uleb128 0x14
 8370 00d4 0D       		.uleb128 0xd
 8371 00d5 00       		.byte	0
 8372 00d6 03       		.uleb128 0x3
 8373 00d7 0E       		.uleb128 0xe
 8374 00d8 3A       		.uleb128 0x3a
 8375 00d9 0B       		.uleb128 0xb
 8376 00da 3B       		.uleb128 0x3b
 8377 00db 0B       		.uleb128 0xb
 8378 00dc 49       		.uleb128 0x49
 8379 00dd 13       		.uleb128 0x13
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 247


 8380 00de 38       		.uleb128 0x38
 8381 00df 0B       		.uleb128 0xb
 8382 00e0 00       		.byte	0
 8383 00e1 00       		.byte	0
 8384 00e2 15       		.uleb128 0x15
 8385 00e3 13       		.uleb128 0x13
 8386 00e4 01       		.byte	0x1
 8387 00e5 03       		.uleb128 0x3
 8388 00e6 0E       		.uleb128 0xe
 8389 00e7 0B       		.uleb128 0xb
 8390 00e8 0B       		.uleb128 0xb
 8391 00e9 3A       		.uleb128 0x3a
 8392 00ea 0B       		.uleb128 0xb
 8393 00eb 3B       		.uleb128 0x3b
 8394 00ec 0B       		.uleb128 0xb
 8395 00ed 01       		.uleb128 0x1
 8396 00ee 13       		.uleb128 0x13
 8397 00ef 00       		.byte	0
 8398 00f0 00       		.byte	0
 8399 00f1 16       		.uleb128 0x16
 8400 00f2 04       		.uleb128 0x4
 8401 00f3 01       		.byte	0x1
 8402 00f4 0B       		.uleb128 0xb
 8403 00f5 0B       		.uleb128 0xb
 8404 00f6 49       		.uleb128 0x49
 8405 00f7 13       		.uleb128 0x13
 8406 00f8 3A       		.uleb128 0x3a
 8407 00f9 0B       		.uleb128 0xb
 8408 00fa 3B       		.uleb128 0x3b
 8409 00fb 0B       		.uleb128 0xb
 8410 00fc 01       		.uleb128 0x1
 8411 00fd 13       		.uleb128 0x13
 8412 00fe 00       		.byte	0
 8413 00ff 00       		.byte	0
 8414 0100 17       		.uleb128 0x17
 8415 0101 2E       		.uleb128 0x2e
 8416 0102 01       		.byte	0x1
 8417 0103 03       		.uleb128 0x3
 8418 0104 0E       		.uleb128 0xe
 8419 0105 3A       		.uleb128 0x3a
 8420 0106 0B       		.uleb128 0xb
 8421 0107 3B       		.uleb128 0x3b
 8422 0108 0B       		.uleb128 0xb
 8423 0109 27       		.uleb128 0x27
 8424 010a 19       		.uleb128 0x19
 8425 010b 49       		.uleb128 0x49
 8426 010c 13       		.uleb128 0x13
 8427 010d 20       		.uleb128 0x20
 8428 010e 0B       		.uleb128 0xb
 8429 010f 01       		.uleb128 0x1
 8430 0110 13       		.uleb128 0x13
 8431 0111 00       		.byte	0
 8432 0112 00       		.byte	0
 8433 0113 18       		.uleb128 0x18
 8434 0114 34       		.uleb128 0x34
 8435 0115 00       		.byte	0
 8436 0116 03       		.uleb128 0x3
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 248


 8437 0117 0E       		.uleb128 0xe
 8438 0118 3A       		.uleb128 0x3a
 8439 0119 0B       		.uleb128 0xb
 8440 011a 3B       		.uleb128 0x3b
 8441 011b 0B       		.uleb128 0xb
 8442 011c 49       		.uleb128 0x49
 8443 011d 13       		.uleb128 0x13
 8444 011e 00       		.byte	0
 8445 011f 00       		.byte	0
 8446 0120 19       		.uleb128 0x19
 8447 0121 2E       		.uleb128 0x2e
 8448 0122 01       		.byte	0x1
 8449 0123 03       		.uleb128 0x3
 8450 0124 0E       		.uleb128 0xe
 8451 0125 3A       		.uleb128 0x3a
 8452 0126 0B       		.uleb128 0xb
 8453 0127 3B       		.uleb128 0x3b
 8454 0128 0B       		.uleb128 0xb
 8455 0129 27       		.uleb128 0x27
 8456 012a 19       		.uleb128 0x19
 8457 012b 20       		.uleb128 0x20
 8458 012c 0B       		.uleb128 0xb
 8459 012d 01       		.uleb128 0x1
 8460 012e 13       		.uleb128 0x13
 8461 012f 00       		.byte	0
 8462 0130 00       		.byte	0
 8463 0131 1A       		.uleb128 0x1a
 8464 0132 05       		.uleb128 0x5
 8465 0133 00       		.byte	0
 8466 0134 03       		.uleb128 0x3
 8467 0135 0E       		.uleb128 0xe
 8468 0136 3A       		.uleb128 0x3a
 8469 0137 0B       		.uleb128 0xb
 8470 0138 3B       		.uleb128 0x3b
 8471 0139 0B       		.uleb128 0xb
 8472 013a 49       		.uleb128 0x49
 8473 013b 13       		.uleb128 0x13
 8474 013c 00       		.byte	0
 8475 013d 00       		.byte	0
 8476 013e 1B       		.uleb128 0x1b
 8477 013f 2E       		.uleb128 0x2e
 8478 0140 01       		.byte	0x1
 8479 0141 03       		.uleb128 0x3
 8480 0142 0E       		.uleb128 0xe
 8481 0143 3A       		.uleb128 0x3a
 8482 0144 0B       		.uleb128 0xb
 8483 0145 3B       		.uleb128 0x3b
 8484 0146 05       		.uleb128 0x5
 8485 0147 27       		.uleb128 0x27
 8486 0148 19       		.uleb128 0x19
 8487 0149 49       		.uleb128 0x49
 8488 014a 13       		.uleb128 0x13
 8489 014b 11       		.uleb128 0x11
 8490 014c 01       		.uleb128 0x1
 8491 014d 12       		.uleb128 0x12
 8492 014e 06       		.uleb128 0x6
 8493 014f 40       		.uleb128 0x40
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 249


 8494 0150 18       		.uleb128 0x18
 8495 0151 9742     		.uleb128 0x2117
 8496 0153 19       		.uleb128 0x19
 8497 0154 01       		.uleb128 0x1
 8498 0155 13       		.uleb128 0x13
 8499 0156 00       		.byte	0
 8500 0157 00       		.byte	0
 8501 0158 1C       		.uleb128 0x1c
 8502 0159 05       		.uleb128 0x5
 8503 015a 00       		.byte	0
 8504 015b 03       		.uleb128 0x3
 8505 015c 0E       		.uleb128 0xe
 8506 015d 3A       		.uleb128 0x3a
 8507 015e 0B       		.uleb128 0xb
 8508 015f 3B       		.uleb128 0x3b
 8509 0160 05       		.uleb128 0x5
 8510 0161 49       		.uleb128 0x49
 8511 0162 13       		.uleb128 0x13
 8512 0163 02       		.uleb128 0x2
 8513 0164 17       		.uleb128 0x17
 8514 0165 00       		.byte	0
 8515 0166 00       		.byte	0
 8516 0167 1D       		.uleb128 0x1d
 8517 0168 34       		.uleb128 0x34
 8518 0169 00       		.byte	0
 8519 016a 03       		.uleb128 0x3
 8520 016b 0E       		.uleb128 0xe
 8521 016c 3A       		.uleb128 0x3a
 8522 016d 0B       		.uleb128 0xb
 8523 016e 3B       		.uleb128 0x3b
 8524 016f 05       		.uleb128 0x5
 8525 0170 49       		.uleb128 0x49
 8526 0171 13       		.uleb128 0x13
 8527 0172 02       		.uleb128 0x2
 8528 0173 17       		.uleb128 0x17
 8529 0174 00       		.byte	0
 8530 0175 00       		.byte	0
 8531 0176 1E       		.uleb128 0x1e
 8532 0177 2E       		.uleb128 0x2e
 8533 0178 01       		.byte	0x1
 8534 0179 03       		.uleb128 0x3
 8535 017a 0E       		.uleb128 0xe
 8536 017b 3A       		.uleb128 0x3a
 8537 017c 0B       		.uleb128 0xb
 8538 017d 3B       		.uleb128 0x3b
 8539 017e 05       		.uleb128 0x5
 8540 017f 27       		.uleb128 0x27
 8541 0180 19       		.uleb128 0x19
 8542 0181 11       		.uleb128 0x11
 8543 0182 01       		.uleb128 0x1
 8544 0183 12       		.uleb128 0x12
 8545 0184 06       		.uleb128 0x6
 8546 0185 40       		.uleb128 0x40
 8547 0186 18       		.uleb128 0x18
 8548 0187 9742     		.uleb128 0x2117
 8549 0189 19       		.uleb128 0x19
 8550 018a 01       		.uleb128 0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 250


 8551 018b 13       		.uleb128 0x13
 8552 018c 00       		.byte	0
 8553 018d 00       		.byte	0
 8554 018e 1F       		.uleb128 0x1f
 8555 018f 898201   		.uleb128 0x4109
 8556 0192 00       		.byte	0
 8557 0193 11       		.uleb128 0x11
 8558 0194 01       		.uleb128 0x1
 8559 0195 31       		.uleb128 0x31
 8560 0196 13       		.uleb128 0x13
 8561 0197 00       		.byte	0
 8562 0198 00       		.byte	0
 8563 0199 20       		.uleb128 0x20
 8564 019a 898201   		.uleb128 0x4109
 8565 019d 01       		.byte	0x1
 8566 019e 11       		.uleb128 0x11
 8567 019f 01       		.uleb128 0x1
 8568 01a0 31       		.uleb128 0x31
 8569 01a1 13       		.uleb128 0x13
 8570 01a2 00       		.byte	0
 8571 01a3 00       		.byte	0
 8572 01a4 21       		.uleb128 0x21
 8573 01a5 8A8201   		.uleb128 0x410a
 8574 01a8 00       		.byte	0
 8575 01a9 02       		.uleb128 0x2
 8576 01aa 18       		.uleb128 0x18
 8577 01ab 9142     		.uleb128 0x2111
 8578 01ad 18       		.uleb128 0x18
 8579 01ae 00       		.byte	0
 8580 01af 00       		.byte	0
 8581 01b0 22       		.uleb128 0x22
 8582 01b1 05       		.uleb128 0x5
 8583 01b2 00       		.byte	0
 8584 01b3 03       		.uleb128 0x3
 8585 01b4 0E       		.uleb128 0xe
 8586 01b5 3A       		.uleb128 0x3a
 8587 01b6 0B       		.uleb128 0xb
 8588 01b7 3B       		.uleb128 0x3b
 8589 01b8 05       		.uleb128 0x5
 8590 01b9 49       		.uleb128 0x49
 8591 01ba 13       		.uleb128 0x13
 8592 01bb 02       		.uleb128 0x2
 8593 01bc 18       		.uleb128 0x18
 8594 01bd 00       		.byte	0
 8595 01be 00       		.byte	0
 8596 01bf 23       		.uleb128 0x23
 8597 01c0 34       		.uleb128 0x34
 8598 01c1 00       		.byte	0
 8599 01c2 03       		.uleb128 0x3
 8600 01c3 0E       		.uleb128 0xe
 8601 01c4 3A       		.uleb128 0x3a
 8602 01c5 0B       		.uleb128 0xb
 8603 01c6 3B       		.uleb128 0x3b
 8604 01c7 05       		.uleb128 0x5
 8605 01c8 49       		.uleb128 0x49
 8606 01c9 13       		.uleb128 0x13
 8607 01ca 02       		.uleb128 0x2
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 251


 8608 01cb 18       		.uleb128 0x18
 8609 01cc 00       		.byte	0
 8610 01cd 00       		.byte	0
 8611 01ce 24       		.uleb128 0x24
 8612 01cf 34       		.uleb128 0x34
 8613 01d0 00       		.byte	0
 8614 01d1 03       		.uleb128 0x3
 8615 01d2 08       		.uleb128 0x8
 8616 01d3 3A       		.uleb128 0x3a
 8617 01d4 0B       		.uleb128 0xb
 8618 01d5 3B       		.uleb128 0x3b
 8619 01d6 05       		.uleb128 0x5
 8620 01d7 49       		.uleb128 0x49
 8621 01d8 13       		.uleb128 0x13
 8622 01d9 02       		.uleb128 0x2
 8623 01da 17       		.uleb128 0x17
 8624 01db 00       		.byte	0
 8625 01dc 00       		.byte	0
 8626 01dd 25       		.uleb128 0x25
 8627 01de 898201   		.uleb128 0x4109
 8628 01e1 01       		.byte	0x1
 8629 01e2 11       		.uleb128 0x11
 8630 01e3 01       		.uleb128 0x1
 8631 01e4 31       		.uleb128 0x31
 8632 01e5 13       		.uleb128 0x13
 8633 01e6 01       		.uleb128 0x1
 8634 01e7 13       		.uleb128 0x13
 8635 01e8 00       		.byte	0
 8636 01e9 00       		.byte	0
 8637 01ea 26       		.uleb128 0x26
 8638 01eb 2E       		.uleb128 0x2e
 8639 01ec 01       		.byte	0x1
 8640 01ed 3F       		.uleb128 0x3f
 8641 01ee 19       		.uleb128 0x19
 8642 01ef 03       		.uleb128 0x3
 8643 01f0 0E       		.uleb128 0xe
 8644 01f1 3A       		.uleb128 0x3a
 8645 01f2 0B       		.uleb128 0xb
 8646 01f3 3B       		.uleb128 0x3b
 8647 01f4 05       		.uleb128 0x5
 8648 01f5 27       		.uleb128 0x27
 8649 01f6 19       		.uleb128 0x19
 8650 01f7 49       		.uleb128 0x49
 8651 01f8 13       		.uleb128 0x13
 8652 01f9 11       		.uleb128 0x11
 8653 01fa 01       		.uleb128 0x1
 8654 01fb 12       		.uleb128 0x12
 8655 01fc 06       		.uleb128 0x6
 8656 01fd 40       		.uleb128 0x40
 8657 01fe 18       		.uleb128 0x18
 8658 01ff 9742     		.uleb128 0x2117
 8659 0201 19       		.uleb128 0x19
 8660 0202 01       		.uleb128 0x1
 8661 0203 13       		.uleb128 0x13
 8662 0204 00       		.byte	0
 8663 0205 00       		.byte	0
 8664 0206 27       		.uleb128 0x27
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 252


 8665 0207 0B       		.uleb128 0xb
 8666 0208 01       		.byte	0x1
 8667 0209 11       		.uleb128 0x11
 8668 020a 01       		.uleb128 0x1
 8669 020b 12       		.uleb128 0x12
 8670 020c 06       		.uleb128 0x6
 8671 020d 01       		.uleb128 0x1
 8672 020e 13       		.uleb128 0x13
 8673 020f 00       		.byte	0
 8674 0210 00       		.byte	0
 8675 0211 28       		.uleb128 0x28
 8676 0212 2E       		.uleb128 0x2e
 8677 0213 01       		.byte	0x1
 8678 0214 3F       		.uleb128 0x3f
 8679 0215 19       		.uleb128 0x19
 8680 0216 03       		.uleb128 0x3
 8681 0217 0E       		.uleb128 0xe
 8682 0218 3A       		.uleb128 0x3a
 8683 0219 0B       		.uleb128 0xb
 8684 021a 3B       		.uleb128 0x3b
 8685 021b 05       		.uleb128 0x5
 8686 021c 27       		.uleb128 0x27
 8687 021d 19       		.uleb128 0x19
 8688 021e 11       		.uleb128 0x11
 8689 021f 01       		.uleb128 0x1
 8690 0220 12       		.uleb128 0x12
 8691 0221 06       		.uleb128 0x6
 8692 0222 40       		.uleb128 0x40
 8693 0223 18       		.uleb128 0x18
 8694 0224 9742     		.uleb128 0x2117
 8695 0226 19       		.uleb128 0x19
 8696 0227 01       		.uleb128 0x1
 8697 0228 13       		.uleb128 0x13
 8698 0229 00       		.byte	0
 8699 022a 00       		.byte	0
 8700 022b 29       		.uleb128 0x29
 8701 022c 34       		.uleb128 0x34
 8702 022d 00       		.byte	0
 8703 022e 03       		.uleb128 0x3
 8704 022f 0E       		.uleb128 0xe
 8705 0230 3A       		.uleb128 0x3a
 8706 0231 0B       		.uleb128 0xb
 8707 0232 3B       		.uleb128 0x3b
 8708 0233 05       		.uleb128 0x5
 8709 0234 49       		.uleb128 0x49
 8710 0235 13       		.uleb128 0x13
 8711 0236 00       		.byte	0
 8712 0237 00       		.byte	0
 8713 0238 2A       		.uleb128 0x2a
 8714 0239 1D       		.uleb128 0x1d
 8715 023a 01       		.byte	0x1
 8716 023b 31       		.uleb128 0x31
 8717 023c 13       		.uleb128 0x13
 8718 023d 11       		.uleb128 0x11
 8719 023e 01       		.uleb128 0x1
 8720 023f 12       		.uleb128 0x12
 8721 0240 06       		.uleb128 0x6
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 253


 8722 0241 58       		.uleb128 0x58
 8723 0242 0B       		.uleb128 0xb
 8724 0243 59       		.uleb128 0x59
 8725 0244 05       		.uleb128 0x5
 8726 0245 01       		.uleb128 0x1
 8727 0246 13       		.uleb128 0x13
 8728 0247 00       		.byte	0
 8729 0248 00       		.byte	0
 8730 0249 2B       		.uleb128 0x2b
 8731 024a 0B       		.uleb128 0xb
 8732 024b 01       		.byte	0x1
 8733 024c 11       		.uleb128 0x11
 8734 024d 01       		.uleb128 0x1
 8735 024e 12       		.uleb128 0x12
 8736 024f 06       		.uleb128 0x6
 8737 0250 00       		.byte	0
 8738 0251 00       		.byte	0
 8739 0252 2C       		.uleb128 0x2c
 8740 0253 34       		.uleb128 0x34
 8741 0254 00       		.byte	0
 8742 0255 31       		.uleb128 0x31
 8743 0256 13       		.uleb128 0x13
 8744 0257 00       		.byte	0
 8745 0258 00       		.byte	0
 8746 0259 2D       		.uleb128 0x2d
 8747 025a 05       		.uleb128 0x5
 8748 025b 00       		.byte	0
 8749 025c 31       		.uleb128 0x31
 8750 025d 13       		.uleb128 0x13
 8751 025e 02       		.uleb128 0x2
 8752 025f 17       		.uleb128 0x17
 8753 0260 00       		.byte	0
 8754 0261 00       		.byte	0
 8755 0262 2E       		.uleb128 0x2e
 8756 0263 2E       		.uleb128 0x2e
 8757 0264 00       		.byte	0
 8758 0265 3F       		.uleb128 0x3f
 8759 0266 19       		.uleb128 0x19
 8760 0267 03       		.uleb128 0x3
 8761 0268 0E       		.uleb128 0xe
 8762 0269 3A       		.uleb128 0x3a
 8763 026a 0B       		.uleb128 0xb
 8764 026b 3B       		.uleb128 0x3b
 8765 026c 05       		.uleb128 0x5
 8766 026d 27       		.uleb128 0x27
 8767 026e 19       		.uleb128 0x19
 8768 026f 11       		.uleb128 0x11
 8769 0270 01       		.uleb128 0x1
 8770 0271 12       		.uleb128 0x12
 8771 0272 06       		.uleb128 0x6
 8772 0273 40       		.uleb128 0x40
 8773 0274 18       		.uleb128 0x18
 8774 0275 9742     		.uleb128 0x2117
 8775 0277 19       		.uleb128 0x19
 8776 0278 00       		.byte	0
 8777 0279 00       		.byte	0
 8778 027a 2F       		.uleb128 0x2f
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 254


 8779 027b 34       		.uleb128 0x34
 8780 027c 00       		.byte	0
 8781 027d 03       		.uleb128 0x3
 8782 027e 0E       		.uleb128 0xe
 8783 027f 3A       		.uleb128 0x3a
 8784 0280 0B       		.uleb128 0xb
 8785 0281 3B       		.uleb128 0x3b
 8786 0282 05       		.uleb128 0x5
 8787 0283 49       		.uleb128 0x49
 8788 0284 13       		.uleb128 0x13
 8789 0285 1C       		.uleb128 0x1c
 8790 0286 0B       		.uleb128 0xb
 8791 0287 00       		.byte	0
 8792 0288 00       		.byte	0
 8793 0289 30       		.uleb128 0x30
 8794 028a 2E       		.uleb128 0x2e
 8795 028b 00       		.byte	0
 8796 028c 3F       		.uleb128 0x3f
 8797 028d 19       		.uleb128 0x19
 8798 028e 03       		.uleb128 0x3
 8799 028f 0E       		.uleb128 0xe
 8800 0290 3A       		.uleb128 0x3a
 8801 0291 0B       		.uleb128 0xb
 8802 0292 3B       		.uleb128 0x3b
 8803 0293 05       		.uleb128 0x5
 8804 0294 27       		.uleb128 0x27
 8805 0295 19       		.uleb128 0x19
 8806 0296 49       		.uleb128 0x49
 8807 0297 13       		.uleb128 0x13
 8808 0298 11       		.uleb128 0x11
 8809 0299 01       		.uleb128 0x1
 8810 029a 12       		.uleb128 0x12
 8811 029b 06       		.uleb128 0x6
 8812 029c 40       		.uleb128 0x40
 8813 029d 18       		.uleb128 0x18
 8814 029e 9742     		.uleb128 0x2117
 8815 02a0 19       		.uleb128 0x19
 8816 02a1 00       		.byte	0
 8817 02a2 00       		.byte	0
 8818 02a3 31       		.uleb128 0x31
 8819 02a4 0B       		.uleb128 0xb
 8820 02a5 01       		.byte	0x1
 8821 02a6 55       		.uleb128 0x55
 8822 02a7 17       		.uleb128 0x17
 8823 02a8 00       		.byte	0
 8824 02a9 00       		.byte	0
 8825 02aa 32       		.uleb128 0x32
 8826 02ab 0B       		.uleb128 0xb
 8827 02ac 01       		.byte	0x1
 8828 02ad 55       		.uleb128 0x55
 8829 02ae 17       		.uleb128 0x17
 8830 02af 01       		.uleb128 0x1
 8831 02b0 13       		.uleb128 0x13
 8832 02b1 00       		.byte	0
 8833 02b2 00       		.byte	0
 8834 02b3 33       		.uleb128 0x33
 8835 02b4 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 255


 8836 02b5 01       		.byte	0x1
 8837 02b6 03       		.uleb128 0x3
 8838 02b7 0E       		.uleb128 0xe
 8839 02b8 3A       		.uleb128 0x3a
 8840 02b9 0B       		.uleb128 0xb
 8841 02ba 3B       		.uleb128 0x3b
 8842 02bb 05       		.uleb128 0x5
 8843 02bc 27       		.uleb128 0x27
 8844 02bd 19       		.uleb128 0x19
 8845 02be 8701     		.uleb128 0x87
 8846 02c0 19       		.uleb128 0x19
 8847 02c1 11       		.uleb128 0x11
 8848 02c2 01       		.uleb128 0x1
 8849 02c3 12       		.uleb128 0x12
 8850 02c4 06       		.uleb128 0x6
 8851 02c5 40       		.uleb128 0x40
 8852 02c6 18       		.uleb128 0x18
 8853 02c7 9742     		.uleb128 0x2117
 8854 02c9 19       		.uleb128 0x19
 8855 02ca 01       		.uleb128 0x1
 8856 02cb 13       		.uleb128 0x13
 8857 02cc 00       		.byte	0
 8858 02cd 00       		.byte	0
 8859 02ce 34       		.uleb128 0x34
 8860 02cf 2E       		.uleb128 0x2e
 8861 02d0 00       		.byte	0
 8862 02d1 3F       		.uleb128 0x3f
 8863 02d2 19       		.uleb128 0x19
 8864 02d3 03       		.uleb128 0x3
 8865 02d4 0E       		.uleb128 0xe
 8866 02d5 3A       		.uleb128 0x3a
 8867 02d6 0B       		.uleb128 0xb
 8868 02d7 3B       		.uleb128 0x3b
 8869 02d8 05       		.uleb128 0x5
 8870 02d9 27       		.uleb128 0x27
 8871 02da 19       		.uleb128 0x19
 8872 02db 3C       		.uleb128 0x3c
 8873 02dc 19       		.uleb128 0x19
 8874 02dd 00       		.byte	0
 8875 02de 00       		.byte	0
 8876 02df 35       		.uleb128 0x35
 8877 02e0 34       		.uleb128 0x34
 8878 02e1 00       		.byte	0
 8879 02e2 03       		.uleb128 0x3
 8880 02e3 0E       		.uleb128 0xe
 8881 02e4 3A       		.uleb128 0x3a
 8882 02e5 0B       		.uleb128 0xb
 8883 02e6 3B       		.uleb128 0x3b
 8884 02e7 05       		.uleb128 0x5
 8885 02e8 49       		.uleb128 0x49
 8886 02e9 13       		.uleb128 0x13
 8887 02ea 1C       		.uleb128 0x1c
 8888 02eb 0D       		.uleb128 0xd
 8889 02ec 00       		.byte	0
 8890 02ed 00       		.byte	0
 8891 02ee 36       		.uleb128 0x36
 8892 02ef 34       		.uleb128 0x34
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 256


 8893 02f0 00       		.byte	0
 8894 02f1 03       		.uleb128 0x3
 8895 02f2 0E       		.uleb128 0xe
 8896 02f3 3A       		.uleb128 0x3a
 8897 02f4 0B       		.uleb128 0xb
 8898 02f5 3B       		.uleb128 0x3b
 8899 02f6 05       		.uleb128 0x5
 8900 02f7 49       		.uleb128 0x49
 8901 02f8 13       		.uleb128 0x13
 8902 02f9 3F       		.uleb128 0x3f
 8903 02fa 19       		.uleb128 0x19
 8904 02fb 3C       		.uleb128 0x3c
 8905 02fc 19       		.uleb128 0x19
 8906 02fd 00       		.byte	0
 8907 02fe 00       		.byte	0
 8908 02ff 37       		.uleb128 0x37
 8909 0300 34       		.uleb128 0x34
 8910 0301 00       		.byte	0
 8911 0302 03       		.uleb128 0x3
 8912 0303 0E       		.uleb128 0xe
 8913 0304 3A       		.uleb128 0x3a
 8914 0305 0B       		.uleb128 0xb
 8915 0306 3B       		.uleb128 0x3b
 8916 0307 0B       		.uleb128 0xb
 8917 0308 49       		.uleb128 0x49
 8918 0309 13       		.uleb128 0x13
 8919 030a 3F       		.uleb128 0x3f
 8920 030b 19       		.uleb128 0x19
 8921 030c 3C       		.uleb128 0x3c
 8922 030d 19       		.uleb128 0x19
 8923 030e 00       		.byte	0
 8924 030f 00       		.byte	0
 8925 0310 38       		.uleb128 0x38
 8926 0311 34       		.uleb128 0x34
 8927 0312 00       		.byte	0
 8928 0313 03       		.uleb128 0x3
 8929 0314 0E       		.uleb128 0xe
 8930 0315 3A       		.uleb128 0x3a
 8931 0316 0B       		.uleb128 0xb
 8932 0317 3B       		.uleb128 0x3b
 8933 0318 05       		.uleb128 0x5
 8934 0319 49       		.uleb128 0x49
 8935 031a 13       		.uleb128 0x13
 8936 031b 3F       		.uleb128 0x3f
 8937 031c 19       		.uleb128 0x19
 8938 031d 02       		.uleb128 0x2
 8939 031e 18       		.uleb128 0x18
 8940 031f 00       		.byte	0
 8941 0320 00       		.byte	0
 8942 0321 39       		.uleb128 0x39
 8943 0322 2E       		.uleb128 0x2e
 8944 0323 00       		.byte	0
 8945 0324 3F       		.uleb128 0x3f
 8946 0325 19       		.uleb128 0x19
 8947 0326 3C       		.uleb128 0x3c
 8948 0327 19       		.uleb128 0x19
 8949 0328 6E       		.uleb128 0x6e
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 257


 8950 0329 0E       		.uleb128 0xe
 8951 032a 03       		.uleb128 0x3
 8952 032b 0E       		.uleb128 0xe
 8953 032c 3A       		.uleb128 0x3a
 8954 032d 0B       		.uleb128 0xb
 8955 032e 3B       		.uleb128 0x3b
 8956 032f 0B       		.uleb128 0xb
 8957 0330 00       		.byte	0
 8958 0331 00       		.byte	0
 8959 0332 3A       		.uleb128 0x3a
 8960 0333 2E       		.uleb128 0x2e
 8961 0334 00       		.byte	0
 8962 0335 3F       		.uleb128 0x3f
 8963 0336 19       		.uleb128 0x19
 8964 0337 3C       		.uleb128 0x3c
 8965 0338 19       		.uleb128 0x19
 8966 0339 6E       		.uleb128 0x6e
 8967 033a 0E       		.uleb128 0xe
 8968 033b 03       		.uleb128 0x3
 8969 033c 0E       		.uleb128 0xe
 8970 033d 3A       		.uleb128 0x3a
 8971 033e 0B       		.uleb128 0xb
 8972 033f 3B       		.uleb128 0x3b
 8973 0340 05       		.uleb128 0x5
 8974 0341 00       		.byte	0
 8975 0342 00       		.byte	0
 8976 0343 00       		.byte	0
 8977              		.section	.debug_loc,"",%progbits
 8978              	.Ldebug_loc0:
 8979              	.LLST0:
 8980 0000 00000000 		.4byte	.LVL0
 8981 0004 28000000 		.4byte	.LVL1
 8982 0008 0100     		.2byte	0x1
 8983 000a 50       		.byte	0x50
 8984 000b 28000000 		.4byte	.LVL1
 8985 000f 2A000000 		.4byte	.LVL2
 8986 0013 0400     		.2byte	0x4
 8987 0015 F3       		.byte	0xf3
 8988 0016 01       		.uleb128 0x1
 8989 0017 50       		.byte	0x50
 8990 0018 9F       		.byte	0x9f
 8991 0019 2A000000 		.4byte	.LVL2
 8992 001d 2C000000 		.4byte	.LVL3
 8993 0021 0100     		.2byte	0x1
 8994 0023 50       		.byte	0x50
 8995 0024 2C000000 		.4byte	.LVL3
 8996 0028 2E000000 		.4byte	.LVL4
 8997 002c 0100     		.2byte	0x1
 8998 002e 52       		.byte	0x52
 8999 002f 2E000000 		.4byte	.LVL4
 9000 0033 30000000 		.4byte	.LVL5
 9001 0037 0100     		.2byte	0x1
 9002 0039 50       		.byte	0x50
 9003 003a 30000000 		.4byte	.LVL5
 9004 003e 32000000 		.4byte	.LVL6
 9005 0042 0400     		.2byte	0x4
 9006 0044 F3       		.byte	0xf3
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 258


 9007 0045 01       		.uleb128 0x1
 9008 0046 50       		.byte	0x50
 9009 0047 9F       		.byte	0x9f
 9010 0048 32000000 		.4byte	.LVL6
 9011 004c 34000000 		.4byte	.LVL7
 9012 0050 0100     		.2byte	0x1
 9013 0052 50       		.byte	0x50
 9014 0053 34000000 		.4byte	.LVL7
 9015 0057 40000000 		.4byte	.LFE527
 9016 005b 0400     		.2byte	0x4
 9017 005d F3       		.byte	0xf3
 9018 005e 01       		.uleb128 0x1
 9019 005f 50       		.byte	0x50
 9020 0060 9F       		.byte	0x9f
 9021 0061 00000000 		.4byte	0
 9022 0065 00000000 		.4byte	0
 9023              	.LLST1:
 9024 0069 00000000 		.4byte	.LVL0
 9025 006d 34000000 		.4byte	.LVL7
 9026 0071 0200     		.2byte	0x2
 9027 0073 30       		.byte	0x30
 9028 0074 9F       		.byte	0x9f
 9029 0075 34000000 		.4byte	.LVL7
 9030 0079 40000000 		.4byte	.LFE527
 9031 007d 0100     		.2byte	0x1
 9032 007f 50       		.byte	0x50
 9033 0080 00000000 		.4byte	0
 9034 0084 00000000 		.4byte	0
 9035              	.LLST2:
 9036 0088 00000000 		.4byte	.LVL0
 9037 008c 28000000 		.4byte	.LVL1
 9038 0090 0100     		.2byte	0x1
 9039 0092 50       		.byte	0x50
 9040 0093 28000000 		.4byte	.LVL1
 9041 0097 2A000000 		.4byte	.LVL2
 9042 009b 0400     		.2byte	0x4
 9043 009d F3       		.byte	0xf3
 9044 009e 01       		.uleb128 0x1
 9045 009f 50       		.byte	0x50
 9046 00a0 9F       		.byte	0x9f
 9047 00a1 2A000000 		.4byte	.LVL2
 9048 00a5 2C000000 		.4byte	.LVL3
 9049 00a9 0100     		.2byte	0x1
 9050 00ab 50       		.byte	0x50
 9051 00ac 2C000000 		.4byte	.LVL3
 9052 00b0 2E000000 		.4byte	.LVL4
 9053 00b4 0100     		.2byte	0x1
 9054 00b6 52       		.byte	0x52
 9055 00b7 2E000000 		.4byte	.LVL4
 9056 00bb 30000000 		.4byte	.LVL5
 9057 00bf 0100     		.2byte	0x1
 9058 00c1 50       		.byte	0x50
 9059 00c2 30000000 		.4byte	.LVL5
 9060 00c6 32000000 		.4byte	.LVL6
 9061 00ca 0400     		.2byte	0x4
 9062 00cc F3       		.byte	0xf3
 9063 00cd 01       		.uleb128 0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 259


 9064 00ce 50       		.byte	0x50
 9065 00cf 9F       		.byte	0x9f
 9066 00d0 32000000 		.4byte	.LVL6
 9067 00d4 34000000 		.4byte	.LVL7
 9068 00d8 0100     		.2byte	0x1
 9069 00da 50       		.byte	0x50
 9070 00db 34000000 		.4byte	.LVL7
 9071 00df 40000000 		.4byte	.LFE527
 9072 00e3 0400     		.2byte	0x4
 9073 00e5 F3       		.byte	0xf3
 9074 00e6 01       		.uleb128 0x1
 9075 00e7 50       		.byte	0x50
 9076 00e8 9F       		.byte	0x9f
 9077 00e9 00000000 		.4byte	0
 9078 00ed 00000000 		.4byte	0
 9079              	.LLST3:
 9080 00f1 22000000 		.4byte	.LVL8
 9081 00f5 24000000 		.4byte	.LVL9
 9082 00f9 0100     		.2byte	0x1
 9083 00fb 52       		.byte	0x52
 9084 00fc 00000000 		.4byte	0
 9085 0100 00000000 		.4byte	0
 9086              	.LLST4:
 9087 0104 00000000 		.4byte	.LVL10
 9088 0108 06000000 		.4byte	.LVL11
 9089 010c 0100     		.2byte	0x1
 9090 010e 50       		.byte	0x50
 9091 010f 06000000 		.4byte	.LVL11
 9092 0113 12000000 		.4byte	.LFE553
 9093 0117 0100     		.2byte	0x1
 9094 0119 54       		.byte	0x54
 9095 011a 00000000 		.4byte	0
 9096 011e 00000000 		.4byte	0
 9097              	.LLST5:
 9098 0122 00000000 		.4byte	.LVL14
 9099 0126 18000000 		.4byte	.LVL17
 9100 012a 0100     		.2byte	0x1
 9101 012c 50       		.byte	0x50
 9102 012d 18000000 		.4byte	.LVL17
 9103 0131 9E000000 		.4byte	.LFE518
 9104 0135 0100     		.2byte	0x1
 9105 0137 5A       		.byte	0x5a
 9106 0138 00000000 		.4byte	0
 9107 013c 00000000 		.4byte	0
 9108              	.LLST6:
 9109 0140 00000000 		.4byte	.LVL14
 9110 0144 16000000 		.4byte	.LVL16
 9111 0148 0100     		.2byte	0x1
 9112 014a 51       		.byte	0x51
 9113 014b 16000000 		.4byte	.LVL16
 9114 014f 9E000000 		.4byte	.LFE518
 9115 0153 0100     		.2byte	0x1
 9116 0155 59       		.byte	0x59
 9117 0156 00000000 		.4byte	0
 9118 015a 00000000 		.4byte	0
 9119              	.LLST7:
 9120 015e 00000000 		.4byte	.LVL14
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 260


 9121 0162 14000000 		.4byte	.LVL15
 9122 0166 0100     		.2byte	0x1
 9123 0168 52       		.byte	0x52
 9124 0169 14000000 		.4byte	.LVL15
 9125 016d 28000000 		.4byte	.LVL19
 9126 0171 0100     		.2byte	0x1
 9127 0173 55       		.byte	0x55
 9128 0174 28000000 		.4byte	.LVL19
 9129 0178 30000000 		.4byte	.LVL21
 9130 017c 0700     		.2byte	0x7
 9131 017e 72       		.byte	0x72
 9132 017f 81808080 		.sleb128 -1073741823
 9132      7C
 9133 0184 9F       		.byte	0x9f
 9134 0185 30000000 		.4byte	.LVL21
 9135 0189 9E000000 		.4byte	.LFE518
 9136 018d 0400     		.2byte	0x4
 9137 018f F3       		.byte	0xf3
 9138 0190 01       		.uleb128 0x1
 9139 0191 52       		.byte	0x52
 9140 0192 9F       		.byte	0x9f
 9141 0193 00000000 		.4byte	0
 9142 0197 00000000 		.4byte	0
 9143              	.LLST8:
 9144 019b 00000000 		.4byte	.LVL14
 9145 019f 1B000000 		.4byte	.LVL18-1
 9146 01a3 0100     		.2byte	0x1
 9147 01a5 53       		.byte	0x53
 9148 01a6 1B000000 		.4byte	.LVL18-1
 9149 01aa 9E000000 		.4byte	.LFE518
 9150 01ae 0100     		.2byte	0x1
 9151 01b0 58       		.byte	0x58
 9152 01b1 00000000 		.4byte	0
 9153 01b5 00000000 		.4byte	0
 9154              	.LLST9:
 9155 01b9 00000000 		.4byte	.LVL14
 9156 01bd 52000000 		.4byte	.LVL24
 9157 01c1 0200     		.2byte	0x2
 9158 01c3 91       		.byte	0x91
 9159 01c4 00       		.sleb128 0
 9160 01c5 52000000 		.4byte	.LVL24
 9161 01c9 9E000000 		.4byte	.LFE518
 9162 01cd 0100     		.2byte	0x1
 9163 01cf 57       		.byte	0x57
 9164 01d0 00000000 		.4byte	0
 9165 01d4 00000000 		.4byte	0
 9166              	.LLST10:
 9167 01d8 30000000 		.4byte	.LVL21
 9168 01dc 48000000 		.4byte	.LVL23
 9169 01e0 0100     		.2byte	0x1
 9170 01e2 53       		.byte	0x53
 9171 01e3 6C000000 		.4byte	.LVL27
 9172 01e7 70000000 		.4byte	.LVL28
 9173 01eb 0200     		.2byte	0x2
 9174 01ed 30       		.byte	0x30
 9175 01ee 9F       		.byte	0x9f
 9176 01ef 70000000 		.4byte	.LVL28
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 261


 9177 01f3 84000000 		.4byte	.LVL30
 9178 01f7 0100     		.2byte	0x1
 9179 01f9 53       		.byte	0x53
 9180 01fa 00000000 		.4byte	0
 9181 01fe 00000000 		.4byte	0
 9182              	.LLST11:
 9183 0202 02000000 		.4byte	.LVL32
 9184 0206 06000000 		.4byte	.LVL33
 9185 020a 0200     		.2byte	0x2
 9186 020c 30       		.byte	0x30
 9187 020d 9F       		.byte	0x9f
 9188 020e 06000000 		.4byte	.LVL33
 9189 0212 1C000000 		.4byte	.LVL36
 9190 0216 0100     		.2byte	0x1
 9191 0218 54       		.byte	0x54
 9192 0219 00000000 		.4byte	0
 9193 021d 00000000 		.4byte	0
 9194              	.LLST12:
 9195 0221 00000000 		.4byte	.LVL42
 9196 0225 07000000 		.4byte	.LVL43-1
 9197 0229 0100     		.2byte	0x1
 9198 022b 50       		.byte	0x50
 9199 022c 07000000 		.4byte	.LVL43-1
 9200 0230 A2000000 		.4byte	.LVL47
 9201 0234 0100     		.2byte	0x1
 9202 0236 54       		.byte	0x54
 9203 0237 A2000000 		.4byte	.LVL47
 9204 023b AC000000 		.4byte	.LFE519
 9205 023f 0400     		.2byte	0x4
 9206 0241 F3       		.byte	0xf3
 9207 0242 01       		.uleb128 0x1
 9208 0243 50       		.byte	0x50
 9209 0244 9F       		.byte	0x9f
 9210 0245 00000000 		.4byte	0
 9211 0249 00000000 		.4byte	0
 9212              	.LLST13:
 9213 024d 00000000 		.4byte	.LVL48
 9214 0251 10000000 		.4byte	.LVL50
 9215 0255 0100     		.2byte	0x1
 9216 0257 50       		.byte	0x50
 9217 0258 10000000 		.4byte	.LVL50
 9218 025c 2E000000 		.4byte	.LVL54
 9219 0260 0100     		.2byte	0x1
 9220 0262 54       		.byte	0x54
 9221 0263 2E000000 		.4byte	.LVL54
 9222 0267 68000000 		.4byte	.LFE564
 9223 026b 0400     		.2byte	0x4
 9224 026d F3       		.byte	0xf3
 9225 026e 01       		.uleb128 0x1
 9226 026f 50       		.byte	0x50
 9227 0270 9F       		.byte	0x9f
 9228 0271 00000000 		.4byte	0
 9229 0275 00000000 		.4byte	0
 9230              	.LLST14:
 9231 0279 00000000 		.4byte	.LVL48
 9232 027d 15000000 		.4byte	.LVL51-1
 9233 0281 0100     		.2byte	0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 262


 9234 0283 51       		.byte	0x51
 9235 0284 15000000 		.4byte	.LVL51-1
 9236 0288 64000000 		.4byte	.LVL59
 9237 028c 0100     		.2byte	0x1
 9238 028e 56       		.byte	0x56
 9239 028f 64000000 		.4byte	.LVL59
 9240 0293 68000000 		.4byte	.LFE564
 9241 0297 0400     		.2byte	0x4
 9242 0299 F3       		.byte	0xf3
 9243 029a 01       		.uleb128 0x1
 9244 029b 51       		.byte	0x51
 9245 029c 9F       		.byte	0x9f
 9246 029d 00000000 		.4byte	0
 9247 02a1 00000000 		.4byte	0
 9248              	.LLST15:
 9249 02a5 2E000000 		.4byte	.LVL54
 9250 02a9 64000000 		.4byte	.LVL59
 9251 02ad 0100     		.2byte	0x1
 9252 02af 54       		.byte	0x54
 9253 02b0 00000000 		.4byte	0
 9254 02b4 00000000 		.4byte	0
 9255              	.LLST16:
 9256 02b8 0C000000 		.4byte	.LVL49
 9257 02bc 4E000000 		.4byte	.LVL57
 9258 02c0 0100     		.2byte	0x1
 9259 02c2 55       		.byte	0x55
 9260 02c3 00000000 		.4byte	0
 9261 02c7 00000000 		.4byte	0
 9262              	.LLST17:
 9263 02cb 00000000 		.4byte	.LVL60
 9264 02cf 10000000 		.4byte	.LVL61
 9265 02d3 0100     		.2byte	0x1
 9266 02d5 50       		.byte	0x50
 9267 02d6 10000000 		.4byte	.LVL61
 9268 02da 62000000 		.4byte	.LFE517
 9269 02de 0100     		.2byte	0x1
 9270 02e0 56       		.byte	0x56
 9271 02e1 00000000 		.4byte	0
 9272 02e5 00000000 		.4byte	0
 9273              	.LLST18:
 9274 02e9 00000000 		.4byte	.LVL60
 9275 02ed 13000000 		.4byte	.LVL62-1
 9276 02f1 0100     		.2byte	0x1
 9277 02f3 51       		.byte	0x51
 9278 02f4 13000000 		.4byte	.LVL62-1
 9279 02f8 62000000 		.4byte	.LFE517
 9280 02fc 0100     		.2byte	0x1
 9281 02fe 57       		.byte	0x57
 9282 02ff 00000000 		.4byte	0
 9283 0303 00000000 		.4byte	0
 9284              	.LLST19:
 9285 0307 00000000 		.4byte	.LVL60
 9286 030b 13000000 		.4byte	.LVL62-1
 9287 030f 0100     		.2byte	0x1
 9288 0311 52       		.byte	0x52
 9289 0312 13000000 		.4byte	.LVL62-1
 9290 0316 62000000 		.4byte	.LFE517
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 263


 9291 031a 0400     		.2byte	0x4
 9292 031c F3       		.byte	0xf3
 9293 031d 01       		.uleb128 0x1
 9294 031e 52       		.byte	0x52
 9295 031f 9F       		.byte	0x9f
 9296 0320 00000000 		.4byte	0
 9297 0324 00000000 		.4byte	0
 9298              	.LLST20:
 9299 0328 00000000 		.4byte	.LVL60
 9300 032c 13000000 		.4byte	.LVL62-1
 9301 0330 0100     		.2byte	0x1
 9302 0332 53       		.byte	0x53
 9303 0333 13000000 		.4byte	.LVL62-1
 9304 0337 62000000 		.4byte	.LFE517
 9305 033b 0100     		.2byte	0x1
 9306 033d 58       		.byte	0x58
 9307 033e 00000000 		.4byte	0
 9308 0342 00000000 		.4byte	0
 9309              	.LLST21:
 9310 0346 1E000000 		.4byte	.LVL64
 9311 034a 2A000000 		.4byte	.LVL65
 9312 034e 0100     		.2byte	0x1
 9313 0350 50       		.byte	0x50
 9314 0351 2A000000 		.4byte	.LVL65
 9315 0355 30000000 		.4byte	.LVL67
 9316 0359 0100     		.2byte	0x1
 9317 035b 54       		.byte	0x54
 9318 035c 32000000 		.4byte	.LVL68
 9319 0360 62000000 		.4byte	.LFE517
 9320 0364 0100     		.2byte	0x1
 9321 0366 54       		.byte	0x54
 9322 0367 00000000 		.4byte	0
 9323 036b 00000000 		.4byte	0
 9324              	.LLST22:
 9325 036f 54000000 		.4byte	.LVL70
 9326 0373 58000000 		.4byte	.LVL71
 9327 0377 0200     		.2byte	0x2
 9328 0379 31       		.byte	0x31
 9329 037a 9F       		.byte	0x9f
 9330 037b 5C000000 		.4byte	.LVL72
 9331 037f 62000000 		.4byte	.LFE517
 9332 0383 0100     		.2byte	0x1
 9333 0385 50       		.byte	0x50
 9334 0386 00000000 		.4byte	0
 9335 038a 00000000 		.4byte	0
 9336              	.LLST23:
 9337 038e 14000000 		.4byte	.LVL62
 9338 0392 1A000000 		.4byte	.LVL63
 9339 0396 0100     		.2byte	0x1
 9340 0398 50       		.byte	0x50
 9341 0399 1A000000 		.4byte	.LVL63
 9342 039d 30000000 		.4byte	.LVL67
 9343 03a1 0100     		.2byte	0x1
 9344 03a3 59       		.byte	0x59
 9345 03a4 30000000 		.4byte	.LVL67
 9346 03a8 32000000 		.4byte	.LVL68
 9347 03ac 0100     		.2byte	0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 264


 9348 03ae 50       		.byte	0x50
 9349 03af 00000000 		.4byte	0
 9350 03b3 00000000 		.4byte	0
 9351              	.LLST24:
 9352 03b7 00000000 		.4byte	.LVL73
 9353 03bb 07000000 		.4byte	.LVL74-1
 9354 03bf 0100     		.2byte	0x1
 9355 03c1 50       		.byte	0x50
 9356 03c2 07000000 		.4byte	.LVL74-1
 9357 03c6 10000000 		.4byte	.LVL75
 9358 03ca 0100     		.2byte	0x1
 9359 03cc 54       		.byte	0x54
 9360 03cd 00000000 		.4byte	0
 9361 03d1 00000000 		.4byte	0
 9362              	.LLST25:
 9363 03d5 10000000 		.4byte	.LVL75
 9364 03d9 9A000000 		.4byte	.LVL82
 9365 03dd 0100     		.2byte	0x1
 9366 03df 54       		.byte	0x54
 9367 03e0 00000000 		.4byte	0
 9368 03e4 00000000 		.4byte	0
 9369              	.LLST26:
 9370 03e8 00000000 		.4byte	.LVL83
 9371 03ec 07000000 		.4byte	.LVL84-1
 9372 03f0 0100     		.2byte	0x1
 9373 03f2 50       		.byte	0x50
 9374 03f3 07000000 		.4byte	.LVL84-1
 9375 03f7 10000000 		.4byte	.LVL85
 9376 03fb 0100     		.2byte	0x1
 9377 03fd 54       		.byte	0x54
 9378 03fe 00000000 		.4byte	0
 9379 0402 00000000 		.4byte	0
 9380              	.LLST27:
 9381 0406 10000000 		.4byte	.LVL85
 9382 040a 12000000 		.4byte	.LVL86
 9383 040e 0100     		.2byte	0x1
 9384 0410 54       		.byte	0x54
 9385 0411 00000000 		.4byte	0
 9386 0415 00000000 		.4byte	0
 9387              	.LLST28:
 9388 0419 12000000 		.4byte	.LVL86
 9389 041d 1A000000 		.4byte	.LVL88
 9390 0421 0100     		.2byte	0x1
 9391 0423 54       		.byte	0x54
 9392 0424 1A000000 		.4byte	.LVL88
 9393 0428 20000000 		.4byte	.LFE523
 9394 042c 0100     		.2byte	0x1
 9395 042e 50       		.byte	0x50
 9396 042f 00000000 		.4byte	0
 9397 0433 00000000 		.4byte	0
 9398              	.LLST29:
 9399 0437 00000000 		.4byte	.LVL89
 9400 043b 07000000 		.4byte	.LVL90-1
 9401 043f 0100     		.2byte	0x1
 9402 0441 50       		.byte	0x50
 9403 0442 07000000 		.4byte	.LVL90-1
 9404 0446 24000000 		.4byte	.LVL91
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 265


 9405 044a 0100     		.2byte	0x1
 9406 044c 54       		.byte	0x54
 9407 044d 00000000 		.4byte	0
 9408 0451 00000000 		.4byte	0
 9409              	.LLST30:
 9410 0455 24000000 		.4byte	.LVL91
 9411 0459 2C000000 		.4byte	.LVL94
 9412 045d 0100     		.2byte	0x1
 9413 045f 54       		.byte	0x54
 9414 0460 00000000 		.4byte	0
 9415 0464 00000000 		.4byte	0
 9416              	.LLST31:
 9417 0468 26000000 		.4byte	.LVL92
 9418 046c 2A000000 		.4byte	.LVL93
 9419 0470 0100     		.2byte	0x1
 9420 0472 53       		.byte	0x53
 9421 0473 00000000 		.4byte	0
 9422 0477 00000000 		.4byte	0
 9423              	.LLST32:
 9424 047b 00000000 		.4byte	.LVL95
 9425 047f 17000000 		.4byte	.LVL97-1
 9426 0483 0100     		.2byte	0x1
 9427 0485 50       		.byte	0x50
 9428 0486 17000000 		.4byte	.LVL97-1
 9429 048a 20000000 		.4byte	.LVL98
 9430 048e 0100     		.2byte	0x1
 9431 0490 54       		.byte	0x54
 9432 0491 00000000 		.4byte	0
 9433 0495 00000000 		.4byte	0
 9434              	.LLST33:
 9435 0499 00000000 		.4byte	.LVL95
 9436 049d 14000000 		.4byte	.LVL96
 9437 04a1 0100     		.2byte	0x1
 9438 04a3 51       		.byte	0x51
 9439 04a4 14000000 		.4byte	.LVL96
 9440 04a8 66000000 		.4byte	.LVL101
 9441 04ac 0100     		.2byte	0x1
 9442 04ae 55       		.byte	0x55
 9443 04af 66000000 		.4byte	.LVL101
 9444 04b3 87000000 		.4byte	.LVL103-1
 9445 04b7 0200     		.2byte	0x2
 9446 04b9 74       		.byte	0x74
 9447 04ba 2C       		.sleb128 44
 9448 04bb 00000000 		.4byte	0
 9449 04bf 00000000 		.4byte	0
 9450              	.LLST34:
 9451 04c3 20000000 		.4byte	.LVL98
 9452 04c7 C2000000 		.4byte	.LVL107
 9453 04cb 0100     		.2byte	0x1
 9454 04cd 54       		.byte	0x54
 9455 04ce 00000000 		.4byte	0
 9456 04d2 00000000 		.4byte	0
 9457              	.LLST35:
 9458 04d6 22000000 		.4byte	.LVL99
 9459 04da 6E000000 		.4byte	.LVL102
 9460 04de 0100     		.2byte	0x1
 9461 04e0 53       		.byte	0x53
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 266


 9462 04e1 00000000 		.4byte	0
 9463 04e5 00000000 		.4byte	0
 9464              	.LLST36:
 9465 04e9 5A000000 		.4byte	.LVL100
 9466 04ed 6E000000 		.4byte	.LVL102
 9467 04f1 0100     		.2byte	0x1
 9468 04f3 53       		.byte	0x53
 9469 04f4 00000000 		.4byte	0
 9470 04f8 00000000 		.4byte	0
 9471              	.LLST37:
 9472 04fc 00000000 		.4byte	.LVL95
 9473 0500 5A000000 		.4byte	.LVL100
 9474 0504 0200     		.2byte	0x2
 9475 0506 30       		.byte	0x30
 9476 0507 9F       		.byte	0x9f
 9477 0508 5A000000 		.4byte	.LVL100
 9478 050c BC000000 		.4byte	.LVL105
 9479 0510 0100     		.2byte	0x1
 9480 0512 56       		.byte	0x56
 9481 0513 00000000 		.4byte	0
 9482 0517 00000000 		.4byte	0
 9483              	.LLST38:
 9484 051b 00000000 		.4byte	.LVL108
 9485 051f 19000000 		.4byte	.LVL109-1
 9486 0523 0100     		.2byte	0x1
 9487 0525 50       		.byte	0x50
 9488 0526 19000000 		.4byte	.LVL109-1
 9489 052a 72000000 		.4byte	.LVL114
 9490 052e 0100     		.2byte	0x1
 9491 0530 54       		.byte	0x54
 9492 0531 72000000 		.4byte	.LVL114
 9493 0535 7C000000 		.4byte	.LFE528
 9494 0539 0400     		.2byte	0x4
 9495 053b F3       		.byte	0xf3
 9496 053c 01       		.uleb128 0x1
 9497 053d 50       		.byte	0x50
 9498 053e 9F       		.byte	0x9f
 9499 053f 00000000 		.4byte	0
 9500 0543 00000000 		.4byte	0
 9501              	.LLST39:
 9502 0547 00000000 		.4byte	.LVL108
 9503 054b 19000000 		.4byte	.LVL109-1
 9504 054f 0100     		.2byte	0x1
 9505 0551 50       		.byte	0x50
 9506 0552 19000000 		.4byte	.LVL109-1
 9507 0556 72000000 		.4byte	.LVL114
 9508 055a 0100     		.2byte	0x1
 9509 055c 54       		.byte	0x54
 9510 055d 72000000 		.4byte	.LVL114
 9511 0561 7C000000 		.4byte	.LFE528
 9512 0565 0400     		.2byte	0x4
 9513 0567 F3       		.byte	0xf3
 9514 0568 01       		.uleb128 0x1
 9515 0569 50       		.byte	0x50
 9516 056a 9F       		.byte	0x9f
 9517 056b 00000000 		.4byte	0
 9518 056f 00000000 		.4byte	0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 267


 9519              	.LLST40:
 9520 0573 00000000 		.4byte	.LVL115
 9521 0577 0D000000 		.4byte	.LVL116-1
 9522 057b 0100     		.2byte	0x1
 9523 057d 50       		.byte	0x50
 9524 057e 0D000000 		.4byte	.LVL116-1
 9525 0582 8A000000 		.4byte	.LVL125
 9526 0586 0100     		.2byte	0x1
 9527 0588 54       		.byte	0x54
 9528 0589 8A000000 		.4byte	.LVL125
 9529 058d 98000000 		.4byte	.LFE529
 9530 0591 0400     		.2byte	0x4
 9531 0593 F3       		.byte	0xf3
 9532 0594 01       		.uleb128 0x1
 9533 0595 50       		.byte	0x50
 9534 0596 9F       		.byte	0x9f
 9535 0597 00000000 		.4byte	0
 9536 059b 00000000 		.4byte	0
 9537              	.LLST41:
 9538 059f 00000000 		.4byte	.LVL115
 9539 05a3 46000000 		.4byte	.LVL118
 9540 05a7 0200     		.2byte	0x2
 9541 05a9 30       		.byte	0x30
 9542 05aa 9F       		.byte	0x9f
 9543 05ab 46000000 		.4byte	.LVL118
 9544 05af 72000000 		.4byte	.LVL121
 9545 05b3 0100     		.2byte	0x1
 9546 05b5 55       		.byte	0x55
 9547 05b6 72000000 		.4byte	.LVL121
 9548 05ba 82000000 		.4byte	.LVL123
 9549 05be 0200     		.2byte	0x2
 9550 05c0 30       		.byte	0x30
 9551 05c1 9F       		.byte	0x9f
 9552 05c2 82000000 		.4byte	.LVL123
 9553 05c6 8A000000 		.4byte	.LVL125
 9554 05ca 0100     		.2byte	0x1
 9555 05cc 55       		.byte	0x55
 9556 05cd 8A000000 		.4byte	.LVL125
 9557 05d1 98000000 		.4byte	.LFE529
 9558 05d5 0100     		.2byte	0x1
 9559 05d7 50       		.byte	0x50
 9560 05d8 00000000 		.4byte	0
 9561 05dc 00000000 		.4byte	0
 9562              	.LLST42:
 9563 05e0 00000000 		.4byte	.LVL115
 9564 05e4 0D000000 		.4byte	.LVL116-1
 9565 05e8 0100     		.2byte	0x1
 9566 05ea 50       		.byte	0x50
 9567 05eb 0D000000 		.4byte	.LVL116-1
 9568 05ef 8A000000 		.4byte	.LVL125
 9569 05f3 0100     		.2byte	0x1
 9570 05f5 54       		.byte	0x54
 9571 05f6 8A000000 		.4byte	.LVL125
 9572 05fa 98000000 		.4byte	.LFE529
 9573 05fe 0400     		.2byte	0x4
 9574 0600 F3       		.byte	0xf3
 9575 0601 01       		.uleb128 0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 268


 9576 0602 50       		.byte	0x50
 9577 0603 9F       		.byte	0x9f
 9578 0604 00000000 		.4byte	0
 9579 0608 00000000 		.4byte	0
 9580              	.LLST43:
 9581 060c 82000000 		.4byte	.LVL123
 9582 0610 86000000 		.4byte	.LVL124
 9583 0614 0100     		.2byte	0x1
 9584 0616 57       		.byte	0x57
 9585 0617 00000000 		.4byte	0
 9586 061b 00000000 		.4byte	0
 9587              	.LLST44:
 9588 061f 16000000 		.4byte	.LVL126
 9589 0623 1D000000 		.4byte	.LVL127-1
 9590 0627 0100     		.2byte	0x1
 9591 0629 50       		.byte	0x50
 9592 062a 1E000000 		.4byte	.LVL127
 9593 062e 3B000000 		.4byte	.LVL128-1
 9594 0632 0100     		.2byte	0x1
 9595 0634 50       		.byte	0x50
 9596 0635 3E000000 		.4byte	.LVL129
 9597 0639 48000000 		.4byte	.LVL130
 9598 063d 0100     		.2byte	0x1
 9599 063f 50       		.byte	0x50
 9600 0640 00000000 		.4byte	0
 9601 0644 00000000 		.4byte	0
 9602              	.LLST45:
 9603 0648 00000000 		.4byte	.LVL135
 9604 064c 0A000000 		.4byte	.LVL136
 9605 0650 0100     		.2byte	0x1
 9606 0652 50       		.byte	0x50
 9607 0653 00000000 		.4byte	0
 9608 0657 00000000 		.4byte	0
 9609              	.LLST46:
 9610 065b 4E000000 		.4byte	.LVL143
 9611 065f 52000000 		.4byte	.LVL145
 9612 0663 0100     		.2byte	0x1
 9613 0665 55       		.byte	0x55
 9614 0666 76000000 		.4byte	.LVL147
 9615 066a CC000000 		.4byte	.LVL152
 9616 066e 0100     		.2byte	0x1
 9617 0670 55       		.byte	0x55
 9618 0671 00000000 		.4byte	0
 9619 0675 00000000 		.4byte	0
 9620              	.LLST47:
 9621 0679 78000000 		.4byte	.LVL148
 9622 067d 8B000000 		.4byte	.LVL149-1
 9623 0681 0100     		.2byte	0x1
 9624 0683 53       		.byte	0x53
 9625 0684 00000000 		.4byte	0
 9626 0688 00000000 		.4byte	0
 9627              	.LLST48:
 9628 068c 04000000 		.4byte	.LVL137
 9629 0690 4E000000 		.4byte	.LVL143
 9630 0694 0200     		.2byte	0x2
 9631 0696 30       		.byte	0x30
 9632 0697 9F       		.byte	0x9f
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 269


 9633 0698 4E000000 		.4byte	.LVL143
 9634 069c 50000000 		.4byte	.LVL144
 9635 06a0 0100     		.2byte	0x1
 9636 06a2 56       		.byte	0x56
 9637 06a3 52000000 		.4byte	.LVL145
 9638 06a7 54000000 		.4byte	.LVL146
 9639 06ab 0200     		.2byte	0x2
 9640 06ad 30       		.byte	0x30
 9641 06ae 9F       		.byte	0x9f
 9642 06af 54000000 		.4byte	.LVL146
 9643 06b3 CC000000 		.4byte	.LVL152
 9644 06b7 0100     		.2byte	0x1
 9645 06b9 56       		.byte	0x56
 9646 06ba CC000000 		.4byte	.LVL152
 9647 06be DA000000 		.4byte	.LVL153
 9648 06c2 0200     		.2byte	0x2
 9649 06c4 30       		.byte	0x30
 9650 06c5 9F       		.byte	0x9f
 9651 06c6 DA000000 		.4byte	.LVL153
 9652 06ca EA000000 		.4byte	.LVL155
 9653 06ce 0100     		.2byte	0x1
 9654 06d0 56       		.byte	0x56
 9655 06d1 EA000000 		.4byte	.LVL155
 9656 06d5 F0000000 		.4byte	.LFE538
 9657 06d9 0100     		.2byte	0x1
 9658 06db 50       		.byte	0x50
 9659 06dc 00000000 		.4byte	0
 9660 06e0 00000000 		.4byte	0
 9661              	.LLST49:
 9662 06e4 16000000 		.4byte	.LVL138
 9663 06e8 CC000000 		.4byte	.LVL152
 9664 06ec 0100     		.2byte	0x1
 9665 06ee 54       		.byte	0x54
 9666 06ef 00000000 		.4byte	0
 9667 06f3 00000000 		.4byte	0
 9668              	.LLST50:
 9669 06f7 2A000000 		.4byte	.LVL139
 9670 06fb 38000000 		.4byte	.LVL140
 9671 06ff 0100     		.2byte	0x1
 9672 0701 52       		.byte	0x52
 9673 0702 38000000 		.4byte	.LVL140
 9674 0706 3E000000 		.4byte	.LVL141
 9675 070a 0500     		.2byte	0x5
 9676 070c 03       		.byte	0x3
 9677 070d FC010000 		.4byte	pxOverflowDelayedTaskList
 9678 0711 00000000 		.4byte	0
 9679 0715 00000000 		.4byte	0
 9680              	.LLST51:
 9681 0719 00000000 		.4byte	.LVL156
 9682 071d 32000000 		.4byte	.LVL158
 9683 0721 0200     		.2byte	0x2
 9684 0723 30       		.byte	0x30
 9685 0724 9F       		.byte	0x9f
 9686 0725 32000000 		.4byte	.LVL158
 9687 0729 7E000000 		.4byte	.LVL163
 9688 072d 0100     		.2byte	0x1
 9689 072f 54       		.byte	0x54
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 270


 9690 0730 7E000000 		.4byte	.LVL163
 9691 0734 80000000 		.4byte	.LVL164
 9692 0738 0200     		.2byte	0x2
 9693 073a 30       		.byte	0x30
 9694 073b 9F       		.byte	0x9f
 9695 073c 80000000 		.4byte	.LVL164
 9696 0740 94000000 		.4byte	.LVL166
 9697 0744 0100     		.2byte	0x1
 9698 0746 54       		.byte	0x54
 9699 0747 CC000000 		.4byte	.LVL172
 9700 074b D0000000 		.4byte	.LVL173
 9701 074f 0200     		.2byte	0x2
 9702 0751 30       		.byte	0x30
 9703 0752 9F       		.byte	0x9f
 9704 0753 00000000 		.4byte	0
 9705 0757 00000000 		.4byte	0
 9706              	.LLST52:
 9707 075b 00000000 		.4byte	.LVL156
 9708 075f B8000000 		.4byte	.LVL170
 9709 0763 0200     		.2byte	0x2
 9710 0765 30       		.byte	0x30
 9711 0766 9F       		.byte	0x9f
 9712 0767 B8000000 		.4byte	.LVL170
 9713 076b CC000000 		.4byte	.LVL172
 9714 076f 0200     		.2byte	0x2
 9715 0771 31       		.byte	0x31
 9716 0772 9F       		.byte	0x9f
 9717 0773 CC000000 		.4byte	.LVL172
 9718 0777 D2000000 		.4byte	.LVL174
 9719 077b 0200     		.2byte	0x2
 9720 077d 30       		.byte	0x30
 9721 077e 9F       		.byte	0x9f
 9722 077f D2000000 		.4byte	.LVL174
 9723 0783 DA000000 		.4byte	.LVL176
 9724 0787 0100     		.2byte	0x1
 9725 0789 54       		.byte	0x54
 9726 078a DA000000 		.4byte	.LVL176
 9727 078e E4000000 		.4byte	.LFE533
 9728 0792 0100     		.2byte	0x1
 9729 0794 50       		.byte	0x50
 9730 0795 00000000 		.4byte	0
 9731 0799 00000000 		.4byte	0
 9732              	.LLST53:
 9733 079d 94000000 		.4byte	.LVL166
 9734 07a1 A4000000 		.4byte	.LVL168
 9735 07a5 0100     		.2byte	0x1
 9736 07a7 54       		.byte	0x54
 9737 07a8 A4000000 		.4byte	.LVL168
 9738 07ac A6000000 		.4byte	.LVL169
 9739 07b0 0300     		.2byte	0x3
 9740 07b2 74       		.byte	0x74
 9741 07b3 7F       		.sleb128 -1
 9742 07b4 9F       		.byte	0x9f
 9743 07b5 A6000000 		.4byte	.LVL169
 9744 07b9 CA000000 		.4byte	.LVL171
 9745 07bd 0100     		.2byte	0x1
 9746 07bf 54       		.byte	0x54
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 271


 9747 07c0 D0000000 		.4byte	.LVL173
 9748 07c4 D2000000 		.4byte	.LVL174
 9749 07c8 0100     		.2byte	0x1
 9750 07ca 54       		.byte	0x54
 9751 07cb 00000000 		.4byte	0
 9752 07cf 00000000 		.4byte	0
 9753              	.LLST54:
 9754 07d3 00000000 		.4byte	.LVL177
 9755 07d7 21000000 		.4byte	.LVL178-1
 9756 07db 0100     		.2byte	0x1
 9757 07dd 50       		.byte	0x50
 9758 07de 21000000 		.4byte	.LVL178-1
 9759 07e2 7A000000 		.4byte	.LVL185
 9760 07e6 0100     		.2byte	0x1
 9761 07e8 55       		.byte	0x55
 9762 07e9 7A000000 		.4byte	.LVL185
 9763 07ed 84000000 		.4byte	.LFE521
 9764 07f1 0400     		.2byte	0x4
 9765 07f3 F3       		.byte	0xf3
 9766 07f4 01       		.uleb128 0x1
 9767 07f5 50       		.byte	0x50
 9768 07f6 9F       		.byte	0x9f
 9769 07f7 00000000 		.4byte	0
 9770 07fb 00000000 		.4byte	0
 9771              	.LLST55:
 9772 07ff 00000000 		.4byte	.LVL177
 9773 0803 21000000 		.4byte	.LVL178-1
 9774 0807 0100     		.2byte	0x1
 9775 0809 51       		.byte	0x51
 9776 080a 21000000 		.4byte	.LVL178-1
 9777 080e 7A000000 		.4byte	.LVL185
 9778 0812 0100     		.2byte	0x1
 9779 0814 54       		.byte	0x54
 9780 0815 7A000000 		.4byte	.LVL185
 9781 0819 84000000 		.4byte	.LFE521
 9782 081d 0400     		.2byte	0x4
 9783 081f F3       		.byte	0xf3
 9784 0820 01       		.uleb128 0x1
 9785 0821 51       		.byte	0x51
 9786 0822 9F       		.byte	0x9f
 9787 0823 00000000 		.4byte	0
 9788 0827 00000000 		.4byte	0
 9789              	.LLST56:
 9790 082b 2C000000 		.4byte	.LVL180
 9791 082f 61000000 		.4byte	.LVL183-1
 9792 0833 0100     		.2byte	0x1
 9793 0835 53       		.byte	0x53
 9794 0836 00000000 		.4byte	0
 9795 083a 00000000 		.4byte	0
 9796              	.LLST57:
 9797 083e 00000000 		.4byte	.LVL177
 9798 0842 56000000 		.4byte	.LVL181
 9799 0846 0200     		.2byte	0x2
 9800 0848 30       		.byte	0x30
 9801 0849 9F       		.byte	0x9f
 9802 084a 56000000 		.4byte	.LVL181
 9803 084e 61000000 		.4byte	.LVL183-1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 272


 9804 0852 0100     		.2byte	0x1
 9805 0854 52       		.byte	0x52
 9806 0855 00000000 		.4byte	0
 9807 0859 00000000 		.4byte	0
 9808              	.LLST58:
 9809 085d 28000000 		.4byte	.LVL179
 9810 0861 5E000000 		.4byte	.LVL182
 9811 0865 0100     		.2byte	0x1
 9812 0867 50       		.byte	0x50
 9813 0868 00000000 		.4byte	0
 9814 086c 00000000 		.4byte	0
 9815              	.LLST59:
 9816 0870 00000000 		.4byte	.LVL186
 9817 0874 15000000 		.4byte	.LVL188-1
 9818 0878 0100     		.2byte	0x1
 9819 087a 50       		.byte	0x50
 9820 087b 15000000 		.4byte	.LVL188-1
 9821 087f 24000000 		.4byte	.LVL191
 9822 0883 0100     		.2byte	0x1
 9823 0885 54       		.byte	0x54
 9824 0886 24000000 		.4byte	.LVL191
 9825 088a 26000000 		.4byte	.LVL192
 9826 088e 0100     		.2byte	0x1
 9827 0890 50       		.byte	0x50
 9828 0891 26000000 		.4byte	.LVL192
 9829 0895 44000000 		.4byte	.LFE522
 9830 0899 0400     		.2byte	0x4
 9831 089b F3       		.byte	0xf3
 9832 089c 01       		.uleb128 0x1
 9833 089d 50       		.byte	0x50
 9834 089e 9F       		.byte	0x9f
 9835 089f 00000000 		.4byte	0
 9836 08a3 00000000 		.4byte	0
 9837              	.LLST60:
 9838 08a7 02000000 		.4byte	.LVL187
 9839 08ab 22000000 		.4byte	.LVL190
 9840 08af 0200     		.2byte	0x2
 9841 08b1 30       		.byte	0x30
 9842 08b2 9F       		.byte	0x9f
 9843 08b3 22000000 		.4byte	.LVL190
 9844 08b7 24000000 		.4byte	.LVL191
 9845 08bb 0100     		.2byte	0x1
 9846 08bd 50       		.byte	0x50
 9847 08be 24000000 		.4byte	.LVL191
 9848 08c2 26000000 		.4byte	.LVL192
 9849 08c6 0200     		.2byte	0x2
 9850 08c8 30       		.byte	0x30
 9851 08c9 9F       		.byte	0x9f
 9852 08ca 26000000 		.4byte	.LVL192
 9853 08ce 44000000 		.4byte	.LFE522
 9854 08d2 0100     		.2byte	0x1
 9855 08d4 50       		.byte	0x50
 9856 08d5 00000000 		.4byte	0
 9857 08d9 00000000 		.4byte	0
 9858              	.LLST61:
 9859 08dd 0E000000 		.4byte	.LVL194
 9860 08e1 1A000000 		.4byte	.LVL197
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 273


 9861 08e5 0800     		.2byte	0x8
 9862 08e7 74       		.byte	0x74
 9863 08e8 00       		.sleb128 0
 9864 08e9 30       		.byte	0x30
 9865 08ea 29       		.byte	0x29
 9866 08eb 08       		.byte	0x8
 9867 08ec FF       		.byte	0xff
 9868 08ed 1A       		.byte	0x1a
 9869 08ee 9F       		.byte	0x9f
 9870 08ef 00000000 		.4byte	0
 9871 08f3 00000000 		.4byte	0
 9872              	.LLST62:
 9873 08f7 20000000 		.4byte	.LVL198
 9874 08fb 44000000 		.4byte	.LVL201
 9875 08ff 0100     		.2byte	0x1
 9876 0901 55       		.byte	0x55
 9877 0902 00000000 		.4byte	0
 9878 0906 00000000 		.4byte	0
 9879              	.LLST63:
 9880 090a 00000000 		.4byte	.LVL202
 9881 090e 02000000 		.4byte	.LVL203
 9882 0912 0100     		.2byte	0x1
 9883 0914 50       		.byte	0x50
 9884 0915 02000000 		.4byte	.LVL203
 9885 0919 2C000000 		.4byte	.LFE548
 9886 091d 0400     		.2byte	0x4
 9887 091f F3       		.byte	0xf3
 9888 0920 01       		.uleb128 0x1
 9889 0921 50       		.byte	0x50
 9890 0922 9F       		.byte	0x9f
 9891 0923 00000000 		.4byte	0
 9892 0927 00000000 		.4byte	0
 9893              	.LLST64:
 9894 092b 22000000 		.4byte	.LVL206
 9895 092f 3C000000 		.4byte	.LVL207
 9896 0933 0100     		.2byte	0x1
 9897 0935 53       		.byte	0x53
 9898 0936 00000000 		.4byte	0
 9899 093a 00000000 		.4byte	0
 9900              	.LLST65:
 9901 093e 00000000 		.4byte	.LVL212
 9902 0942 07000000 		.4byte	.LVL213-1
 9903 0946 0100     		.2byte	0x1
 9904 0948 50       		.byte	0x50
 9905 0949 07000000 		.4byte	.LVL213-1
 9906 094d 10000000 		.4byte	.LVL214
 9907 0951 0100     		.2byte	0x1
 9908 0953 54       		.byte	0x54
 9909 0954 00000000 		.4byte	0
 9910 0958 00000000 		.4byte	0
 9911              	.LLST66:
 9912 095c 10000000 		.4byte	.LVL214
 9913 0960 90000000 		.4byte	.LVL225
 9914 0964 0100     		.2byte	0x1
 9915 0966 54       		.byte	0x54
 9916 0967 00000000 		.4byte	0
 9917 096b 00000000 		.4byte	0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 274


 9918              	.LLST67:
 9919 096f 00000000 		.4byte	.LVL226
 9920 0973 15000000 		.4byte	.LVL228-1
 9921 0977 0100     		.2byte	0x1
 9922 0979 50       		.byte	0x50
 9923 097a 15000000 		.4byte	.LVL228-1
 9924 097e 24000000 		.4byte	.LFE540
 9925 0982 0400     		.2byte	0x4
 9926 0984 F3       		.byte	0xf3
 9927 0985 01       		.uleb128 0x1
 9928 0986 50       		.byte	0x50
 9929 0987 9F       		.byte	0x9f
 9930 0988 00000000 		.4byte	0
 9931 098c 00000000 		.4byte	0
 9932              	.LLST68:
 9933 0990 00000000 		.4byte	.LVL226
 9934 0994 10000000 		.4byte	.LVL227
 9935 0998 0100     		.2byte	0x1
 9936 099a 51       		.byte	0x51
 9937 099b 10000000 		.4byte	.LVL227
 9938 099f 20000000 		.4byte	.LVL230
 9939 09a3 0100     		.2byte	0x1
 9940 09a5 54       		.byte	0x54
 9941 09a6 20000000 		.4byte	.LVL230
 9942 09aa 24000000 		.4byte	.LFE540
 9943 09ae 0400     		.2byte	0x4
 9944 09b0 F3       		.byte	0xf3
 9945 09b1 01       		.uleb128 0x1
 9946 09b2 51       		.byte	0x51
 9947 09b3 9F       		.byte	0x9f
 9948 09b4 00000000 		.4byte	0
 9949 09b8 00000000 		.4byte	0
 9950              	.LLST69:
 9951 09bc 00000000 		.4byte	.LVL231
 9952 09c0 0A000000 		.4byte	.LVL232
 9953 09c4 0100     		.2byte	0x1
 9954 09c6 50       		.byte	0x50
 9955 09c7 0A000000 		.4byte	.LVL232
 9956 09cb 1C000000 		.4byte	.LVL233
 9957 09cf 0100     		.2byte	0x1
 9958 09d1 53       		.byte	0x53
 9959 09d2 1C000000 		.4byte	.LVL233
 9960 09d6 31000000 		.4byte	.LVL237-1
 9961 09da 0100     		.2byte	0x1
 9962 09dc 50       		.byte	0x50
 9963 09dd 31000000 		.4byte	.LVL237-1
 9964 09e1 40000000 		.4byte	.LFE541
 9965 09e5 0400     		.2byte	0x4
 9966 09e7 F3       		.byte	0xf3
 9967 09e8 01       		.uleb128 0x1
 9968 09e9 50       		.byte	0x50
 9969 09ea 9F       		.byte	0x9f
 9970 09eb 00000000 		.4byte	0
 9971 09ef 00000000 		.4byte	0
 9972              	.LLST70:
 9973 09f3 00000000 		.4byte	.LVL231
 9974 09f7 22000000 		.4byte	.LVL235
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 275


 9975 09fb 0100     		.2byte	0x1
 9976 09fd 51       		.byte	0x51
 9977 09fe 22000000 		.4byte	.LVL235
 9978 0a02 26000000 		.4byte	.LVL236
 9979 0a06 0100     		.2byte	0x1
 9980 0a08 53       		.byte	0x53
 9981 0a09 26000000 		.4byte	.LVL236
 9982 0a0d 40000000 		.4byte	.LFE541
 9983 0a11 0400     		.2byte	0x4
 9984 0a13 F3       		.byte	0xf3
 9985 0a14 01       		.uleb128 0x1
 9986 0a15 51       		.byte	0x51
 9987 0a16 9F       		.byte	0x9f
 9988 0a17 00000000 		.4byte	0
 9989 0a1b 00000000 		.4byte	0
 9990              	.LLST71:
 9991 0a1f 00000000 		.4byte	.LVL231
 9992 0a23 1E000000 		.4byte	.LVL234
 9993 0a27 0100     		.2byte	0x1
 9994 0a29 52       		.byte	0x52
 9995 0a2a 1E000000 		.4byte	.LVL234
 9996 0a2e 3C000000 		.4byte	.LVL239
 9997 0a32 0100     		.2byte	0x1
 9998 0a34 54       		.byte	0x54
 9999 0a35 3C000000 		.4byte	.LVL239
 10000 0a39 40000000 		.4byte	.LFE541
 10001 0a3d 0400     		.2byte	0x4
 10002 0a3f F3       		.byte	0xf3
 10003 0a40 01       		.uleb128 0x1
 10004 0a41 52       		.byte	0x52
 10005 0a42 9F       		.byte	0x9f
 10006 0a43 00000000 		.4byte	0
 10007 0a47 00000000 		.4byte	0
 10008              	.LLST72:
 10009 0a4b 00000000 		.4byte	.LVL240
 10010 0a4f 17000000 		.4byte	.LVL243-1
 10011 0a53 0100     		.2byte	0x1
 10012 0a55 50       		.byte	0x50
 10013 0a56 17000000 		.4byte	.LVL243-1
 10014 0a5a 2C000000 		.4byte	.LFE542
 10015 0a5e 0400     		.2byte	0x4
 10016 0a60 F3       		.byte	0xf3
 10017 0a61 01       		.uleb128 0x1
 10018 0a62 50       		.byte	0x50
 10019 0a63 9F       		.byte	0x9f
 10020 0a64 00000000 		.4byte	0
 10021 0a68 00000000 		.4byte	0
 10022              	.LLST73:
 10023 0a6c 00000000 		.4byte	.LVL240
 10024 0a70 12000000 		.4byte	.LVL242
 10025 0a74 0100     		.2byte	0x1
 10026 0a76 51       		.byte	0x51
 10027 0a77 12000000 		.4byte	.LVL242
 10028 0a7b 28000000 		.4byte	.LVL246
 10029 0a7f 0100     		.2byte	0x1
 10030 0a81 54       		.byte	0x54
 10031 0a82 00000000 		.4byte	0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 276


 10032 0a86 00000000 		.4byte	0
 10033              	.LLST74:
 10034 0a8a 00000000 		.4byte	.LVL240
 10035 0a8e 0E000000 		.4byte	.LVL241
 10036 0a92 0100     		.2byte	0x1
 10037 0a94 52       		.byte	0x52
 10038 0a95 0E000000 		.4byte	.LVL241
 10039 0a99 28000000 		.4byte	.LVL246
 10040 0a9d 0100     		.2byte	0x1
 10041 0a9f 55       		.byte	0x55
 10042 0aa0 28000000 		.4byte	.LVL246
 10043 0aa4 2C000000 		.4byte	.LFE542
 10044 0aa8 0400     		.2byte	0x4
 10045 0aaa F3       		.byte	0xf3
 10046 0aab 01       		.uleb128 0x1
 10047 0aac 52       		.byte	0x52
 10048 0aad 9F       		.byte	0x9f
 10049 0aae 00000000 		.4byte	0
 10050 0ab2 00000000 		.4byte	0
 10051              	.LLST75:
 10052 0ab6 00000000 		.4byte	.LVL247
 10053 0aba 12000000 		.4byte	.LVL249
 10054 0abe 0100     		.2byte	0x1
 10055 0ac0 50       		.byte	0x50
 10056 0ac1 12000000 		.4byte	.LVL249
 10057 0ac5 7C000000 		.4byte	.LFE543
 10058 0ac9 0400     		.2byte	0x4
 10059 0acb F3       		.byte	0xf3
 10060 0acc 01       		.uleb128 0x1
 10061 0acd 50       		.byte	0x50
 10062 0ace 9F       		.byte	0x9f
 10063 0acf 00000000 		.4byte	0
 10064 0ad3 00000000 		.4byte	0
 10065              	.LLST76:
 10066 0ad7 06000000 		.4byte	.LVL248
 10067 0adb 6E000000 		.4byte	.LVL257
 10068 0adf 0100     		.2byte	0x1
 10069 0ae1 54       		.byte	0x54
 10070 0ae2 00000000 		.4byte	0
 10071 0ae6 00000000 		.4byte	0
 10072              	.LLST77:
 10073 0aea 60000000 		.4byte	.LVL254
 10074 0aee 6A000000 		.4byte	.LVL255
 10075 0af2 0200     		.2byte	0x2
 10076 0af4 31       		.byte	0x31
 10077 0af5 9F       		.byte	0x9f
 10078 0af6 6C000000 		.4byte	.LVL256
 10079 0afa 7C000000 		.4byte	.LFE543
 10080 0afe 0100     		.2byte	0x1
 10081 0b00 50       		.byte	0x50
 10082 0b01 00000000 		.4byte	0
 10083 0b05 00000000 		.4byte	0
 10084              	.LLST78:
 10085 0b09 00000000 		.4byte	.LVL258
 10086 0b0d 1F000000 		.4byte	.LVL260-1
 10087 0b11 0100     		.2byte	0x1
 10088 0b13 50       		.byte	0x50
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 277


 10089 0b14 1F000000 		.4byte	.LVL260-1
 10090 0b18 6C000000 		.4byte	.LFE544
 10091 0b1c 0400     		.2byte	0x4
 10092 0b1e F3       		.byte	0xf3
 10093 0b1f 01       		.uleb128 0x1
 10094 0b20 50       		.byte	0x50
 10095 0b21 9F       		.byte	0x9f
 10096 0b22 00000000 		.4byte	0
 10097 0b26 00000000 		.4byte	0
 10098              	.LLST79:
 10099 0b2a 00000000 		.4byte	.LVL258
 10100 0b2e 1F000000 		.4byte	.LVL260-1
 10101 0b32 0100     		.2byte	0x1
 10102 0b34 51       		.byte	0x51
 10103 0b35 1F000000 		.4byte	.LVL260-1
 10104 0b39 6C000000 		.4byte	.LFE544
 10105 0b3d 0400     		.2byte	0x4
 10106 0b3f F3       		.byte	0xf3
 10107 0b40 01       		.uleb128 0x1
 10108 0b41 51       		.byte	0x51
 10109 0b42 9F       		.byte	0x9f
 10110 0b43 00000000 		.4byte	0
 10111 0b47 00000000 		.4byte	0
 10112              	.LLST80:
 10113 0b4b 16000000 		.4byte	.LVL259
 10114 0b4f 66000000 		.4byte	.LVL266
 10115 0b53 0100     		.2byte	0x1
 10116 0b55 54       		.byte	0x54
 10117 0b56 00000000 		.4byte	0
 10118 0b5a 00000000 		.4byte	0
 10119              	.LLST81:
 10120 0b5e 5A000000 		.4byte	.LVL263
 10121 0b62 62000000 		.4byte	.LVL264
 10122 0b66 0200     		.2byte	0x2
 10123 0b68 31       		.byte	0x31
 10124 0b69 9F       		.byte	0x9f
 10125 0b6a 64000000 		.4byte	.LVL265
 10126 0b6e 6C000000 		.4byte	.LFE544
 10127 0b72 0100     		.2byte	0x1
 10128 0b74 50       		.byte	0x50
 10129 0b75 00000000 		.4byte	0
 10130 0b79 00000000 		.4byte	0
 10131              	.LLST82:
 10132 0b7d 00000000 		.4byte	.LVL268
 10133 0b81 15000000 		.4byte	.LVL269-1
 10134 0b85 0100     		.2byte	0x1
 10135 0b87 50       		.byte	0x50
 10136 0b88 15000000 		.4byte	.LVL269-1
 10137 0b8c 4A000000 		.4byte	.LVL272
 10138 0b90 0100     		.2byte	0x1
 10139 0b92 54       		.byte	0x54
 10140 0b93 4A000000 		.4byte	.LVL272
 10141 0b97 4C000000 		.4byte	.LVL273
 10142 0b9b 0400     		.2byte	0x4
 10143 0b9d F3       		.byte	0xf3
 10144 0b9e 01       		.uleb128 0x1
 10145 0b9f 50       		.byte	0x50
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 278


 10146 0ba0 9F       		.byte	0x9f
 10147 0ba1 4C000000 		.4byte	.LVL273
 10148 0ba5 4E000000 		.4byte	.LVL274
 10149 0ba9 0100     		.2byte	0x1
 10150 0bab 54       		.byte	0x54
 10151 0bac 4E000000 		.4byte	.LVL274
 10152 0bb0 50000000 		.4byte	.LVL275
 10153 0bb4 0400     		.2byte	0x4
 10154 0bb6 F3       		.byte	0xf3
 10155 0bb7 01       		.uleb128 0x1
 10156 0bb8 50       		.byte	0x50
 10157 0bb9 9F       		.byte	0x9f
 10158 0bba 50000000 		.4byte	.LVL275
 10159 0bbe 52000000 		.4byte	.LVL276
 10160 0bc2 0100     		.2byte	0x1
 10161 0bc4 54       		.byte	0x54
 10162 0bc5 52000000 		.4byte	.LVL276
 10163 0bc9 54000000 		.4byte	.LVL277
 10164 0bcd 0400     		.2byte	0x4
 10165 0bcf F3       		.byte	0xf3
 10166 0bd0 01       		.uleb128 0x1
 10167 0bd1 50       		.byte	0x50
 10168 0bd2 9F       		.byte	0x9f
 10169 0bd3 54000000 		.4byte	.LVL277
 10170 0bd7 56000000 		.4byte	.LVL278
 10171 0bdb 0100     		.2byte	0x1
 10172 0bdd 54       		.byte	0x54
 10173 0bde 56000000 		.4byte	.LVL278
 10174 0be2 64000000 		.4byte	.LFE546
 10175 0be6 0400     		.2byte	0x4
 10176 0be8 F3       		.byte	0xf3
 10177 0be9 01       		.uleb128 0x1
 10178 0bea 50       		.byte	0x50
 10179 0beb 9F       		.byte	0x9f
 10180 0bec 00000000 		.4byte	0
 10181 0bf0 00000000 		.4byte	0
 10182              	.LLST83:
 10183 0bf4 00000000 		.4byte	.LVL268
 10184 0bf8 15000000 		.4byte	.LVL269-1
 10185 0bfc 0100     		.2byte	0x1
 10186 0bfe 51       		.byte	0x51
 10187 0bff 15000000 		.4byte	.LVL269-1
 10188 0c03 5E000000 		.4byte	.LVL280
 10189 0c07 0100     		.2byte	0x1
 10190 0c09 55       		.byte	0x55
 10191 0c0a 5E000000 		.4byte	.LVL280
 10192 0c0e 64000000 		.4byte	.LFE546
 10193 0c12 0400     		.2byte	0x4
 10194 0c14 F3       		.byte	0xf3
 10195 0c15 01       		.uleb128 0x1
 10196 0c16 51       		.byte	0x51
 10197 0c17 9F       		.byte	0x9f
 10198 0c18 00000000 		.4byte	0
 10199 0c1c 00000000 		.4byte	0
 10200              	.LLST84:
 10201 0c20 48000000 		.4byte	.LVL271
 10202 0c24 4C000000 		.4byte	.LVL273
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 279


 10203 0c28 0200     		.2byte	0x2
 10204 0c2a 30       		.byte	0x30
 10205 0c2b 9F       		.byte	0x9f
 10206 0c2c 56000000 		.4byte	.LVL278
 10207 0c30 5E000000 		.4byte	.LVL280
 10208 0c34 0100     		.2byte	0x1
 10209 0c36 54       		.byte	0x54
 10210 0c37 5E000000 		.4byte	.LVL280
 10211 0c3b 64000000 		.4byte	.LFE546
 10212 0c3f 0100     		.2byte	0x1
 10213 0c41 50       		.byte	0x50
 10214 0c42 00000000 		.4byte	0
 10215 0c46 00000000 		.4byte	0
 10216              	.LLST85:
 10217 0c4a 1C000000 		.4byte	.LVL270
 10218 0c4e 47000000 		.4byte	.LVL271-1
 10219 0c52 0100     		.2byte	0x1
 10220 0c54 51       		.byte	0x51
 10221 0c55 4C000000 		.4byte	.LVL273
 10222 0c59 56000000 		.4byte	.LVL278
 10223 0c5d 0100     		.2byte	0x1
 10224 0c5f 51       		.byte	0x51
 10225 0c60 00000000 		.4byte	0
 10226 0c64 00000000 		.4byte	0
 10227              	.LLST86:
 10228 0c68 00000000 		.4byte	.LVL281
 10229 0c6c 0C000000 		.4byte	.LVL282
 10230 0c70 0100     		.2byte	0x1
 10231 0c72 50       		.byte	0x50
 10232 0c73 00000000 		.4byte	0
 10233 0c77 00000000 		.4byte	0
 10234              	.LLST87:
 10235 0c7b 00000000 		.4byte	.LVL281
 10236 0c7f 0E000000 		.4byte	.LVL283
 10237 0c83 0100     		.2byte	0x1
 10238 0c85 51       		.byte	0x51
 10239 0c86 0E000000 		.4byte	.LVL283
 10240 0c8a 12000000 		.4byte	.LVL284
 10241 0c8e 0300     		.2byte	0x3
 10242 0c90 71       		.byte	0x71
 10243 0c91 70       		.sleb128 -16
 10244 0c92 9F       		.byte	0x9f
 10245 0c93 12000000 		.4byte	.LVL284
 10246 0c97 1C000000 		.4byte	.LFE549
 10247 0c9b 0400     		.2byte	0x4
 10248 0c9d F3       		.byte	0xf3
 10249 0c9e 01       		.uleb128 0x1
 10250 0c9f 51       		.byte	0x51
 10251 0ca0 9F       		.byte	0x9f
 10252 0ca1 00000000 		.4byte	0
 10253 0ca5 00000000 		.4byte	0
 10254              	.LLST88:
 10255 0ca9 0C000000 		.4byte	.LVL282
 10256 0cad 14000000 		.4byte	.LVL285
 10257 0cb1 0100     		.2byte	0x1
 10258 0cb3 50       		.byte	0x50
 10259 0cb4 00000000 		.4byte	0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 280


 10260 0cb8 00000000 		.4byte	0
 10261              	.LLST89:
 10262 0cbc 00000000 		.4byte	.LVL286
 10263 0cc0 0C000000 		.4byte	.LVL287
 10264 0cc4 0100     		.2byte	0x1
 10265 0cc6 50       		.byte	0x50
 10266 0cc7 16000000 		.4byte	.LVL291
 10267 0ccb 18000000 		.4byte	.LVL292
 10268 0ccf 0100     		.2byte	0x1
 10269 0cd1 50       		.byte	0x50
 10270 0cd2 18000000 		.4byte	.LVL292
 10271 0cd6 20000000 		.4byte	.LFE550
 10272 0cda 0400     		.2byte	0x4
 10273 0cdc F3       		.byte	0xf3
 10274 0cdd 01       		.uleb128 0x1
 10275 0cde 50       		.byte	0x50
 10276 0cdf 9F       		.byte	0x9f
 10277 0ce0 00000000 		.4byte	0
 10278 0ce4 00000000 		.4byte	0
 10279              	.LLST90:
 10280 0ce8 00000000 		.4byte	.LVL286
 10281 0cec 0E000000 		.4byte	.LVL288
 10282 0cf0 0100     		.2byte	0x1
 10283 0cf2 51       		.byte	0x51
 10284 0cf3 0E000000 		.4byte	.LVL288
 10285 0cf7 16000000 		.4byte	.LVL291
 10286 0cfb 0300     		.2byte	0x3
 10287 0cfd 71       		.byte	0x71
 10288 0cfe 70       		.sleb128 -16
 10289 0cff 9F       		.byte	0x9f
 10290 0d00 16000000 		.4byte	.LVL291
 10291 0d04 20000000 		.4byte	.LFE550
 10292 0d08 0100     		.2byte	0x1
 10293 0d0a 51       		.byte	0x51
 10294 0d0b 00000000 		.4byte	0
 10295 0d0f 00000000 		.4byte	0
 10296              	.LLST91:
 10297 0d13 00000000 		.4byte	.LVL286
 10298 0d17 14000000 		.4byte	.LVL290
 10299 0d1b 0200     		.2byte	0x2
 10300 0d1d 30       		.byte	0x30
 10301 0d1e 9F       		.byte	0x9f
 10302 0d1f 14000000 		.4byte	.LVL290
 10303 0d23 16000000 		.4byte	.LVL291
 10304 0d27 0100     		.2byte	0x1
 10305 0d29 50       		.byte	0x50
 10306 0d2a 16000000 		.4byte	.LVL291
 10307 0d2e 18000000 		.4byte	.LVL292
 10308 0d32 0200     		.2byte	0x2
 10309 0d34 30       		.byte	0x30
 10310 0d35 9F       		.byte	0x9f
 10311 0d36 18000000 		.4byte	.LVL292
 10312 0d3a 20000000 		.4byte	.LFE550
 10313 0d3e 0100     		.2byte	0x1
 10314 0d40 50       		.byte	0x50
 10315 0d41 00000000 		.4byte	0
 10316 0d45 00000000 		.4byte	0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 281


 10317              	.LLST92:
 10318 0d49 0C000000 		.4byte	.LVL287
 10319 0d4d 12000000 		.4byte	.LVL289
 10320 0d51 0100     		.2byte	0x1
 10321 0d53 50       		.byte	0x50
 10322 0d54 00000000 		.4byte	0
 10323 0d58 00000000 		.4byte	0
 10324              	.LLST93:
 10325 0d5c 00000000 		.4byte	.LVL296
 10326 0d60 09000000 		.4byte	.LVL297-1
 10327 0d64 0100     		.2byte	0x1
 10328 0d66 50       		.byte	0x50
 10329 0d67 09000000 		.4byte	.LVL297-1
 10330 0d6b 78000000 		.4byte	.LVL303
 10331 0d6f 0100     		.2byte	0x1
 10332 0d71 55       		.byte	0x55
 10333 0d72 78000000 		.4byte	.LVL303
 10334 0d76 80000000 		.4byte	.LFE558
 10335 0d7a 0400     		.2byte	0x4
 10336 0d7c F3       		.byte	0xf3
 10337 0d7d 01       		.uleb128 0x1
 10338 0d7e 50       		.byte	0x50
 10339 0d7f 9F       		.byte	0x9f
 10340 0d80 00000000 		.4byte	0
 10341 0d84 00000000 		.4byte	0
 10342              	.LLST94:
 10343 0d88 00000000 		.4byte	.LVL296
 10344 0d8c 09000000 		.4byte	.LVL297-1
 10345 0d90 0100     		.2byte	0x1
 10346 0d92 51       		.byte	0x51
 10347 0d93 09000000 		.4byte	.LVL297-1
 10348 0d97 4A000000 		.4byte	.LVL301
 10349 0d9b 0100     		.2byte	0x1
 10350 0d9d 54       		.byte	0x54
 10351 0d9e 4A000000 		.4byte	.LVL301
 10352 0da2 80000000 		.4byte	.LFE558
 10353 0da6 0400     		.2byte	0x4
 10354 0da8 F3       		.byte	0xf3
 10355 0da9 01       		.uleb128 0x1
 10356 0daa 51       		.byte	0x51
 10357 0dab 9F       		.byte	0x9f
 10358 0dac 00000000 		.4byte	0
 10359 0db0 00000000 		.4byte	0
 10360              	.LLST95:
 10361 0db4 4A000000 		.4byte	.LVL301
 10362 0db8 78000000 		.4byte	.LVL303
 10363 0dbc 0100     		.2byte	0x1
 10364 0dbe 54       		.byte	0x54
 10365 0dbf 78000000 		.4byte	.LVL303
 10366 0dc3 80000000 		.4byte	.LFE558
 10367 0dc7 0100     		.2byte	0x1
 10368 0dc9 50       		.byte	0x50
 10369 0dca 00000000 		.4byte	0
 10370 0dce 00000000 		.4byte	0
 10371              	.LLST96:
 10372 0dd2 00000000 		.4byte	.LVL304
 10373 0dd6 0D000000 		.4byte	.LVL305-1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 282


 10374 0dda 0100     		.2byte	0x1
 10375 0ddc 50       		.byte	0x50
 10376 0ddd 0D000000 		.4byte	.LVL305-1
 10377 0de1 9C000000 		.4byte	.LVL314
 10378 0de5 0100     		.2byte	0x1
 10379 0de7 57       		.byte	0x57
 10380 0de8 9C000000 		.4byte	.LVL314
 10381 0dec A4000000 		.4byte	.LFE559
 10382 0df0 0400     		.2byte	0x4
 10383 0df2 F3       		.byte	0xf3
 10384 0df3 01       		.uleb128 0x1
 10385 0df4 50       		.byte	0x50
 10386 0df5 9F       		.byte	0x9f
 10387 0df6 00000000 		.4byte	0
 10388 0dfa 00000000 		.4byte	0
 10389              	.LLST97:
 10390 0dfe 00000000 		.4byte	.LVL304
 10391 0e02 0D000000 		.4byte	.LVL305-1
 10392 0e06 0100     		.2byte	0x1
 10393 0e08 51       		.byte	0x51
 10394 0e09 0D000000 		.4byte	.LVL305-1
 10395 0e0d 84000000 		.4byte	.LVL310
 10396 0e11 0100     		.2byte	0x1
 10397 0e13 54       		.byte	0x54
 10398 0e14 84000000 		.4byte	.LVL310
 10399 0e18 86000000 		.4byte	.LVL311
 10400 0e1c 0400     		.2byte	0x4
 10401 0e1e F3       		.byte	0xf3
 10402 0e1f 01       		.uleb128 0x1
 10403 0e20 51       		.byte	0x51
 10404 0e21 9F       		.byte	0x9f
 10405 0e22 86000000 		.4byte	.LVL311
 10406 0e26 88000000 		.4byte	.LVL312
 10407 0e2a 0100     		.2byte	0x1
 10408 0e2c 54       		.byte	0x54
 10409 0e2d 88000000 		.4byte	.LVL312
 10410 0e31 A4000000 		.4byte	.LFE559
 10411 0e35 0400     		.2byte	0x4
 10412 0e37 F3       		.byte	0xf3
 10413 0e38 01       		.uleb128 0x1
 10414 0e39 51       		.byte	0x51
 10415 0e3a 9F       		.byte	0x9f
 10416 0e3b 00000000 		.4byte	0
 10417 0e3f 00000000 		.4byte	0
 10418              	.LLST98:
 10419 0e43 00000000 		.4byte	.LVL304
 10420 0e47 0D000000 		.4byte	.LVL305-1
 10421 0e4b 0100     		.2byte	0x1
 10422 0e4d 52       		.byte	0x52
 10423 0e4e 0D000000 		.4byte	.LVL305-1
 10424 0e52 9C000000 		.4byte	.LVL314
 10425 0e56 0100     		.2byte	0x1
 10426 0e58 55       		.byte	0x55
 10427 0e59 9C000000 		.4byte	.LVL314
 10428 0e5d A4000000 		.4byte	.LFE559
 10429 0e61 0400     		.2byte	0x4
 10430 0e63 F3       		.byte	0xf3
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 283


 10431 0e64 01       		.uleb128 0x1
 10432 0e65 52       		.byte	0x52
 10433 0e66 9F       		.byte	0x9f
 10434 0e67 00000000 		.4byte	0
 10435 0e6b 00000000 		.4byte	0
 10436              	.LLST99:
 10437 0e6f 00000000 		.4byte	.LVL304
 10438 0e73 0D000000 		.4byte	.LVL305-1
 10439 0e77 0100     		.2byte	0x1
 10440 0e79 53       		.byte	0x53
 10441 0e7a 0D000000 		.4byte	.LVL305-1
 10442 0e7e 9C000000 		.4byte	.LVL314
 10443 0e82 0100     		.2byte	0x1
 10444 0e84 56       		.byte	0x56
 10445 0e85 9C000000 		.4byte	.LVL314
 10446 0e89 A4000000 		.4byte	.LFE559
 10447 0e8d 0400     		.2byte	0x4
 10448 0e8f F3       		.byte	0xf3
 10449 0e90 01       		.uleb128 0x1
 10450 0e91 53       		.byte	0x53
 10451 0e92 9F       		.byte	0x9f
 10452 0e93 00000000 		.4byte	0
 10453 0e97 00000000 		.4byte	0
 10454              	.LLST100:
 10455 0e9b 82000000 		.4byte	.LVL309
 10456 0e9f 86000000 		.4byte	.LVL311
 10457 0ea3 0200     		.2byte	0x2
 10458 0ea5 31       		.byte	0x31
 10459 0ea6 9F       		.byte	0x9f
 10460 0ea7 88000000 		.4byte	.LVL312
 10461 0eab 9C000000 		.4byte	.LVL314
 10462 0eaf 0100     		.2byte	0x1
 10463 0eb1 54       		.byte	0x54
 10464 0eb2 9C000000 		.4byte	.LVL314
 10465 0eb6 A4000000 		.4byte	.LFE559
 10466 0eba 0100     		.2byte	0x1
 10467 0ebc 50       		.byte	0x50
 10468 0ebd 00000000 		.4byte	0
 10469 0ec1 00000000 		.4byte	0
 10470              	.LLST101:
 10471 0ec5 00000000 		.4byte	.LVL315
 10472 0ec9 13000000 		.4byte	.LVL317-1
 10473 0ecd 0100     		.2byte	0x1
 10474 0ecf 50       		.byte	0x50
 10475 0ed0 13000000 		.4byte	.LVL317-1
 10476 0ed4 BA000000 		.4byte	.LVL325
 10477 0ed8 0100     		.2byte	0x1
 10478 0eda 54       		.byte	0x54
 10479 0edb BA000000 		.4byte	.LVL325
 10480 0edf C8000000 		.4byte	.LFE560
 10481 0ee3 0400     		.2byte	0x4
 10482 0ee5 F3       		.byte	0xf3
 10483 0ee6 01       		.uleb128 0x1
 10484 0ee7 50       		.byte	0x50
 10485 0ee8 9F       		.byte	0x9f
 10486 0ee9 00000000 		.4byte	0
 10487 0eed 00000000 		.4byte	0
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 284


 10488              	.LLST102:
 10489 0ef1 00000000 		.4byte	.LVL315
 10490 0ef5 13000000 		.4byte	.LVL317-1
 10491 0ef9 0100     		.2byte	0x1
 10492 0efb 51       		.byte	0x51
 10493 0efc 13000000 		.4byte	.LVL317-1
 10494 0f00 38000000 		.4byte	.LVL319
 10495 0f04 0100     		.2byte	0x1
 10496 0f06 56       		.byte	0x56
 10497 0f07 38000000 		.4byte	.LVL319
 10498 0f0b 3E000000 		.4byte	.LVL320
 10499 0f0f 0400     		.2byte	0x4
 10500 0f11 F3       		.byte	0xf3
 10501 0f12 01       		.uleb128 0x1
 10502 0f13 51       		.byte	0x51
 10503 0f14 9F       		.byte	0x9f
 10504 0f15 3E000000 		.4byte	.LVL320
 10505 0f19 5E000000 		.4byte	.LVL321
 10506 0f1d 0100     		.2byte	0x1
 10507 0f1f 56       		.byte	0x56
 10508 0f20 5E000000 		.4byte	.LVL321
 10509 0f24 C8000000 		.4byte	.LFE560
 10510 0f28 0400     		.2byte	0x4
 10511 0f2a F3       		.byte	0xf3
 10512 0f2b 01       		.uleb128 0x1
 10513 0f2c 51       		.byte	0x51
 10514 0f2d 9F       		.byte	0x9f
 10515 0f2e 00000000 		.4byte	0
 10516 0f32 00000000 		.4byte	0
 10517              	.LLST103:
 10518 0f36 00000000 		.4byte	.LVL315
 10519 0f3a 13000000 		.4byte	.LVL317-1
 10520 0f3e 0100     		.2byte	0x1
 10521 0f40 52       		.byte	0x52
 10522 0f41 13000000 		.4byte	.LVL317-1
 10523 0f45 C8000000 		.4byte	.LFE560
 10524 0f49 0400     		.2byte	0x4
 10525 0f4b F3       		.byte	0xf3
 10526 0f4c 01       		.uleb128 0x1
 10527 0f4d 52       		.byte	0x52
 10528 0f4e 9F       		.byte	0x9f
 10529 0f4f 00000000 		.4byte	0
 10530 0f53 00000000 		.4byte	0
 10531              	.LLST104:
 10532 0f57 00000000 		.4byte	.LVL315
 10533 0f5b 13000000 		.4byte	.LVL317-1
 10534 0f5f 0100     		.2byte	0x1
 10535 0f61 53       		.byte	0x53
 10536 0f62 13000000 		.4byte	.LVL317-1
 10537 0f66 BA000000 		.4byte	.LVL325
 10538 0f6a 0100     		.2byte	0x1
 10539 0f6c 57       		.byte	0x57
 10540 0f6d BA000000 		.4byte	.LVL325
 10541 0f71 C8000000 		.4byte	.LFE560
 10542 0f75 0400     		.2byte	0x4
 10543 0f77 F3       		.byte	0xf3
 10544 0f78 01       		.uleb128 0x1
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 285


 10545 0f79 53       		.byte	0x53
 10546 0f7a 9F       		.byte	0x9f
 10547 0f7b 00000000 		.4byte	0
 10548 0f7f 00000000 		.4byte	0
 10549              	.LLST105:
 10550 0f83 10000000 		.4byte	.LVL316
 10551 0f87 BA000000 		.4byte	.LVL325
 10552 0f8b 0100     		.2byte	0x1
 10553 0f8d 54       		.byte	0x54
 10554 0f8e BA000000 		.4byte	.LVL325
 10555 0f92 C8000000 		.4byte	.LFE560
 10556 0f96 0400     		.2byte	0x4
 10557 0f98 F3       		.byte	0xf3
 10558 0f99 01       		.uleb128 0x1
 10559 0f9a 50       		.byte	0x50
 10560 0f9b 9F       		.byte	0x9f
 10561 0f9c 00000000 		.4byte	0
 10562 0fa0 00000000 		.4byte	0
 10563              	.LLST106:
 10564 0fa4 00000000 		.4byte	.LVL315
 10565 0fa8 5E000000 		.4byte	.LVL321
 10566 0fac 0200     		.2byte	0x2
 10567 0fae 31       		.byte	0x31
 10568 0faf 9F       		.byte	0x9f
 10569 0fb0 5E000000 		.4byte	.LVL321
 10570 0fb4 BA000000 		.4byte	.LVL325
 10571 0fb8 0100     		.2byte	0x1
 10572 0fba 55       		.byte	0x55
 10573 0fbb BA000000 		.4byte	.LVL325
 10574 0fbf C8000000 		.4byte	.LFE560
 10575 0fc3 0100     		.2byte	0x1
 10576 0fc5 50       		.byte	0x50
 10577 0fc6 00000000 		.4byte	0
 10578 0fca 00000000 		.4byte	0
 10579              	.LLST107:
 10580 0fce 20000000 		.4byte	.LVL318
 10581 0fd2 69000000 		.4byte	.LVL322-1
 10582 0fd6 0100     		.2byte	0x1
 10583 0fd8 53       		.byte	0x53
 10584 0fd9 00000000 		.4byte	0
 10585 0fdd 00000000 		.4byte	0
 10586              	.LLST108:
 10587 0fe1 00000000 		.4byte	.LVL326
 10588 0fe5 17000000 		.4byte	.LVL328-1
 10589 0fe9 0100     		.2byte	0x1
 10590 0feb 50       		.byte	0x50
 10591 0fec 17000000 		.4byte	.LVL328-1
 10592 0ff0 F6000000 		.4byte	.LVL339
 10593 0ff4 0100     		.2byte	0x1
 10594 0ff6 54       		.byte	0x54
 10595 0ff7 F6000000 		.4byte	.LVL339
 10596 0ffb 04010000 		.4byte	.LFE561
 10597 0fff 0400     		.2byte	0x4
 10598 1001 F3       		.byte	0xf3
 10599 1002 01       		.uleb128 0x1
 10600 1003 50       		.byte	0x50
 10601 1004 9F       		.byte	0x9f
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 286


 10602 1005 00000000 		.4byte	0
 10603 1009 00000000 		.4byte	0
 10604              	.LLST109:
 10605 100d 00000000 		.4byte	.LVL326
 10606 1011 17000000 		.4byte	.LVL328-1
 10607 1015 0100     		.2byte	0x1
 10608 1017 51       		.byte	0x51
 10609 1018 17000000 		.4byte	.LVL328-1
 10610 101c 9A000000 		.4byte	.LVL332
 10611 1020 0100     		.2byte	0x1
 10612 1022 58       		.byte	0x58
 10613 1023 9A000000 		.4byte	.LVL332
 10614 1027 C4000000 		.4byte	.LVL335
 10615 102b 0400     		.2byte	0x4
 10616 102d F3       		.byte	0xf3
 10617 102e 01       		.uleb128 0x1
 10618 102f 51       		.byte	0x51
 10619 1030 9F       		.byte	0x9f
 10620 1031 C4000000 		.4byte	.LVL335
 10621 1035 CE000000 		.4byte	.LVL336
 10622 1039 0100     		.2byte	0x1
 10623 103b 58       		.byte	0x58
 10624 103c CE000000 		.4byte	.LVL336
 10625 1040 04010000 		.4byte	.LFE561
 10626 1044 0400     		.2byte	0x4
 10627 1046 F3       		.byte	0xf3
 10628 1047 01       		.uleb128 0x1
 10629 1048 51       		.byte	0x51
 10630 1049 9F       		.byte	0x9f
 10631 104a 00000000 		.4byte	0
 10632 104e 00000000 		.4byte	0
 10633              	.LLST110:
 10634 1052 00000000 		.4byte	.LVL326
 10635 1056 17000000 		.4byte	.LVL328-1
 10636 105a 0100     		.2byte	0x1
 10637 105c 52       		.byte	0x52
 10638 105d 17000000 		.4byte	.LVL328-1
 10639 1061 04010000 		.4byte	.LFE561
 10640 1065 0400     		.2byte	0x4
 10641 1067 F3       		.byte	0xf3
 10642 1068 01       		.uleb128 0x1
 10643 1069 52       		.byte	0x52
 10644 106a 9F       		.byte	0x9f
 10645 106b 00000000 		.4byte	0
 10646 106f 00000000 		.4byte	0
 10647              	.LLST111:
 10648 1073 00000000 		.4byte	.LVL326
 10649 1077 17000000 		.4byte	.LVL328-1
 10650 107b 0100     		.2byte	0x1
 10651 107d 53       		.byte	0x53
 10652 107e 17000000 		.4byte	.LVL328-1
 10653 1082 F6000000 		.4byte	.LVL339
 10654 1086 0100     		.2byte	0x1
 10655 1088 59       		.byte	0x59
 10656 1089 F6000000 		.4byte	.LVL339
 10657 108d 04010000 		.4byte	.LFE561
 10658 1091 0400     		.2byte	0x4
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 287


 10659 1093 F3       		.byte	0xf3
 10660 1094 01       		.uleb128 0x1
 10661 1095 53       		.byte	0x53
 10662 1096 9F       		.byte	0x9f
 10663 1097 00000000 		.4byte	0
 10664 109b 00000000 		.4byte	0
 10665              	.LLST112:
 10666 109f 00000000 		.4byte	.LVL326
 10667 10a3 F6000000 		.4byte	.LVL339
 10668 10a7 0200     		.2byte	0x2
 10669 10a9 91       		.byte	0x91
 10670 10aa 00       		.sleb128 0
 10671 10ab F6000000 		.4byte	.LVL339
 10672 10af 04010000 		.4byte	.LFE561
 10673 10b3 0200     		.2byte	0x2
 10674 10b5 7D       		.byte	0x7d
 10675 10b6 00       		.sleb128 0
 10676 10b7 00000000 		.4byte	0
 10677 10bb 00000000 		.4byte	0
 10678              	.LLST113:
 10679 10bf 18000000 		.4byte	.LVL328
 10680 10c3 F6000000 		.4byte	.LVL339
 10681 10c7 0100     		.2byte	0x1
 10682 10c9 54       		.byte	0x54
 10683 10ca F6000000 		.4byte	.LVL339
 10684 10ce 04010000 		.4byte	.LFE561
 10685 10d2 0400     		.2byte	0x4
 10686 10d4 F3       		.byte	0xf3
 10687 10d5 01       		.uleb128 0x1
 10688 10d6 50       		.byte	0x50
 10689 10d7 9F       		.byte	0x9f
 10690 10d8 00000000 		.4byte	0
 10691 10dc 00000000 		.4byte	0
 10692              	.LLST114:
 10693 10e0 3E000000 		.4byte	.LVL329
 10694 10e4 88000000 		.4byte	.LVL331
 10695 10e8 0100     		.2byte	0x1
 10696 10ea 53       		.byte	0x53
 10697 10eb 00000000 		.4byte	0
 10698 10ef 00000000 		.4byte	0
 10699              	.LLST115:
 10700 10f3 06000000 		.4byte	.LVL327
 10701 10f7 82000000 		.4byte	.LVL330
 10702 10fb 0200     		.2byte	0x2
 10703 10fd 31       		.byte	0x31
 10704 10fe 9F       		.byte	0x9f
 10705 10ff 82000000 		.4byte	.LVL330
 10706 1103 F6000000 		.4byte	.LVL339
 10707 1107 0100     		.2byte	0x1
 10708 1109 55       		.byte	0x55
 10709 110a F6000000 		.4byte	.LVL339
 10710 110e 04010000 		.4byte	.LFE561
 10711 1112 0100     		.2byte	0x1
 10712 1114 50       		.byte	0x50
 10713 1115 00000000 		.4byte	0
 10714 1119 00000000 		.4byte	0
 10715              	.LLST116:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 288


 10716 111d EC000000 		.4byte	.LVL337
 10717 1121 F0000000 		.4byte	.LVL338
 10718 1125 0100     		.2byte	0x1
 10719 1127 57       		.byte	0x57
 10720 1128 00000000 		.4byte	0
 10721 112c 00000000 		.4byte	0
 10722              	.LLST117:
 10723 1130 00000000 		.4byte	.LVL340
 10724 1134 0F000000 		.4byte	.LVL341-1
 10725 1138 0100     		.2byte	0x1
 10726 113a 50       		.byte	0x50
 10727 113b 0F000000 		.4byte	.LVL341-1
 10728 113f A4000000 		.4byte	.LVL349
 10729 1143 0100     		.2byte	0x1
 10730 1145 54       		.byte	0x54
 10731 1146 A4000000 		.4byte	.LVL349
 10732 114a B0000000 		.4byte	.LFE562
 10733 114e 0400     		.2byte	0x4
 10734 1150 F3       		.byte	0xf3
 10735 1151 01       		.uleb128 0x1
 10736 1152 50       		.byte	0x50
 10737 1153 9F       		.byte	0x9f
 10738 1154 00000000 		.4byte	0
 10739 1158 00000000 		.4byte	0
 10740              	.LLST118:
 10741 115c 00000000 		.4byte	.LVL340
 10742 1160 0F000000 		.4byte	.LVL341-1
 10743 1164 0100     		.2byte	0x1
 10744 1166 51       		.byte	0x51
 10745 1167 0F000000 		.4byte	.LVL341-1
 10746 116b A4000000 		.4byte	.LVL349
 10747 116f 0100     		.2byte	0x1
 10748 1171 55       		.byte	0x55
 10749 1172 A4000000 		.4byte	.LVL349
 10750 1176 B0000000 		.4byte	.LFE562
 10751 117a 0400     		.2byte	0x4
 10752 117c F3       		.byte	0xf3
 10753 117d 01       		.uleb128 0x1
 10754 117e 51       		.byte	0x51
 10755 117f 9F       		.byte	0x9f
 10756 1180 00000000 		.4byte	0
 10757 1184 00000000 		.4byte	0
 10758              	.LLST119:
 10759 1188 10000000 		.4byte	.LVL341
 10760 118c A4000000 		.4byte	.LVL349
 10761 1190 0100     		.2byte	0x1
 10762 1192 54       		.byte	0x54
 10763 1193 A4000000 		.4byte	.LVL349
 10764 1197 B0000000 		.4byte	.LFE562
 10765 119b 0400     		.2byte	0x4
 10766 119d F3       		.byte	0xf3
 10767 119e 01       		.uleb128 0x1
 10768 119f 50       		.byte	0x50
 10769 11a0 9F       		.byte	0x9f
 10770 11a1 00000000 		.4byte	0
 10771 11a5 00000000 		.4byte	0
 10772              	.LLST120:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 289


 10773 11a9 2A000000 		.4byte	.LVL342
 10774 11ad 3C000000 		.4byte	.LVL343
 10775 11b1 0100     		.2byte	0x1
 10776 11b3 53       		.byte	0x53
 10777 11b4 00000000 		.4byte	0
 10778 11b8 00000000 		.4byte	0
 10779              	.LLST121:
 10780 11bc 9E000000 		.4byte	.LVL347
 10781 11c0 A2000000 		.4byte	.LVL348
 10782 11c4 0100     		.2byte	0x1
 10783 11c6 56       		.byte	0x56
 10784 11c7 00000000 		.4byte	0
 10785 11cb 00000000 		.4byte	0
 10786              	.LLST122:
 10787 11cf 00000000 		.4byte	.LVL350
 10788 11d3 0C000000 		.4byte	.LVL351
 10789 11d7 0100     		.2byte	0x1
 10790 11d9 50       		.byte	0x50
 10791 11da 00000000 		.4byte	0
 10792 11de 00000000 		.4byte	0
 10793              	.LLST123:
 10794 11e2 0C000000 		.4byte	.LVL351
 10795 11e6 22000000 		.4byte	.LVL354
 10796 11ea 0100     		.2byte	0x1
 10797 11ec 54       		.byte	0x54
 10798 11ed 24000000 		.4byte	.LVL355
 10799 11f1 26000000 		.4byte	.LVL356
 10800 11f5 0100     		.2byte	0x1
 10801 11f7 54       		.byte	0x54
 10802 11f8 00000000 		.4byte	0
 10803 11fc 00000000 		.4byte	0
 10804              	.LLST124:
 10805 1200 20000000 		.4byte	.LVL353
 10806 1204 24000000 		.4byte	.LVL355
 10807 1208 0200     		.2byte	0x2
 10808 120a 31       		.byte	0x31
 10809 120b 9F       		.byte	0x9f
 10810 120c 26000000 		.4byte	.LVL356
 10811 1210 2E000000 		.4byte	.LVL358
 10812 1214 0100     		.2byte	0x1
 10813 1216 54       		.byte	0x54
 10814 1217 2E000000 		.4byte	.LVL358
 10815 121b 34000000 		.4byte	.LFE563
 10816 121f 0100     		.2byte	0x1
 10817 1221 50       		.byte	0x50
 10818 1222 00000000 		.4byte	0
 10819 1226 00000000 		.4byte	0
 10820              		.section	.debug_aranges,"",%progbits
 10821 0000 94010000 		.4byte	0x194
 10822 0004 0200     		.2byte	0x2
 10823 0006 00000000 		.4byte	.Ldebug_info0
 10824 000a 04       		.byte	0x4
 10825 000b 00       		.byte	0
 10826 000c 0000     		.2byte	0
 10827 000e 0000     		.2byte	0
 10828 0010 00000000 		.4byte	.LFB527
 10829 0014 40000000 		.4byte	.LFE527-.LFB527
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 290


 10830 0018 00000000 		.4byte	.LFB554
 10831 001c 2C000000 		.4byte	.LFE554-.LFB554
 10832 0020 00000000 		.4byte	.LFB553
 10833 0024 12000000 		.4byte	.LFE553-.LFB553
 10834 0028 00000000 		.4byte	.LFB518
 10835 002c 9E000000 		.4byte	.LFE518-.LFB518
 10836 0030 00000000 		.4byte	.LFB551
 10837 0034 58000000 		.4byte	.LFE551-.LFB551
 10838 0038 00000000 		.4byte	.LFB519
 10839 003c AC000000 		.4byte	.LFE519-.LFB519
 10840 0040 00000000 		.4byte	.LFB564
 10841 0044 68000000 		.4byte	.LFE564-.LFB564
 10842 0048 00000000 		.4byte	.LFB517
 10843 004c 62000000 		.4byte	.LFE517-.LFB517
 10844 0050 00000000 		.4byte	.LFB520
 10845 0054 A4000000 		.4byte	.LFE520-.LFB520
 10846 0058 00000000 		.4byte	.LFB523
 10847 005c 20000000 		.4byte	.LFE523-.LFB523
 10848 0060 00000000 		.4byte	.LFB524
 10849 0064 30000000 		.4byte	.LFE524-.LFB524
 10850 0068 00000000 		.4byte	.LFB525
 10851 006c D0000000 		.4byte	.LFE525-.LFB525
 10852 0070 00000000 		.4byte	.LFB528
 10853 0074 7C000000 		.4byte	.LFE528-.LFB528
 10854 0078 00000000 		.4byte	.LFB529
 10855 007c 98000000 		.4byte	.LFE529-.LFB529
 10856 0080 00000000 		.4byte	.LFB530
 10857 0084 60000000 		.4byte	.LFE530-.LFB530
 10858 0088 00000000 		.4byte	.LFB531
 10859 008c 18000000 		.4byte	.LFE531-.LFB531
 10860 0090 00000000 		.4byte	.LFB532
 10861 0094 14000000 		.4byte	.LFE532-.LFB532
 10862 0098 00000000 		.4byte	.LFB534
 10863 009c 0C000000 		.4byte	.LFE534-.LFB534
 10864 00a0 00000000 		.4byte	.LFB535
 10865 00a4 14000000 		.4byte	.LFE535-.LFB535
 10866 00a8 00000000 		.4byte	.LFB536
 10867 00ac 0C000000 		.4byte	.LFE536-.LFB536
 10868 00b0 00000000 		.4byte	.LFB537
 10869 00b4 1C000000 		.4byte	.LFE537-.LFB537
 10870 00b8 00000000 		.4byte	.LFB538
 10871 00bc F0000000 		.4byte	.LFE538-.LFB538
 10872 00c0 00000000 		.4byte	.LFB533
 10873 00c4 E4000000 		.4byte	.LFE533-.LFB533
 10874 00c8 00000000 		.4byte	.LFB521
 10875 00cc 84000000 		.4byte	.LFE521-.LFB521
 10876 00d0 00000000 		.4byte	.LFB522
 10877 00d4 44000000 		.4byte	.LFE522-.LFB522
 10878 00d8 00000000 		.4byte	.LFB552
 10879 00dc 54000000 		.4byte	.LFE552-.LFB552
 10880 00e0 00000000 		.4byte	.LFB548
 10881 00e4 2C000000 		.4byte	.LFE548-.LFB548
 10882 00e8 00000000 		.4byte	.LFB539
 10883 00ec BC000000 		.4byte	.LFE539-.LFB539
 10884 00f0 00000000 		.4byte	.LFB526
 10885 00f4 98000000 		.4byte	.LFE526-.LFB526
 10886 00f8 00000000 		.4byte	.LFB540
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 291


 10887 00fc 24000000 		.4byte	.LFE540-.LFB540
 10888 0100 00000000 		.4byte	.LFB541
 10889 0104 40000000 		.4byte	.LFE541-.LFB541
 10890 0108 00000000 		.4byte	.LFB542
 10891 010c 2C000000 		.4byte	.LFE542-.LFB542
 10892 0110 00000000 		.4byte	.LFB543
 10893 0114 7C000000 		.4byte	.LFE543-.LFB543
 10894 0118 00000000 		.4byte	.LFB544
 10895 011c 6C000000 		.4byte	.LFE544-.LFB544
 10896 0120 00000000 		.4byte	.LFB545
 10897 0124 1C000000 		.4byte	.LFE545-.LFB545
 10898 0128 00000000 		.4byte	.LFB546
 10899 012c 64000000 		.4byte	.LFE546-.LFB546
 10900 0130 00000000 		.4byte	.LFB547
 10901 0134 10000000 		.4byte	.LFE547-.LFB547
 10902 0138 00000000 		.4byte	.LFB549
 10903 013c 1C000000 		.4byte	.LFE549-.LFB549
 10904 0140 00000000 		.4byte	.LFB550
 10905 0144 20000000 		.4byte	.LFE550-.LFB550
 10906 0148 00000000 		.4byte	.LFB555
 10907 014c 0C000000 		.4byte	.LFE555-.LFB555
 10908 0150 00000000 		.4byte	.LFB556
 10909 0154 20000000 		.4byte	.LFE556-.LFB556
 10910 0158 00000000 		.4byte	.LFB557
 10911 015c 20000000 		.4byte	.LFE557-.LFB557
 10912 0160 00000000 		.4byte	.LFB558
 10913 0164 80000000 		.4byte	.LFE558-.LFB558
 10914 0168 00000000 		.4byte	.LFB559
 10915 016c A4000000 		.4byte	.LFE559-.LFB559
 10916 0170 00000000 		.4byte	.LFB560
 10917 0174 C8000000 		.4byte	.LFE560-.LFB560
 10918 0178 00000000 		.4byte	.LFB561
 10919 017c 04010000 		.4byte	.LFE561-.LFB561
 10920 0180 00000000 		.4byte	.LFB562
 10921 0184 B0000000 		.4byte	.LFE562-.LFB562
 10922 0188 00000000 		.4byte	.LFB563
 10923 018c 34000000 		.4byte	.LFE563-.LFB563
 10924 0190 00000000 		.4byte	0
 10925 0194 00000000 		.4byte	0
 10926              		.section	.debug_ranges,"",%progbits
 10927              	.Ldebug_ranges0:
 10928 0000 0E000000 		.4byte	.LBB27
 10929 0004 4A000000 		.4byte	.LBE27
 10930 0008 4E000000 		.4byte	.LBB29
 10931 000c CC000000 		.4byte	.LBE29
 10932 0010 00000000 		.4byte	0
 10933 0014 00000000 		.4byte	0
 10934 0018 22000000 		.4byte	.LBB31
 10935 001c 38000000 		.4byte	.LBE31
 10936 0020 3C000000 		.4byte	.LBB32
 10937 0024 44000000 		.4byte	.LBE32
 10938 0028 4C000000 		.4byte	.LBB33
 10939 002c 62000000 		.4byte	.LBE33
 10940 0030 00000000 		.4byte	0
 10941 0034 00000000 		.4byte	0
 10942 0038 00000000 		.4byte	.LFB527
 10943 003c 40000000 		.4byte	.LFE527
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 292


 10944 0040 00000000 		.4byte	.LFB554
 10945 0044 2C000000 		.4byte	.LFE554
 10946 0048 00000000 		.4byte	.LFB553
 10947 004c 12000000 		.4byte	.LFE553
 10948 0050 00000000 		.4byte	.LFB518
 10949 0054 9E000000 		.4byte	.LFE518
 10950 0058 00000000 		.4byte	.LFB551
 10951 005c 58000000 		.4byte	.LFE551
 10952 0060 00000000 		.4byte	.LFB519
 10953 0064 AC000000 		.4byte	.LFE519
 10954 0068 00000000 		.4byte	.LFB564
 10955 006c 68000000 		.4byte	.LFE564
 10956 0070 00000000 		.4byte	.LFB517
 10957 0074 62000000 		.4byte	.LFE517
 10958 0078 00000000 		.4byte	.LFB520
 10959 007c A4000000 		.4byte	.LFE520
 10960 0080 00000000 		.4byte	.LFB523
 10961 0084 20000000 		.4byte	.LFE523
 10962 0088 00000000 		.4byte	.LFB524
 10963 008c 30000000 		.4byte	.LFE524
 10964 0090 00000000 		.4byte	.LFB525
 10965 0094 D0000000 		.4byte	.LFE525
 10966 0098 00000000 		.4byte	.LFB528
 10967 009c 7C000000 		.4byte	.LFE528
 10968 00a0 00000000 		.4byte	.LFB529
 10969 00a4 98000000 		.4byte	.LFE529
 10970 00a8 00000000 		.4byte	.LFB530
 10971 00ac 60000000 		.4byte	.LFE530
 10972 00b0 00000000 		.4byte	.LFB531
 10973 00b4 18000000 		.4byte	.LFE531
 10974 00b8 00000000 		.4byte	.LFB532
 10975 00bc 14000000 		.4byte	.LFE532
 10976 00c0 00000000 		.4byte	.LFB534
 10977 00c4 0C000000 		.4byte	.LFE534
 10978 00c8 00000000 		.4byte	.LFB535
 10979 00cc 14000000 		.4byte	.LFE535
 10980 00d0 00000000 		.4byte	.LFB536
 10981 00d4 0C000000 		.4byte	.LFE536
 10982 00d8 00000000 		.4byte	.LFB537
 10983 00dc 1C000000 		.4byte	.LFE537
 10984 00e0 00000000 		.4byte	.LFB538
 10985 00e4 F0000000 		.4byte	.LFE538
 10986 00e8 00000000 		.4byte	.LFB533
 10987 00ec E4000000 		.4byte	.LFE533
 10988 00f0 00000000 		.4byte	.LFB521
 10989 00f4 84000000 		.4byte	.LFE521
 10990 00f8 00000000 		.4byte	.LFB522
 10991 00fc 44000000 		.4byte	.LFE522
 10992 0100 00000000 		.4byte	.LFB552
 10993 0104 54000000 		.4byte	.LFE552
 10994 0108 00000000 		.4byte	.LFB548
 10995 010c 2C000000 		.4byte	.LFE548
 10996 0110 00000000 		.4byte	.LFB539
 10997 0114 BC000000 		.4byte	.LFE539
 10998 0118 00000000 		.4byte	.LFB526
 10999 011c 98000000 		.4byte	.LFE526
 11000 0120 00000000 		.4byte	.LFB540
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 293


 11001 0124 24000000 		.4byte	.LFE540
 11002 0128 00000000 		.4byte	.LFB541
 11003 012c 40000000 		.4byte	.LFE541
 11004 0130 00000000 		.4byte	.LFB542
 11005 0134 2C000000 		.4byte	.LFE542
 11006 0138 00000000 		.4byte	.LFB543
 11007 013c 7C000000 		.4byte	.LFE543
 11008 0140 00000000 		.4byte	.LFB544
 11009 0144 6C000000 		.4byte	.LFE544
 11010 0148 00000000 		.4byte	.LFB545
 11011 014c 1C000000 		.4byte	.LFE545
 11012 0150 00000000 		.4byte	.LFB546
 11013 0154 64000000 		.4byte	.LFE546
 11014 0158 00000000 		.4byte	.LFB547
 11015 015c 10000000 		.4byte	.LFE547
 11016 0160 00000000 		.4byte	.LFB549
 11017 0164 1C000000 		.4byte	.LFE549
 11018 0168 00000000 		.4byte	.LFB550
 11019 016c 20000000 		.4byte	.LFE550
 11020 0170 00000000 		.4byte	.LFB555
 11021 0174 0C000000 		.4byte	.LFE555
 11022 0178 00000000 		.4byte	.LFB556
 11023 017c 20000000 		.4byte	.LFE556
 11024 0180 00000000 		.4byte	.LFB557
 11025 0184 20000000 		.4byte	.LFE557
 11026 0188 00000000 		.4byte	.LFB558
 11027 018c 80000000 		.4byte	.LFE558
 11028 0190 00000000 		.4byte	.LFB559
 11029 0194 A4000000 		.4byte	.LFE559
 11030 0198 00000000 		.4byte	.LFB560
 11031 019c C8000000 		.4byte	.LFE560
 11032 01a0 00000000 		.4byte	.LFB561
 11033 01a4 04010000 		.4byte	.LFE561
 11034 01a8 00000000 		.4byte	.LFB562
 11035 01ac B0000000 		.4byte	.LFE562
 11036 01b0 00000000 		.4byte	.LFB563
 11037 01b4 34000000 		.4byte	.LFE563
 11038 01b8 00000000 		.4byte	0
 11039 01bc 00000000 		.4byte	0
 11040              		.section	.debug_line,"",%progbits
 11041              	.Ldebug_line0:
 11042 0000 380D0000 		.section	.debug_str,"MS",%progbits,1
 11042      02004504 
 11042      00000201 
 11042      FB0E0D00 
 11042      01010101 
 11043              	.LASF79:
 11044 0000 75784E75 		.ascii	"uxNumberOfItems\000"
 11044      6D626572 
 11044      4F664974 
 11044      656D7300 
 11045              	.LASF25:
 11046 0010 63795F63 		.ascii	"cy_cb_scb_spi_handle_events_t\000"
 11046      625F7363 
 11046      625F7370 
 11046      695F6861 
 11046      6E646C65 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 294


 11047              	.LASF253:
 11048 002e 76506F72 		.ascii	"vPortExitCritical\000"
 11048      74457869 
 11048      74437269 
 11048      74696361 
 11048      6C00
 11049              	.LASF259:
 11050 0040 78506F72 		.ascii	"xPortStartScheduler\000"
 11050      74537461 
 11050      72745363 
 11050      68656475 
 11050      6C657200 
 11051              	.LASF103:
 11052 0054 75785072 		.ascii	"uxPriority\000"
 11052      696F7269 
 11052      747900
 11053              	.LASF177:
 11054 005f 7078436F 		.ascii	"pxConstList\000"
 11054      6E73744C 
 11054      69737400 
 11055              	.LASF99:
 11056 006b 74736B54 		.ascii	"tskTaskControlBlock\000"
 11056      61736B43 
 11056      6F6E7472 
 11056      6F6C426C 
 11056      6F636B00 
 11057              	.LASF162:
 11058 007f 75785065 		.ascii	"uxPendedCounts\000"
 11058      6E646564 
 11058      436F756E 
 11058      747300
 11059              	.LASF195:
 11060 008e 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 11060      6B536574 
 11060      54687265 
 11060      61644C6F 
 11060      63616C53 
 11061              	.LASF209:
 11062 00b0 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 11062      7473546F 
 11062      436C6561 
 11062      724F6E45 
 11062      78697400 
 11063              	.LASF43:
 11064 00c4 73616D70 		.ascii	"sampleTime01\000"
 11064      6C655469 
 11064      6D653031 
 11064      00
 11065              	.LASF269:
 11066 00d1 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 11066      736B4765 
 11066      744E756D 
 11066      6265724F 
 11066      66546173 
 11067              	.LASF202:
 11068 00e8 78546173 		.ascii	"xTaskGetSchedulerState\000"
 11068      6B476574 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 295


 11068      53636865 
 11068      64756C65 
 11068      72537461 
 11069              	.LASF218:
 11070 00ff 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 11070      67686572 
 11070      5072696F 
 11070      72697479 
 11070      5461736B 
 11071              	.LASF84:
 11072 0119 654E6F41 		.ascii	"eNoAction\000"
 11072      6374696F 
 11072      6E00
 11073              	.LASF0:
 11074 0123 756E7369 		.ascii	"unsigned int\000"
 11074      676E6564 
 11074      20696E74 
 11074      00
 11075              	.LASF181:
 11076 0130 70784576 		.ascii	"pxEventList\000"
 11076      656E744C 
 11076      69737400 
 11077              	.LASF233:
 11078 013c 78536368 		.ascii	"xSchedulerRunning\000"
 11078      6564756C 
 11078      65725275 
 11078      6E6E696E 
 11078      6700
 11079              	.LASF80:
 11080 014e 7078496E 		.ascii	"pxIndex\000"
 11080      64657800 
 11081              	.LASF20:
 11082 0156 75696E74 		.ascii	"uint32_t\000"
 11082      33325F74 
 11082      00
 11083              	.LASF64:
 11084 015f 53746163 		.ascii	"StackType_t\000"
 11084      6B547970 
 11084      655F7400 
 11085              	.LASF39:
 11086 016b 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 11086      41525F52 
 11086      414E4745 
 11086      5F434F4E 
 11086      445F4F55 
 11087              	.LASF90:
 11088 0185 7854494D 		.ascii	"xTIME_OUT\000"
 11088      455F4F55 
 11088      5400
 11089              	.LASF32:
 11090 018f 74784275 		.ascii	"txBufIdx\000"
 11090      66496478 
 11090      00
 11091              	.LASF228:
 11092 0198 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 11092      6C657465 
 11092      64546173 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 296


 11092      6B735761 
 11092      6974696E 
 11093              	.LASF10:
 11094 01b5 5F5F696E 		.ascii	"__int32_t\000"
 11094      7433325F 
 11094      7400
 11095              	.LASF69:
 11096 01bf 784C4953 		.ascii	"xLIST_ITEM\000"
 11096      545F4954 
 11096      454D00
 11097              	.LASF221:
 11098 01ca 70785265 		.ascii	"pxReadyTasksLists\000"
 11098      61647954 
 11098      61736B73 
 11098      4C697374 
 11098      7300
 11099              	.LASF57:
 11100 01dc 6368616E 		.ascii	"channelBase\000"
 11100      6E656C42 
 11100      61736500 
 11101              	.LASF59:
 11102 01e8 6877436F 		.ascii	"hwConfigStc\000"
 11102      6E666967 
 11102      53746300 
 11103              	.LASF78:
 11104 01f4 784C4953 		.ascii	"xLIST\000"
 11104      5400
 11105              	.LASF216:
 11106 01fa 75634F72 		.ascii	"ucOriginalNotifyState\000"
 11106      6967696E 
 11106      616C4E6F 
 11106      74696679 
 11106      53746174 
 11107              	.LASF189:
 11108 0210 76546173 		.ascii	"vTaskSetTimeOutState\000"
 11108      6B536574 
 11108      54696D65 
 11108      4F757453 
 11108      74617465 
 11109              	.LASF157:
 11110 0225 78546173 		.ascii	"xTaskIncrementTick\000"
 11110      6B496E63 
 11110      72656D65 
 11110      6E745469 
 11110      636B00
 11111              	.LASF242:
 11112 0238 43595F45 		.ascii	"CY_EINK_SPIM_context\000"
 11112      494E4B5F 
 11112      5350494D 
 11112      5F636F6E 
 11112      74657874 
 11113              	.LASF223:
 11114 024d 7844656C 		.ascii	"xDelayedTaskList2\000"
 11114      61796564 
 11114      5461736B 
 11114      4C697374 
 11114      3200
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 297


 11115              	.LASF50:
 11116 025f 73617449 		.ascii	"satIntrMask\000"
 11116      6E74724D 
 11116      61736B00 
 11117              	.LASF91:
 11118 026b 784F7665 		.ascii	"xOverflowCount\000"
 11118      72666C6F 
 11118      77436F75 
 11118      6E7400
 11119              	.LASF267:
 11120 027a 76506F72 		.ascii	"vPortSetBASEPRI\000"
 11120      74536574 
 11120      42415345 
 11120      50524900 
 11121              	.LASF251:
 11122 028a 76506F72 		.ascii	"vPortEnterCritical\000"
 11122      74456E74 
 11122      65724372 
 11122      69746963 
 11122      616C00
 11123              	.LASF101:
 11124 029d 78537461 		.ascii	"xStateListItem\000"
 11124      74654C69 
 11124      73744974 
 11124      656D00
 11125              	.LASF261:
 11126 02ac 76417070 		.ascii	"vApplicationIdleHook\000"
 11126      6C696361 
 11126      74696F6E 
 11126      49646C65 
 11126      486F6F6B 
 11127              	.LASF263:
 11128 02c1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 11128      43313120 
 11128      352E342E 
 11128      31203230 
 11128      31363036 
 11129 02f4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 11129      20726576 
 11129      6973696F 
 11129      6E203233 
 11129      37373135 
 11130 0327 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 11130      70202D6D 
 11130      6670753D 
 11130      66707634 
 11130      2D73702D 
 11131 035a 65637469 		.ascii	"ections -ffat-lto-objects\000"
 11131      6F6E7320 
 11131      2D666661 
 11131      742D6C74 
 11131      6F2D6F62 
 11132              	.LASF36:
 11133 0374 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 11133      41525F52 
 11133      414E4745 
 11133      5F434F4E 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 298


 11133      445F4245 
 11134              	.LASF97:
 11135 038c 756C5061 		.ascii	"ulParameters\000"
 11135      72616D65 
 11135      74657273 
 11135      00
 11136              	.LASF147:
 11137 0399 78546173 		.ascii	"xTaskToResume\000"
 11137      6B546F52 
 11137      6573756D 
 11137      6500
 11138              	.LASF192:
 11139 03a7 70785469 		.ascii	"pxTicksToWait\000"
 11139      636B7354 
 11139      6F576169 
 11139      7400
 11140              	.LASF258:
 11141 03b5 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 11141      65724372 
 11141      65617465 
 11141      54696D65 
 11141      72546173 
 11142              	.LASF109:
 11143 03cb 74736B54 		.ascii	"tskTCB\000"
 11143      434200
 11144              	.LASF217:
 11145 03d2 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 11145      6B47656E 
 11145      65726963 
 11145      4E6F7469 
 11145      66794672 
 11146              	.LASF66:
 11147 03ec 55426173 		.ascii	"UBaseType_t\000"
 11147      65547970 
 11147      655F7400 
 11148              	.LASF254:
 11149 03f8 75784C69 		.ascii	"uxListRemove\000"
 11149      73745265 
 11149      6D6F7665 
 11149      00
 11150              	.LASF145:
 11151 0405 78596965 		.ascii	"xYieldRequired\000"
 11151      6C645265 
 11151      71756972 
 11151      656400
 11152              	.LASF111:
 11153 0414 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 11153      6967696E 
 11153      616C4241 
 11153      53455052 
 11153      4900
 11154              	.LASF211:
 11155 0426 78546173 		.ascii	"xTaskGenericNotify\000"
 11155      6B47656E 
 11155      65726963 
 11155      4E6F7469 
 11155      667900
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 299


 11156              	.LASF21:
 11157 0439 666C6F61 		.ascii	"float\000"
 11157      7400
 11158              	.LASF186:
 11159 043f 7078556E 		.ascii	"pxUnblockedTCB\000"
 11159      626C6F63 
 11159      6B656454 
 11159      434200
 11160              	.LASF133:
 11161 044e 75735374 		.ascii	"usStackDepth\000"
 11161      61636B44 
 11161      65707468 
 11161      00
 11162              	.LASF205:
 11163 045b 78436C65 		.ascii	"xClearCountOnExit\000"
 11163      6172436F 
 11163      756E744F 
 11163      6E457869 
 11163      7400
 11164              	.LASF58:
 11165 046d 6E756D43 		.ascii	"numChannels\000"
 11165      68616E6E 
 11165      656C7300 
 11166              	.LASF87:
 11167 0479 65536574 		.ascii	"eSetValueWithOverwrite\000"
 11167      56616C75 
 11167      65576974 
 11167      684F7665 
 11167      72777269 
 11168              	.LASF14:
 11169 0490 6C6F6E67 		.ascii	"long long unsigned int\000"
 11169      206C6F6E 
 11169      6720756E 
 11169      7369676E 
 11169      65642069 
 11170              	.LASF154:
 11171 04a7 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 11171      6B476574 
 11171      5469636B 
 11171      436F756E 
 11171      7446726F 
 11172              	.LASF139:
 11173 04c0 75785361 		.ascii	"uxSavedInterruptState\000"
 11173      76656449 
 11173      6E746572 
 11173      72757074 
 11173      53746174 
 11174              	.LASF208:
 11175 04d6 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 11175      7473546F 
 11175      436C6561 
 11175      724F6E45 
 11175      6E747279 
 11176              	.LASF226:
 11177 04eb 7850656E 		.ascii	"xPendingReadyList\000"
 11177      64696E67 
 11177      52656164 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 300


 11177      794C6973 
 11177      7400
 11178              	.LASF72:
 11179 04fd 70785072 		.ascii	"pxPrevious\000"
 11179      6576696F 
 11179      757300
 11180              	.LASF45:
 11181 0508 72616E67 		.ascii	"rangeThres\000"
 11181      65546872 
 11181      657300
 11182              	.LASF8:
 11183 0513 5F5F7569 		.ascii	"__uint16_t\000"
 11183      6E743136 
 11183      5F7400
 11184              	.LASF199:
 11185 051e 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 11185      736B4765 
 11185      74546872 
 11185      6561644C 
 11185      6F63616C 
 11186              	.LASF200:
 11187 0541 70765265 		.ascii	"pvReturn\000"
 11187      7475726E 
 11187      00
 11188              	.LASF159:
 11189 054a 70785465 		.ascii	"pxTemp\000"
 11189      6D7000
 11190              	.LASF56:
 11191 0551 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 11191      74635F73 
 11191      61725F63 
 11191      6F6E6669 
 11191      675F7400 
 11192              	.LASF41:
 11193 0565 6374726C 		.ascii	"ctrl\000"
 11193      00
 11194              	.LASF193:
 11195 056a 76546173 		.ascii	"vTaskSuspendAll\000"
 11195      6B537573 
 11195      70656E64 
 11195      416C6C00 
 11196              	.LASF106:
 11197 057a 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 11197      72656164 
 11197      4C6F6361 
 11197      6C53746F 
 11197      72616765 
 11198              	.LASF37:
 11199 0597 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 11199      41525F52 
 11199      414E4745 
 11199      5F434F4E 
 11199      445F494E 
 11200              	.LASF27:
 11201 05b0 72784275 		.ascii	"rxBuf\000"
 11201      6600
 11202              	.LASF89:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 301


 11203 05b6 654E6F74 		.ascii	"eNotifyAction\000"
 11203      69667941 
 11203      6374696F 
 11203      6E00
 11204              	.LASF4:
 11205 05c4 73697A65 		.ascii	"size_t\000"
 11205      5F7400
 11206              	.LASF33:
 11207 05cb 63624576 		.ascii	"cbEvents\000"
 11207      656E7473 
 11207      00
 11208              	.LASF86:
 11209 05d4 65496E63 		.ascii	"eIncrement\000"
 11209      72656D65 
 11209      6E7400
 11210              	.LASF22:
 11211 05df 646F7562 		.ascii	"double\000"
 11211      6C6500
 11212              	.LASF76:
 11213 05e6 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 11213      495F4C49 
 11213      53545F49 
 11213      54454D00 
 11214              	.LASF184:
 11215 05f6 78576169 		.ascii	"xWaitIndefinitely\000"
 11215      74496E64 
 11215      6566696E 
 11215      6974656C 
 11215      7900
 11216              	.LASF231:
 11217 0608 78546963 		.ascii	"xTickCount\000"
 11217      6B436F75 
 11217      6E7400
 11218              	.LASF172:
 11219 0613 70727649 		.ascii	"prvIdleTask\000"
 11219      646C6554 
 11219      61736B00 
 11220              	.LASF151:
 11221 061f 76546173 		.ascii	"vTaskEndScheduler\000"
 11221      6B456E64 
 11221      53636865 
 11221      64756C65 
 11221      7200
 11222              	.LASF136:
 11223 0631 75785461 		.ascii	"uxTaskPriorityGet\000"
 11223      736B5072 
 11223      696F7269 
 11223      74794765 
 11223      7400
 11224              	.LASF132:
 11225 0643 78436F6E 		.ascii	"xConstTickCount\000"
 11225      73745469 
 11225      636B436F 
 11225      756E7400 
 11226              	.LASF252:
 11227 0653 764C6973 		.ascii	"vListInsertEnd\000"
 11227      74496E73 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 302


 11227      65727445 
 11227      6E6400
 11228              	.LASF229:
 11229 0662 78537573 		.ascii	"xSuspendedTaskList\000"
 11229      70656E64 
 11229      65645461 
 11229      736B4C69 
 11229      737400
 11230              	.LASF120:
 11231 0675 70634E61 		.ascii	"pcName\000"
 11231      6D6500
 11232              	.LASF196:
 11233 067c 78546173 		.ascii	"xTaskToSet\000"
 11233      6B546F53 
 11233      657400
 11234              	.LASF225:
 11235 0687 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 11235      6572666C 
 11235      6F774465 
 11235      6C617965 
 11235      64546173 
 11236              	.LASF180:
 11237 06a1 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 11237      6B506C61 
 11237      63654F6E 
 11237      4576656E 
 11237      744C6973 
 11238              	.LASF167:
 11239 06b7 76546173 		.ascii	"vTaskDelay\000"
 11239      6B44656C 
 11239      617900
 11240              	.LASF24:
 11241 06c2 5F426F6F 		.ascii	"_Bool\000"
 11241      6C00
 11242              	.LASF116:
 11243 06c8 70727644 		.ascii	"prvDeleteTCB\000"
 11243      656C6574 
 11243      65544342 
 11243      00
 11244              	.LASF55:
 11245 06d5 76726566 		.ascii	"vrefMvValue\000"
 11245      4D765661 
 11245      6C756500 
 11246              	.LASF107:
 11247 06e1 756C4E6F 		.ascii	"ulNotifiedValue\000"
 11247      74696669 
 11247      65645661 
 11247      6C756500 
 11248              	.LASF227:
 11249 06f1 78546173 		.ascii	"xTasksWaitingTermination\000"
 11249      6B735761 
 11249      6974696E 
 11249      67546572 
 11249      6D696E61 
 11250              	.LASF38:
 11251 070a 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 11251      41525F52 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 303


 11251      414E4745 
 11251      5F434F4E 
 11251      445F4142 
 11252              	.LASF185:
 11253 0722 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 11253      6B52656D 
 11253      6F766546 
 11253      726F6D45 
 11253      76656E74 
 11254              	.LASF16:
 11255 073b 63686172 		.ascii	"char\000"
 11255      00
 11256              	.LASF75:
 11257 0740 4C697374 		.ascii	"ListItem_t\000"
 11257      4974656D 
 11257      5F7400
 11258              	.LASF47:
 11259 074b 6368616E 		.ascii	"chanEn\000"
 11259      456E00
 11260              	.LASF88:
 11261 0752 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 11261      56616C75 
 11261      65576974 
 11261      686F7574 
 11261      4F766572 
 11262              	.LASF207:
 11263 076c 78546173 		.ascii	"xTaskNotifyWait\000"
 11263      6B4E6F74 
 11263      69667957 
 11263      61697400 
 11264              	.LASF108:
 11265 077c 75634E6F 		.ascii	"ucNotifyState\000"
 11265      74696679 
 11265      53746174 
 11265      6500
 11266              	.LASF121:
 11267 078a 756C5374 		.ascii	"ulStackDepth\000"
 11267      61636B44 
 11267      65707468 
 11267      00
 11268              	.LASF166:
 11269 0797 7853686F 		.ascii	"xShouldDelay\000"
 11269      756C6444 
 11269      656C6179 
 11269      00
 11270              	.LASF93:
 11271 07a4 54696D65 		.ascii	"TimeOut_t\000"
 11271      4F75745F 
 11271      7400
 11272              	.LASF81:
 11273 07ae 784C6973 		.ascii	"xListEnd\000"
 11273      74456E64 
 11273      00
 11274              	.LASF170:
 11275 07b7 784C6973 		.ascii	"xListIsEmpty\000"
 11275      74497345 
 11275      6D707479 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 304


 11275      00
 11276              	.LASF204:
 11277 07c4 756C5461 		.ascii	"ulTaskNotifyTake\000"
 11277      736B4E6F 
 11277      74696679 
 11277      54616B65 
 11277      00
 11278              	.LASF29:
 11279 07d5 72784275 		.ascii	"rxBufIdx\000"
 11279      66496478 
 11279      00
 11280              	.LASF77:
 11281 07de 4D696E69 		.ascii	"MiniListItem_t\000"
 11281      4C697374 
 11281      4974656D 
 11281      5F7400
 11282              	.LASF264:
 11283 07ed 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0"
 11283      72617465 
 11283      645F536F 
 11283      75726365 
 11283      5C50536F 
 11284 081b 5C536F75 		.ascii	"\\Source\\tasks.c\000"
 11284      7263655C 
 11284      7461736B 
 11284      732E6300 
 11285              	.LASF183:
 11286 082b 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 11286      6B506C61 
 11286      63654F6E 
 11286      4576656E 
 11286      744C6973 
 11287              	.LASF34:
 11288 084b 696E6974 		.ascii	"initKey\000"
 11288      4B657900 
 11289              	.LASF127:
 11290 0853 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 11290      64644E65 
 11290      77546173 
 11290      6B546F52 
 11290      65616479 
 11291              	.LASF17:
 11292 086c 75696E74 		.ascii	"uint8_t\000"
 11292      385F7400 
 11293              	.LASF26:
 11294 0874 73746174 		.ascii	"status\000"
 11294      757300
 11295              	.LASF124:
 11296 087b 70784E65 		.ascii	"pxNewTCB\000"
 11296      77544342 
 11296      00
 11297              	.LASF119:
 11298 0884 70785461 		.ascii	"pxTaskCode\000"
 11298      736B436F 
 11298      646500
 11299              	.LASF62:
 11300 088f 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 305


 11300      434F4E46 
 11300      49475F53 
 11300      54525543 
 11300      5400
 11301              	.LASF53:
 11302 08a1 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 11302      77697463 
 11302      68537143 
 11302      74726C00 
 11303              	.LASF98:
 11304 08b1 4D656D6F 		.ascii	"MemoryRegion_t\000"
 11304      72795265 
 11304      67696F6E 
 11304      5F7400
 11305              	.LASF238:
 11306 08c0 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 11306      74546173 
 11306      6B556E62 
 11306      6C6F636B 
 11306      54696D65 
 11307              	.LASF266:
 11308 08d5 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 11308      72745261 
 11308      69736542 
 11308      41534550 
 11308      524900
 11309              	.LASF46:
 11310 08e8 72616E67 		.ascii	"rangeCond\000"
 11310      65436F6E 
 11310      6400
 11311              	.LASF249:
 11312 08f2 7078506F 		.ascii	"pxPortInitialiseStack\000"
 11312      7274496E 
 11312      69746961 
 11312      6C697365 
 11312      53746163 
 11313              	.LASF1:
 11314 0908 6C6F6E67 		.ascii	"long long int\000"
 11314      206C6F6E 
 11314      6720696E 
 11314      7400
 11315              	.LASF137:
 11316 0916 75785265 		.ascii	"uxReturn\000"
 11316      7475726E 
 11316      00
 11317              	.LASF206:
 11318 091f 756C5265 		.ascii	"ulReturn\000"
 11318      7475726E 
 11318      00
 11319              	.LASF112:
 11320 0928 756C4E65 		.ascii	"ulNewBASEPRI\000"
 11320      77424153 
 11320      45505249 
 11320      00
 11321              	.LASF96:
 11322 0935 756C4C65 		.ascii	"ulLengthInBytes\000"
 11322      6E677468 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 306


 11322      496E4279 
 11322      74657300 
 11323              	.LASF65:
 11324 0945 42617365 		.ascii	"BaseType_t\000"
 11324      54797065 
 11324      5F7400
 11325              	.LASF175:
 11326 0950 756C4368 		.ascii	"ulCheckValue\000"
 11326      65636B56 
 11326      616C7565 
 11326      00
 11327              	.LASF115:
 11328 095d 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 11328      65736574 
 11328      4E657874 
 11328      5461736B 
 11328      556E626C 
 11329              	.LASF92:
 11330 0979 7854696D 		.ascii	"xTimeOnEntering\000"
 11330      654F6E45 
 11330      6E746572 
 11330      696E6700 
 11331              	.LASF142:
 11332 0989 75784E65 		.ascii	"uxNewPriority\000"
 11332      77507269 
 11332      6F726974 
 11332      7900
 11333              	.LASF63:
 11334 0997 5461736B 		.ascii	"TaskFunction_t\000"
 11334      46756E63 
 11334      74696F6E 
 11334      5F7400
 11335              	.LASF71:
 11336 09a6 70784E65 		.ascii	"pxNext\000"
 11336      787400
 11337              	.LASF215:
 11338 09ad 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 11338      72657669 
 11338      6F75734E 
 11338      6F746966 
 11338      69636174 
 11339              	.LASF247:
 11340 09ca 6D656D73 		.ascii	"memset\000"
 11340      657400
 11341              	.LASF190:
 11342 09d1 70785469 		.ascii	"pxTimeOut\000"
 11342      6D654F75 
 11342      7400
 11343              	.LASF138:
 11344 09db 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 11344      736B5072 
 11344      696F7269 
 11344      74794765 
 11344      7446726F 
 11345              	.LASF35:
 11346 09f4 63795F73 		.ascii	"cy_stc_scb_spi_context_t\000"
 11346      74635F73 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 307


 11346      63625F73 
 11346      70695F63 
 11346      6F6E7465 
 11347              	.LASF152:
 11348 0a0d 78546173 		.ascii	"xTaskGetTickCount\000"
 11348      6B476574 
 11348      5469636B 
 11348      436F756E 
 11348      7400
 11349              	.LASF48:
 11350 0a1f 6368616E 		.ascii	"chanConfig\000"
 11350      436F6E66 
 11350      696700
 11351              	.LASF31:
 11352 0a2a 74784275 		.ascii	"txBufSize\000"
 11352      6653697A 
 11352      6500
 11353              	.LASF237:
 11354 0a34 75785461 		.ascii	"uxTaskNumber\000"
 11354      736B4E75 
 11354      6D626572 
 11354      00
 11355              	.LASF83:
 11356 0a41 5461736B 		.ascii	"TaskHandle_t\000"
 11356      48616E64 
 11356      6C655F74 
 11356      00
 11357              	.LASF214:
 11358 0a4e 65416374 		.ascii	"eAction\000"
 11358      696F6E00 
 11359              	.LASF268:
 11360 0a56 756C4E65 		.ascii	"ulNewMaskValue\000"
 11360      774D6173 
 11360      6B56616C 
 11360      756500
 11361              	.LASF203:
 11362 0a65 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 11362      736B5265 
 11362      73657445 
 11362      76656E74 
 11362      4974656D 
 11363              	.LASF141:
 11364 0a7f 76546173 		.ascii	"vTaskPrioritySet\000"
 11364      6B507269 
 11364      6F726974 
 11364      79536574 
 11364      00
 11365              	.LASF82:
 11366 0a90 4C697374 		.ascii	"List_t\000"
 11366      5F7400
 11367              	.LASF156:
 11368 0a97 78546173 		.ascii	"xTaskToQuery\000"
 11368      6B546F51 
 11368      75657279 
 11368      00
 11369              	.LASF30:
 11370 0aa4 74784275 		.ascii	"txBuf\000"
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 308


 11370      6600
 11371              	.LASF67:
 11372 0aaa 5469636B 		.ascii	"TickType_t\000"
 11372      54797065 
 11372      5F7400
 11373              	.LASF212:
 11374 0ab5 78546173 		.ascii	"xTaskToNotify\000"
 11374      6B546F4E 
 11374      6F746966 
 11374      7900
 11375              	.LASF117:
 11376 0ac3 78546173 		.ascii	"xTask\000"
 11376      6B00
 11377              	.LASF85:
 11378 0ac9 65536574 		.ascii	"eSetBits\000"
 11378      42697473 
 11378      00
 11379              	.LASF2:
 11380 0ad2 6C6F6E67 		.ascii	"long double\000"
 11380      20646F75 
 11380      626C6500 
 11381              	.LASF94:
 11382 0ade 784D454D 		.ascii	"xMEMORY_REGION\000"
 11382      4F52595F 
 11382      52454749 
 11382      4F4E00
 11383              	.LASF18:
 11384 0aed 75696E74 		.ascii	"uint16_t\000"
 11384      31365F74 
 11384      00
 11385              	.LASF140:
 11386 0af6 76546173 		.ascii	"vTaskDelete\000"
 11386      6B44656C 
 11386      65746500 
 11387              	.LASF173:
 11388 0b02 76546173 		.ascii	"vTaskSwitchContext\000"
 11388      6B537769 
 11388      74636843 
 11388      6F6E7465 
 11388      787400
 11389              	.LASF236:
 11390 0b15 784E756D 		.ascii	"xNumOfOverflows\000"
 11390      4F664F76 
 11390      6572666C 
 11390      6F777300 
 11391              	.LASF74:
 11392 0b25 7076436F 		.ascii	"pvContainer\000"
 11392      6E746169 
 11392      6E657200 
 11393              	.LASF52:
 11394 0b31 6D757853 		.ascii	"muxSwitch\000"
 11394      77697463 
 11394      6800
 11395              	.LASF245:
 11396 0b3b 70784375 		.ascii	"pxCurrentTCB\000"
 11396      7272656E 
 11396      74544342 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 309


 11396      00
 11397              	.LASF6:
 11398 0b48 756E7369 		.ascii	"unsigned char\000"
 11398      676E6564 
 11398      20636861 
 11398      7200
 11399              	.LASF262:
 11400 0b56 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 11400      6C696361 
 11400      74696F6E 
 11400      53746163 
 11400      6B4F7665 
 11401              	.LASF7:
 11402 0b74 73686F72 		.ascii	"short int\000"
 11402      7420696E 
 11402      7400
 11403              	.LASF244:
 11404 0b7e 4144435F 		.ascii	"ADC_allConfigs\000"
 11404      616C6C43 
 11404      6F6E6669 
 11404      677300
 11405              	.LASF248:
 11406 0b8d 764C6973 		.ascii	"vListInitialiseItem\000"
 11406      74496E69 
 11406      7469616C 
 11406      69736549 
 11406      74656D00 
 11407              	.LASF118:
 11408 0ba1 70727649 		.ascii	"prvInitialiseNewTask\000"
 11408      6E697469 
 11408      616C6973 
 11408      654E6577 
 11408      5461736B 
 11409              	.LASF122:
 11410 0bb6 70765061 		.ascii	"pvParameters\000"
 11410      72616D65 
 11410      74657273 
 11410      00
 11411              	.LASF70:
 11412 0bc3 78497465 		.ascii	"xItemValue\000"
 11412      6D56616C 
 11412      756500
 11413              	.LASF11:
 11414 0bce 6C6F6E67 		.ascii	"long int\000"
 11414      20696E74 
 11414      00
 11415              	.LASF241:
 11416 0bd7 49544D5F 		.ascii	"ITM_RxBuffer\000"
 11416      52784275 
 11416      66666572 
 11416      00
 11417              	.LASF160:
 11418 0be4 78546173 		.ascii	"xTaskResumeAll\000"
 11418      6B526573 
 11418      756D6541 
 11418      6C6C00
 11419              	.LASF219:
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 310


 11420 0bf3 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 11420      6B4E6F74 
 11420      69667947 
 11420      69766546 
 11420      726F6D49 
 11421              	.LASF224:
 11422 0c0a 70784465 		.ascii	"pxDelayedTaskList\000"
 11422      6C617965 
 11422      64546173 
 11422      6B4C6973 
 11422      7400
 11423              	.LASF171:
 11424 0c1c 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 11424      61736B49 
 11424      73546173 
 11424      6B537573 
 11424      70656E64 
 11425              	.LASF158:
 11426 0c33 78537769 		.ascii	"xSwitchRequired\000"
 11426      74636852 
 11426      65717569 
 11426      72656400 
 11427              	.LASF104:
 11428 0c43 70785374 		.ascii	"pxStack\000"
 11428      61636B00 
 11429              	.LASF134:
 11430 0c4b 78546173 		.ascii	"xTaskToDelete\000"
 11430      6B546F44 
 11430      656C6574 
 11430      6500
 11431              	.LASF213:
 11432 0c59 756C5661 		.ascii	"ulValue\000"
 11432      6C756500 
 11433              	.LASF179:
 11434 0c61 78546173 		.ascii	"xTaskToSuspend\000"
 11434      6B546F53 
 11434      75737065 
 11434      6E6400
 11435              	.LASF191:
 11436 0c70 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 11436      6B436865 
 11436      636B466F 
 11436      7254696D 
 11436      654F7574 
 11437              	.LASF260:
 11438 0c85 76506F72 		.ascii	"vPortEndScheduler\000"
 11438      74456E64 
 11438      53636865 
 11438      64756C65 
 11438      7200
 11439              	.LASF246:
 11440 0c97 76506F72 		.ascii	"vPortFree\000"
 11440      74467265 
 11440      6500
 11441              	.LASF265:
 11442 0ca1 433A5C55 		.ascii	"C:\\Users\\Agentos\\Documents\\PSoC Creator\\lab11\\"
 11442      73657273 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 311


 11442      5C416765 
 11442      6E746F73 
 11442      5C446F63 
 11443 0ccf 6C616231 		.ascii	"lab11.cydsn\000"
 11443      312E6379 
 11443      64736E00 
 11444              	.LASF232:
 11445 0cdb 7578546F 		.ascii	"uxTopReadyPriority\000"
 11445      70526561 
 11445      64795072 
 11445      696F7269 
 11445      747900
 11446              	.LASF164:
 11447 0cee 70785072 		.ascii	"pxPreviousWakeTime\000"
 11447      6576696F 
 11447      75735761 
 11447      6B655469 
 11447      6D6500
 11448              	.LASF5:
 11449 0d01 5F5F7569 		.ascii	"__uint8_t\000"
 11449      6E74385F 
 11449      7400
 11450              	.LASF197:
 11451 0d0b 78496E64 		.ascii	"xIndex\000"
 11451      657800
 11452              	.LASF239:
 11453 0d12 7849646C 		.ascii	"xIdleTaskHandle\000"
 11453      65546173 
 11453      6B48616E 
 11453      646C6500 
 11454              	.LASF222:
 11455 0d22 7844656C 		.ascii	"xDelayedTaskList1\000"
 11455      61796564 
 11455      5461736B 
 11455      4C697374 
 11455      3100
 11456              	.LASF148:
 11457 0d34 78546173 		.ascii	"xTaskResumeFromISR\000"
 11457      6B526573 
 11457      756D6546 
 11457      726F6D49 
 11457      535200
 11458              	.LASF68:
 11459 0d47 63795F73 		.ascii	"cy_stc_scb_spi_context\000"
 11459      74635F73 
 11459      63625F73 
 11459      70695F63 
 11459      6F6E7465 
 11460              	.LASF210:
 11461 0d5e 70756C4E 		.ascii	"pulNotificationValue\000"
 11461      6F746966 
 11461      69636174 
 11461      696F6E56 
 11461      616C7565 
 11462              	.LASF44:
 11463 0d73 73616D70 		.ascii	"sampleTime23\000"
 11463      6C655469 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 312


 11463      6D653233 
 11463      00
 11464              	.LASF113:
 11465 0d80 78526574 		.ascii	"xReturn\000"
 11465      75726E00 
 11466              	.LASF15:
 11467 0d88 73697A65 		.ascii	"sizetype\000"
 11467      74797065 
 11467      00
 11468              	.LASF194:
 11469 0d91 76546173 		.ascii	"vTaskMissedYield\000"
 11469      6B4D6973 
 11469      73656459 
 11469      69656C64 
 11469      00
 11470              	.LASF234:
 11471 0da2 75785065 		.ascii	"uxPendedTicks\000"
 11471      6E646564 
 11471      5469636B 
 11471      7300
 11472              	.LASF13:
 11473 0db0 6C6F6E67 		.ascii	"long unsigned int\000"
 11473      20756E73 
 11473      69676E65 
 11473      6420696E 
 11473      7400
 11474              	.LASF155:
 11475 0dc2 70635461 		.ascii	"pcTaskGetName\000"
 11475      736B4765 
 11475      744E616D 
 11475      6500
 11476              	.LASF19:
 11477 0dd0 696E7433 		.ascii	"int32_t\000"
 11477      325F7400 
 11478              	.LASF153:
 11479 0dd8 78546963 		.ascii	"xTicks\000"
 11479      6B7300
 11480              	.LASF150:
 11481 0ddf 76546173 		.ascii	"vTaskStartScheduler\000"
 11481      6B537461 
 11481      72745363 
 11481      68656475 
 11481      6C657200 
 11482              	.LASF130:
 11483 0df3 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 11483      426C6F63 
 11483      6B496E64 
 11483      6566696E 
 11483      6974656C 
 11484              	.LASF174:
 11485 0e09 70756C53 		.ascii	"pulStack\000"
 11485      7461636B 
 11485      00
 11486              	.LASF42:
 11487 0e12 73616D70 		.ascii	"sampleCtrl\000"
 11487      6C654374 
 11487      726C00
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 313


 11488              	.LASF95:
 11489 0e1d 70764261 		.ascii	"pvBaseAddress\000"
 11489      73654164 
 11489      64726573 
 11489      7300
 11490              	.LASF168:
 11491 0e2b 78546963 		.ascii	"xTicksToDelay\000"
 11491      6B73546F 
 11491      44656C61 
 11491      7900
 11492              	.LASF105:
 11493 0e39 70635461 		.ascii	"pcTaskName\000"
 11493      736B4E61 
 11493      6D6500
 11494              	.LASF182:
 11495 0e44 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 11495      6B506C61 
 11495      63654F6E 
 11495      556E6F72 
 11495      64657265 
 11496              	.LASF187:
 11497 0e63 78546173 		.ascii	"xTaskRemoveFromUnorderedEventList\000"
 11497      6B52656D 
 11497      6F766546 
 11497      726F6D55 
 11497      6E6F7264 
 11498              	.LASF12:
 11499 0e85 5F5F7569 		.ascii	"__uint32_t\000"
 11499      6E743332 
 11499      5F7400
 11500              	.LASF250:
 11501 0e90 764C6973 		.ascii	"vListInitialise\000"
 11501      74496E69 
 11501      7469616C 
 11501      69736500 
 11502              	.LASF257:
 11503 0ea0 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
 11503      7456616C 
 11503      69646174 
 11503      65496E74 
 11503      65727275 
 11504              	.LASF255:
 11505 0ebf 764C6973 		.ascii	"vListInsert\000"
 11505      74496E73 
 11505      65727400 
 11506              	.LASF176:
 11507 0ecb 7578546F 		.ascii	"uxTopPriority\000"
 11507      70507269 
 11507      6F726974 
 11507      7900
 11508              	.LASF163:
 11509 0ed9 76546173 		.ascii	"vTaskDelayUntil\000"
 11509      6B44656C 
 11509      6179556E 
 11509      74696C00 
 11510              	.LASF102:
 11511 0ee9 78457665 		.ascii	"xEventListItem\000"
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 314


 11511      6E744C69 
 11511      73744974 
 11511      656D00
 11512              	.LASF144:
 11513 0ef8 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 11513      696F7269 
 11513      74795573 
 11513      65644F6E 
 11513      456E7472 
 11514              	.LASF110:
 11515 0f0e 5443425F 		.ascii	"TCB_t\000"
 11515      7400
 11516              	.LASF129:
 11517 0f14 78546963 		.ascii	"xTicksToWait\000"
 11517      6B73546F 
 11517      57616974 
 11517      00
 11518              	.LASF73:
 11519 0f21 70764F77 		.ascii	"pvOwner\000"
 11519      6E657200 
 11520              	.LASF61:
 11521 0f29 636C6B44 		.ascii	"clkDivider\000"
 11521      69766964 
 11521      657200
 11522              	.LASF178:
 11523 0f34 76546173 		.ascii	"vTaskSuspend\000"
 11523      6B537573 
 11523      70656E64 
 11523      00
 11524              	.LASF161:
 11525 0f41 78416C72 		.ascii	"xAlreadyYielded\000"
 11525      65616479 
 11525      5969656C 
 11525      64656400 
 11526              	.LASF201:
 11527 0f51 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 11527      6B476574 
 11527      43757272 
 11527      656E7454 
 11527      61736B48 
 11528              	.LASF135:
 11529 0f6b 78546173 		.ascii	"xTaskCreate\000"
 11529      6B437265 
 11529      61746500 
 11530              	.LASF243:
 11531 0f77 4144435F 		.ascii	"ADC_currentConfig\000"
 11531      63757272 
 11531      656E7443 
 11531      6F6E6669 
 11531      6700
 11532              	.LASF125:
 11533 0f89 78526567 		.ascii	"xRegions\000"
 11533      696F6E73 
 11533      00
 11534              	.LASF128:
 11535 0f92 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 11535      64644375 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 315


 11535      7272656E 
 11535      74546173 
 11535      6B546F44 
 11536              	.LASF230:
 11537 0fb1 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 11537      7272656E 
 11537      744E756D 
 11537      6265724F 
 11537      66546173 
 11538              	.LASF165:
 11539 0fc8 7854696D 		.ascii	"xTimeIncrement\000"
 11539      65496E63 
 11539      72656D65 
 11539      6E7400
 11540              	.LASF3:
 11541 0fd7 7369676E 		.ascii	"signed char\000"
 11541      65642063 
 11541      68617200 
 11542              	.LASF9:
 11543 0fe3 73686F72 		.ascii	"short unsigned int\000"
 11543      7420756E 
 11543      7369676E 
 11543      65642069 
 11543      6E7400
 11544              	.LASF131:
 11545 0ff6 7854696D 		.ascii	"xTimeToWake\000"
 11545      65546F57 
 11545      616B6500 
 11546              	.LASF220:
 11547 1002 78546173 		.ascii	"xTaskNotifyStateClear\000"
 11547      6B4E6F74 
 11547      69667953 
 11547      74617465 
 11547      436C6561 
 11548              	.LASF114:
 11549 1018 70785443 		.ascii	"pxTCB\000"
 11549      4200
 11550              	.LASF60:
 11551 101e 6D697363 		.ascii	"miscConfig\000"
 11551      436F6E66 
 11551      696700
 11552              	.LASF23:
 11553 1029 75696E74 		.ascii	"uint8\000"
 11553      3800
 11554              	.LASF54:
 11555 102f 636F6E66 		.ascii	"configRouting\000"
 11555      6967526F 
 11555      7574696E 
 11555      6700
 11556              	.LASF240:
 11557 103d 75785363 		.ascii	"uxSchedulerSuspended\000"
 11557      68656475 
 11557      6C657253 
 11557      75737065 
 11557      6E646564 
 11558              	.LASF51:
 11559 1052 72616E67 		.ascii	"rangeIntrMask\000"
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 316


 11559      65496E74 
 11559      724D6173 
 11559      6B00
 11560              	.LASF40:
 11561 1060 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 11561      6E5F7361 
 11561      725F7261 
 11561      6E67655F 
 11561      64657465 
 11562              	.LASF100:
 11563 1083 7078546F 		.ascii	"pxTopOfStack\000"
 11563      704F6653 
 11563      7461636B 
 11563      00
 11564              	.LASF146:
 11565 1090 76546173 		.ascii	"vTaskResume\000"
 11565      6B526573 
 11565      756D6500 
 11566              	.LASF256:
 11567 109c 7076506F 		.ascii	"pvPortMalloc\000"
 11567      72744D61 
 11567      6C6C6F63 
 11567      00
 11568              	.LASF126:
 11569 10a9 70727649 		.ascii	"prvInitialiseTaskLists\000"
 11569      6E697469 
 11569      616C6973 
 11569      65546173 
 11569      6B4C6973 
 11570              	.LASF188:
 11571 10c0 70784576 		.ascii	"pxEventListItem\000"
 11571      656E744C 
 11571      69737449 
 11571      74656D00 
 11572              	.LASF198:
 11573 10d0 70765661 		.ascii	"pvValue\000"
 11573      6C756500 
 11574              	.LASF123:
 11575 10d8 70784372 		.ascii	"pxCreatedTask\000"
 11575      65617465 
 11575      64546173 
 11575      6B00
 11576              	.LASF169:
 11577 10e6 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 11577      6865636B 
 11577      5461736B 
 11577      73576169 
 11577      74696E67 
 11578              	.LASF149:
 11579 1106 75785361 		.ascii	"uxSavedInterruptStatus\000"
 11579      76656449 
 11579      6E746572 
 11579      72757074 
 11579      53746174 
 11580              	.LASF49:
 11581 111d 696E7472 		.ascii	"intrMask\000"
 11581      4D61736B 
ARM GAS  C:\Users\Agentos\AppData\Local\Temp\ccUPZDrf.s 			page 317


 11581      00
 11582              	.LASF28:
 11583 1126 72784275 		.ascii	"rxBufSize\000"
 11583      6653697A 
 11583      6500
 11584              	.LASF143:
 11585 1130 75784375 		.ascii	"uxCurrentBasePriority\000"
 11585      7272656E 
 11585      74426173 
 11585      65507269 
 11585      6F726974 
 11586              	.LASF235:
 11587 1146 78596965 		.ascii	"xYieldPending\000"
 11587      6C645065 
 11587      6E64696E 
 11587      6700
 11588              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
